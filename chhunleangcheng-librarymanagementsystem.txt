Directory structure:
└── chhunleangcheng-librarymanagementsystem/
    ├── README.md
    ├── artisan
    ├── composer.json
    ├── composer.lock
    ├── package.json
    ├── phpunit.xml
    ├── postcss.config.js
    ├── tailwind.config.js
    ├── vite.config.js
    ├── .editorconfig
    ├── .env.example
    ├── app/
    │   ├── Http/
    │   │   ├── Controllers/
    │   │   │   ├── BookController.php
    │   │   │   ├── BorrowingController.php
    │   │   │   ├── Controller.php
    │   │   │   ├── DashboardController.php
    │   │   │   ├── MemberController.php
    │   │   │   ├── ProfileController.php
    │   │   │   └── Auth/
    │   │   │       ├── AuthenticatedSessionController.php
    │   │   │       ├── ConfirmablePasswordController.php
    │   │   │       ├── EmailVerificationNotificationController.php
    │   │   │       ├── EmailVerificationPromptController.php
    │   │   │       ├── NewPasswordController.php
    │   │   │       ├── PasswordController.php
    │   │   │       ├── PasswordResetLinkController.php
    │   │   │       ├── RegisteredUserController.php
    │   │   │       └── VerifyEmailController.php
    │   │   └── Requests/
    │   │       ├── ProfileUpdateRequest.php
    │   │       ├── StoreBookRequest.php
    │   │       ├── StoreBorrowingRequest.php
    │   │       ├── StoreMemberRequest.php
    │   │       ├── UpdateBookRequest.php
    │   │       ├── UpdateBorrowingRequest.php
    │   │       ├── UpdateMemberRequest.php
    │   │       └── Auth/
    │   │           └── LoginRequest.php
    │   ├── Models/
    │   │   ├── Book.php
    │   │   ├── Borrowing.php
    │   │   ├── Member.php
    │   │   └── User.php
    │   ├── Providers/
    │   │   └── AppServiceProvider.php
    │   └── View/
    │       └── Components/
    │           ├── AppLayout.php
    │           └── GuestLayout.php
    ├── bootstrap/
    │   ├── app.php
    │   └── providers.php
    ├── config/
    │   ├── app.php
    │   ├── auth.php
    │   ├── cache.php
    │   ├── database.php
    │   ├── filesystems.php
    │   ├── logging.php
    │   ├── mail.php
    │   ├── queue.php
    │   ├── services.php
    │   └── session.php
    ├── database/
    │   ├── factories/
    │   │   ├── BookFactory.php
    │   │   ├── BorrowingFactory.php
    │   │   ├── MemberFactory.php
    │   │   └── UserFactory.php
    │   ├── migrations/
    │   │   ├── 0001_01_01_000000_create_users_table.php
    │   │   ├── 0001_01_01_000001_create_cache_table.php
    │   │   ├── 0001_01_01_000002_create_jobs_table.php
    │   │   ├── 2025_06_20_042513_create_books_table.php
    │   │   ├── 2025_06_20_042519_create_members_table.php
    │   │   ├── 2025_06_20_042529_create_borrowings_table.php
    │   │   └── 2025_06_20_052931_add_indexes_to_borrowings_table.php
    │   └── seeders/
    │       ├── BookSeeder.php
    │       ├── BorrowingSeeder.php
    │       ├── DatabaseSeeder.php
    │       ├── MemberSeeder.php
    │       └── UserSeeder.php
    ├── public/
    │   ├── index.php
    │   ├── robots.txt
    │   └── .htaccess
    ├── resources/
    │   ├── css/
    │   │   └── app.css
    │   ├── js/
    │   │   ├── app.js
    │   │   └── bootstrap.js
    │   └── views/
    │       ├── dashboard.blade.php
    │       ├── welcome.blade.php
    │       ├── auth/
    │       │   ├── confirm-password.blade.php
    │       │   ├── forgot-password.blade.php
    │       │   ├── login.blade.php
    │       │   ├── register.blade.php
    │       │   ├── reset-password.blade.php
    │       │   └── verify-email.blade.php
    │       ├── books/
    │       │   ├── create.blade.php
    │       │   ├── edit.blade.php
    │       │   ├── index.blade.php
    │       │   └── show.blade.php
    │       ├── borrowings/
    │       │   ├── create.blade.php
    │       │   ├── edit.blade.php
    │       │   ├── history-pdf.blade.php
    │       │   ├── index.blade.php
    │       │   └── show.blade.php
    │       ├── components/
    │       │   ├── application-logo.blade.php
    │       │   ├── auth-session-status.blade.php
    │       │   ├── danger-button.blade.php
    │       │   ├── dropdown-link.blade.php
    │       │   ├── dropdown.blade.php
    │       │   ├── input-error.blade.php
    │       │   ├── input-label.blade.php
    │       │   ├── modal.blade.php
    │       │   ├── nav-link.blade.php
    │       │   ├── primary-button.blade.php
    │       │   ├── responsive-nav-link.blade.php
    │       │   ├── secondary-button.blade.php
    │       │   └── text-input.blade.php
    │       ├── layouts/
    │       │   ├── app.blade.php
    │       │   ├── guest.blade.php
    │       │   └── navigation.blade.php
    │       ├── members/
    │       │   ├── create.blade.php
    │       │   ├── edit.blade.php
    │       │   ├── index.blade.php
    │       │   └── show.blade.php
    │       └── profile/
    │           ├── edit.blade.php
    │           └── partials/
    │               ├── delete-user-form.blade.php
    │               ├── update-password-form.blade.php
    │               └── update-profile-information-form.blade.php
    ├── routes/
    │   ├── auth.php
    │   ├── console.php
    │   └── web.php
    └── tests/
        ├── TestCase.php
        ├── Feature/
        │   ├── ExampleTest.php
        │   ├── ProfileTest.php
        │   └── Auth/
        │       ├── AuthenticationTest.php
        │       ├── EmailVerificationTest.php
        │       ├── PasswordConfirmationTest.php
        │       ├── PasswordResetTest.php
        │       ├── PasswordUpdateTest.php
        │       └── RegistrationTest.php
        └── Unit/
            └── ExampleTest.php

================================================
FILE: README.md
================================================
<p align="center"><a href="https://laravel.com" target="_blank"><img src="https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg" width="400" alt="Laravel Logo"></a></p>

<p align="center">
<a href="https://github.com/laravel/framework/actions"><img src="https://github.com/laravel/framework/workflows/tests/badge.svg" alt="Build Status"></a>
<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/dt/laravel/framework" alt="Total Downloads"></a>
<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/v/laravel/framework" alt="Latest Stable Version"></a>
<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/l/laravel/framework" alt="License"></a>
</p>

## About Laravel

Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:

- [Simple, fast routing engine](https://laravel.com/docs/routing).
- [Powerful dependency injection container](https://laravel.com/docs/container).
- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.
- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).
- Database agnostic [schema migrations](https://laravel.com/docs/migrations).
- [Robust background job processing](https://laravel.com/docs/queues).
- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).

Laravel is accessible, powerful, and provides tools required for large, robust applications.

## Learning Laravel

Laravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.

You may also try the [Laravel Bootcamp](https://bootcamp.laravel.com), where you will be guided through building a modern Laravel application from scratch.

If you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains thousands of video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.

## Laravel Sponsors

We would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the [Laravel Partners program](https://partners.laravel.com).

### Premium Partners

- **[Vehikl](https://vehikl.com)**
- **[Tighten Co.](https://tighten.co)**
- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**
- **[64 Robots](https://64robots.com)**
- **[Curotec](https://www.curotec.com/services/technologies/laravel)**
- **[DevSquad](https://devsquad.com/hire-laravel-developers)**
- **[Redberry](https://redberry.international/laravel-development)**
- **[Active Logic](https://activelogic.com)**

## Contributing

Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).

## Code of Conduct

In order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).

## Security Vulnerabilities

If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.

## License

The Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).



================================================
FILE: artisan
================================================
#!/usr/bin/env php
<?php

use Illuminate\Foundation\Application;
use Symfony\Component\Console\Input\ArgvInput;

define('LARAVEL_START', microtime(true));

// Register the Composer autoloader...
require __DIR__.'/vendor/autoload.php';

// Bootstrap Laravel and handle the command...
/** @var Application $app */
$app = require_once __DIR__.'/bootstrap/app.php';

$status = $app->handleCommand(new ArgvInput);

exit($status);



================================================
FILE: composer.json
================================================
{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "laravel/laravel",
    "type": "project",
    "description": "The skeleton application for the Laravel framework.",
    "keywords": ["laravel", "framework"],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "laravel/framework": "^12.0",
        "laravel/tinker": "^2.10.1"
    },
    "require-dev": {
        "fakerphp/faker": "^1.23",
        "laravel/breeze": "^2.3",
        "laravel/pail": "^1.2.2",
        "laravel/pint": "^1.13",
        "laravel/sail": "^1.41",
        "mockery/mockery": "^1.6",
        "nunomaduro/collision": "^8.6",
        "phpunit/phpunit": "^11.5.3"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --tries=1\" \"php artisan pail --timeout=0\" \"npm run dev\" --names=server,queue,logs,vite"
        ],
        "test": [
            "@php artisan config:clear --ansi",
            "@php artisan test"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "stable",
    "prefer-stable": true
}



================================================
FILE: composer.lock
================================================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "d6c73ea5dadcd971050eeb806511e47d",
    "packages": [
        {
            "name": "brick/math",
            "version": "0.13.1",
            "source": {
                "type": "git",
                "url": "https://github.com/brick/math.git",
                "reference": "fc7ed316430118cc7836bf45faff18d5dfc8de04"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/brick/math/zipball/fc7ed316430118cc7836bf45faff18d5dfc8de04",
                "reference": "fc7ed316430118cc7836bf45faff18d5dfc8de04",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "php-coveralls/php-coveralls": "^2.2",
                "phpunit/phpunit": "^10.1",
                "vimeo/psalm": "6.8.8"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Brick\\Math\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Arbitrary-precision arithmetic library",
            "keywords": [
                "Arbitrary-precision",
                "BigInteger",
                "BigRational",
                "arithmetic",
                "bigdecimal",
                "bignum",
                "bignumber",
                "brick",
                "decimal",
                "integer",
                "math",
                "mathematics",
                "rational"
            ],
            "support": {
                "issues": "https://github.com/brick/math/issues",
                "source": "https://github.com/brick/math/tree/0.13.1"
            },
            "funding": [
                {
                    "url": "https://github.com/BenMorel",
                    "type": "github"
                }
            ],
            "time": "2025-03-29T13:50:30+00:00"
        },
        {
            "name": "carbonphp/carbon-doctrine-types",
            "version": "3.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/CarbonPHP/carbon-doctrine-types.git",
                "reference": "18ba5ddfec8976260ead6e866180bd5d2f71aa1d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/CarbonPHP/carbon-doctrine-types/zipball/18ba5ddfec8976260ead6e866180bd5d2f71aa1d",
                "reference": "18ba5ddfec8976260ead6e866180bd5d2f71aa1d",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "conflict": {
                "doctrine/dbal": "<4.0.0 || >=5.0.0"
            },
            "require-dev": {
                "doctrine/dbal": "^4.0.0",
                "nesbot/carbon": "^2.71.0 || ^3.0.0",
                "phpunit/phpunit": "^10.3"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Carbon\\Doctrine\\": "src/Carbon/Doctrine/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "KyleKatarn",
                    "email": "kylekatarnls@gmail.com"
                }
            ],
            "description": "Types to use Carbon in Doctrine",
            "keywords": [
                "carbon",
                "date",
                "datetime",
                "doctrine",
                "time"
            ],
            "support": {
                "issues": "https://github.com/CarbonPHP/carbon-doctrine-types/issues",
                "source": "https://github.com/CarbonPHP/carbon-doctrine-types/tree/3.2.0"
            },
            "funding": [
                {
                    "url": "https://github.com/kylekatarnls",
                    "type": "github"
                },
                {
                    "url": "https://opencollective.com/Carbon",
                    "type": "open_collective"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/nesbot/carbon",
                    "type": "tidelift"
                }
            ],
            "time": "2024-02-09T16:56:22+00:00"
        },
        {
            "name": "dflydev/dot-access-data",
            "version": "v3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/dflydev/dflydev-dot-access-data.git",
                "reference": "a23a2bf4f31d3518f3ecb38660c95715dfead60f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/dflydev/dflydev-dot-access-data/zipball/a23a2bf4f31d3518f3ecb38660c95715dfead60f",
                "reference": "a23a2bf4f31d3518f3ecb38660c95715dfead60f",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0"
            },
            "require-dev": {
                "phpstan/phpstan": "^0.12.42",
                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.3",
                "scrutinizer/ocular": "1.6.0",
                "squizlabs/php_codesniffer": "^3.5",
                "vimeo/psalm": "^4.0.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Dflydev\\DotAccessData\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Dragonfly Development Inc.",
                    "email": "info@dflydev.com",
                    "homepage": "http://dflydev.com"
                },
                {
                    "name": "Beau Simensen",
                    "email": "beau@dflydev.com",
                    "homepage": "http://beausimensen.com"
                },
                {
                    "name": "Carlos Frutos",
                    "email": "carlos@kiwing.it",
                    "homepage": "https://github.com/cfrutos"
                },
                {
                    "name": "Colin O'Dell",
                    "email": "colinodell@gmail.com",
                    "homepage": "https://www.colinodell.com"
                }
            ],
            "description": "Given a deep data structure, access data by dot notation.",
            "homepage": "https://github.com/dflydev/dflydev-dot-access-data",
            "keywords": [
                "access",
                "data",
                "dot",
                "notation"
            ],
            "support": {
                "issues": "https://github.com/dflydev/dflydev-dot-access-data/issues",
                "source": "https://github.com/dflydev/dflydev-dot-access-data/tree/v3.0.3"
            },
            "time": "2024-07-08T12:26:09+00:00"
        },
        {
            "name": "doctrine/inflector",
            "version": "2.0.10",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/inflector.git",
                "reference": "5817d0659c5b50c9b950feb9af7b9668e2c436bc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/inflector/zipball/5817d0659c5b50c9b950feb9af7b9668e2c436bc",
                "reference": "5817d0659c5b50c9b950feb9af7b9668e2c436bc",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "require-dev": {
                "doctrine/coding-standard": "^11.0",
                "phpstan/phpstan": "^1.8",
                "phpstan/phpstan-phpunit": "^1.1",
                "phpstan/phpstan-strict-rules": "^1.3",
                "phpunit/phpunit": "^8.5 || ^9.5",
                "vimeo/psalm": "^4.25 || ^5.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Doctrine\\Inflector\\": "lib/Doctrine/Inflector"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Guilherme Blanco",
                    "email": "guilhermeblanco@gmail.com"
                },
                {
                    "name": "Roman Borschel",
                    "email": "roman@code-factory.org"
                },
                {
                    "name": "Benjamin Eberlei",
                    "email": "kontakt@beberlei.de"
                },
                {
                    "name": "Jonathan Wage",
                    "email": "jonwage@gmail.com"
                },
                {
                    "name": "Johannes Schmitt",
                    "email": "schmittjoh@gmail.com"
                }
            ],
            "description": "PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper/lowercase and singular/plural forms of words.",
            "homepage": "https://www.doctrine-project.org/projects/inflector.html",
            "keywords": [
                "inflection",
                "inflector",
                "lowercase",
                "manipulation",
                "php",
                "plural",
                "singular",
                "strings",
                "uppercase",
                "words"
            ],
            "support": {
                "issues": "https://github.com/doctrine/inflector/issues",
                "source": "https://github.com/doctrine/inflector/tree/2.0.10"
            },
            "funding": [
                {
                    "url": "https://www.doctrine-project.org/sponsorship.html",
                    "type": "custom"
                },
                {
                    "url": "https://www.patreon.com/phpdoctrine",
                    "type": "patreon"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finflector",
                    "type": "tidelift"
                }
            ],
            "time": "2024-02-18T20:23:39+00:00"
        },
        {
            "name": "doctrine/lexer",
            "version": "3.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/lexer.git",
                "reference": "31ad66abc0fc9e1a1f2d9bc6a42668d2fbbcd6dd"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/lexer/zipball/31ad66abc0fc9e1a1f2d9bc6a42668d2fbbcd6dd",
                "reference": "31ad66abc0fc9e1a1f2d9bc6a42668d2fbbcd6dd",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "doctrine/coding-standard": "^12",
                "phpstan/phpstan": "^1.10",
                "phpunit/phpunit": "^10.5",
                "psalm/plugin-phpunit": "^0.18.3",
                "vimeo/psalm": "^5.21"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Doctrine\\Common\\Lexer\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Guilherme Blanco",
                    "email": "guilhermeblanco@gmail.com"
                },
                {
                    "name": "Roman Borschel",
                    "email": "roman@code-factory.org"
                },
                {
                    "name": "Johannes Schmitt",
                    "email": "schmittjoh@gmail.com"
                }
            ],
            "description": "PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.",
            "homepage": "https://www.doctrine-project.org/projects/lexer.html",
            "keywords": [
                "annotations",
                "docblock",
                "lexer",
                "parser",
                "php"
            ],
            "support": {
                "issues": "https://github.com/doctrine/lexer/issues",
                "source": "https://github.com/doctrine/lexer/tree/3.0.1"
            },
            "funding": [
                {
                    "url": "https://www.doctrine-project.org/sponsorship.html",
                    "type": "custom"
                },
                {
                    "url": "https://www.patreon.com/phpdoctrine",
                    "type": "patreon"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Flexer",
                    "type": "tidelift"
                }
            ],
            "time": "2024-02-05T11:56:58+00:00"
        },
        {
            "name": "dragonmantank/cron-expression",
            "version": "v3.4.0",
            "source": {
                "type": "git",
                "url": "https://github.com/dragonmantank/cron-expression.git",
                "reference": "8c784d071debd117328803d86b2097615b457500"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/dragonmantank/cron-expression/zipball/8c784d071debd117328803d86b2097615b457500",
                "reference": "8c784d071debd117328803d86b2097615b457500",
                "shasum": ""
            },
            "require": {
                "php": "^7.2|^8.0",
                "webmozart/assert": "^1.0"
            },
            "replace": {
                "mtdowling/cron-expression": "^1.0"
            },
            "require-dev": {
                "phpstan/extension-installer": "^1.0",
                "phpstan/phpstan": "^1.0",
                "phpunit/phpunit": "^7.0|^8.0|^9.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Cron\\": "src/Cron/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Chris Tankersley",
                    "email": "chris@ctankersley.com",
                    "homepage": "https://github.com/dragonmantank"
                }
            ],
            "description": "CRON for PHP: Calculate the next or previous run date and determine if a CRON expression is due",
            "keywords": [
                "cron",
                "schedule"
            ],
            "support": {
                "issues": "https://github.com/dragonmantank/cron-expression/issues",
                "source": "https://github.com/dragonmantank/cron-expression/tree/v3.4.0"
            },
            "funding": [
                {
                    "url": "https://github.com/dragonmantank",
                    "type": "github"
                }
            ],
            "time": "2024-10-09T13:47:03+00:00"
        },
        {
            "name": "egulias/email-validator",
            "version": "4.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/egulias/EmailValidator.git",
                "reference": "d42c8731f0624ad6bdc8d3e5e9a4524f68801cfa"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/d42c8731f0624ad6bdc8d3e5e9a4524f68801cfa",
                "reference": "d42c8731f0624ad6bdc8d3e5e9a4524f68801cfa",
                "shasum": ""
            },
            "require": {
                "doctrine/lexer": "^2.0 || ^3.0",
                "php": ">=8.1",
                "symfony/polyfill-intl-idn": "^1.26"
            },
            "require-dev": {
                "phpunit/phpunit": "^10.2",
                "vimeo/psalm": "^5.12"
            },
            "suggest": {
                "ext-intl": "PHP Internationalization Libraries are required to use the SpoofChecking validation"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Egulias\\EmailValidator\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Eduardo Gulias Davis"
                }
            ],
            "description": "A library for validating emails against several RFCs",
            "homepage": "https://github.com/egulias/EmailValidator",
            "keywords": [
                "email",
                "emailvalidation",
                "emailvalidator",
                "validation",
                "validator"
            ],
            "support": {
                "issues": "https://github.com/egulias/EmailValidator/issues",
                "source": "https://github.com/egulias/EmailValidator/tree/4.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/egulias",
                    "type": "github"
                }
            ],
            "time": "2025-03-06T22:45:56+00:00"
        },
        {
            "name": "fruitcake/php-cors",
            "version": "v1.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/fruitcake/php-cors.git",
                "reference": "3d158f36e7875e2f040f37bc0573956240a5a38b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/fruitcake/php-cors/zipball/3d158f36e7875e2f040f37bc0573956240a5a38b",
                "reference": "3d158f36e7875e2f040f37bc0573956240a5a38b",
                "shasum": ""
            },
            "require": {
                "php": "^7.4|^8.0",
                "symfony/http-foundation": "^4.4|^5.4|^6|^7"
            },
            "require-dev": {
                "phpstan/phpstan": "^1.4",
                "phpunit/phpunit": "^9",
                "squizlabs/php_codesniffer": "^3.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Fruitcake\\Cors\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fruitcake",
                    "homepage": "https://fruitcake.nl"
                },
                {
                    "name": "Barryvdh",
                    "email": "barryvdh@gmail.com"
                }
            ],
            "description": "Cross-origin resource sharing library for the Symfony HttpFoundation",
            "homepage": "https://github.com/fruitcake/php-cors",
            "keywords": [
                "cors",
                "laravel",
                "symfony"
            ],
            "support": {
                "issues": "https://github.com/fruitcake/php-cors/issues",
                "source": "https://github.com/fruitcake/php-cors/tree/v1.3.0"
            },
            "funding": [
                {
                    "url": "https://fruitcake.nl",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/barryvdh",
                    "type": "github"
                }
            ],
            "time": "2023-10-12T05:21:21+00:00"
        },
        {
            "name": "graham-campbell/result-type",
            "version": "v1.1.3",
            "source": {
                "type": "git",
                "url": "https://github.com/GrahamCampbell/Result-Type.git",
                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/3ba905c11371512af9d9bdd27d99b782216b6945",
                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0",
                "phpoption/phpoption": "^1.9.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "GrahamCampbell\\ResultType\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                }
            ],
            "description": "An Implementation Of The Result Type",
            "keywords": [
                "Graham Campbell",
                "GrahamCampbell",
                "Result Type",
                "Result-Type",
                "result"
            ],
            "support": {
                "issues": "https://github.com/GrahamCampbell/Result-Type/issues",
                "source": "https://github.com/GrahamCampbell/Result-Type/tree/v1.1.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/graham-campbell/result-type",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:45:45+00:00"
        },
        {
            "name": "guzzlehttp/guzzle",
            "version": "7.9.3",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/guzzle.git",
                "reference": "7b2f29fe81dc4da0ca0ea7d42107a0845946ea77"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/guzzle/zipball/7b2f29fe81dc4da0ca0ea7d42107a0845946ea77",
                "reference": "7b2f29fe81dc4da0ca0ea7d42107a0845946ea77",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "guzzlehttp/promises": "^1.5.3 || ^2.0.3",
                "guzzlehttp/psr7": "^2.7.0",
                "php": "^7.2.5 || ^8.0",
                "psr/http-client": "^1.0",
                "symfony/deprecation-contracts": "^2.2 || ^3.0"
            },
            "provide": {
                "psr/http-client-implementation": "1.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "ext-curl": "*",
                "guzzle/client-integration-tests": "3.0.2",
                "php-http/message-factory": "^1.1",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20",
                "psr/log": "^1.1 || ^2.0 || ^3.0"
            },
            "suggest": {
                "ext-curl": "Required for CURL handler support",
                "ext-intl": "Required for Internationalized Domain Name (IDN) support",
                "psr/log": "Required for using the Log middleware"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "files": [
                    "src/functions_include.php"
                ],
                "psr-4": {
                    "GuzzleHttp\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Jeremy Lindblom",
                    "email": "jeremeamia@gmail.com",
                    "homepage": "https://github.com/jeremeamia"
                },
                {
                    "name": "George Mponos",
                    "email": "gmponos@gmail.com",
                    "homepage": "https://github.com/gmponos"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://github.com/sagikazarmark"
                },
                {
                    "name": "Tobias Schultze",
                    "email": "webmaster@tubo-world.de",
                    "homepage": "https://github.com/Tobion"
                }
            ],
            "description": "Guzzle is a PHP HTTP client library",
            "keywords": [
                "client",
                "curl",
                "framework",
                "http",
                "http client",
                "psr-18",
                "psr-7",
                "rest",
                "web service"
            ],
            "support": {
                "issues": "https://github.com/guzzle/guzzle/issues",
                "source": "https://github.com/guzzle/guzzle/tree/7.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T13:37:11+00:00"
        },
        {
            "name": "guzzlehttp/promises",
            "version": "2.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/promises.git",
                "reference": "7c69f28996b0a6920945dd20b3857e499d9ca96c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/promises/zipball/7c69f28996b0a6920945dd20b3857e499d9ca96c",
                "reference": "7c69f28996b0a6920945dd20b3857e499d9ca96c",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Promise\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                },
                {
                    "name": "Tobias Schultze",
                    "email": "webmaster@tubo-world.de",
                    "homepage": "https://github.com/Tobion"
                }
            ],
            "description": "Guzzle promises library",
            "keywords": [
                "promise"
            ],
            "support": {
                "issues": "https://github.com/guzzle/promises/issues",
                "source": "https://github.com/guzzle/promises/tree/2.2.0"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/promises",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T13:27:01+00:00"
        },
        {
            "name": "guzzlehttp/psr7",
            "version": "2.7.1",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/psr7.git",
                "reference": "c2270caaabe631b3b44c85f99e5a04bbb8060d16"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/psr7/zipball/c2270caaabe631b3b44c85f99e5a04bbb8060d16",
                "reference": "c2270caaabe631b3b44c85f99e5a04bbb8060d16",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0",
                "psr/http-factory": "^1.0",
                "psr/http-message": "^1.1 || ^2.0",
                "ralouphie/getallheaders": "^3.0"
            },
            "provide": {
                "psr/http-factory-implementation": "1.0",
                "psr/http-message-implementation": "1.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "http-interop/http-factory-tests": "0.9.0",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20"
            },
            "suggest": {
                "laminas/laminas-httphandlerrunner": "Emit PSR-7 responses"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\Psr7\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "George Mponos",
                    "email": "gmponos@gmail.com",
                    "homepage": "https://github.com/gmponos"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://github.com/sagikazarmark"
                },
                {
                    "name": "Tobias Schultze",
                    "email": "webmaster@tubo-world.de",
                    "homepage": "https://github.com/Tobion"
                },
                {
                    "name": "Márk Sági-Kazár",
                    "email": "mark.sagikazar@gmail.com",
                    "homepage": "https://sagikazarmark.hu"
                }
            ],
            "description": "PSR-7 message implementation that also provides common utility methods",
            "keywords": [
                "http",
                "message",
                "psr-7",
                "request",
                "response",
                "stream",
                "uri",
                "url"
            ],
            "support": {
                "issues": "https://github.com/guzzle/psr7/issues",
                "source": "https://github.com/guzzle/psr7/tree/2.7.1"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/psr7",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-27T12:30:47+00:00"
        },
        {
            "name": "guzzlehttp/uri-template",
            "version": "v1.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/guzzle/uri-template.git",
                "reference": "30e286560c137526eccd4ce21b2de477ab0676d2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/guzzle/uri-template/zipball/30e286560c137526eccd4ce21b2de477ab0676d2",
                "reference": "30e286560c137526eccd4ce21b2de477ab0676d2",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0",
                "symfony/polyfill-php80": "^1.24"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "phpunit/phpunit": "^8.5.36 || ^9.6.15",
                "uri-template/tests": "1.0.0"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                }
            },
            "autoload": {
                "psr-4": {
                    "GuzzleHttp\\UriTemplate\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Michael Dowling",
                    "email": "mtdowling@gmail.com",
                    "homepage": "https://github.com/mtdowling"
                },
                {
                    "name": "George Mponos",
                    "email": "gmponos@gmail.com",
                    "homepage": "https://github.com/gmponos"
                },
                {
                    "name": "Tobias Nyholm",
                    "email": "tobias.nyholm@gmail.com",
                    "homepage": "https://github.com/Nyholm"
                }
            ],
            "description": "A polyfill class for uri_template of PHP",
            "keywords": [
                "guzzlehttp",
                "uri-template"
            ],
            "support": {
                "issues": "https://github.com/guzzle/uri-template/issues",
                "source": "https://github.com/guzzle/uri-template/tree/v1.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://github.com/Nyholm",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/uri-template",
                    "type": "tidelift"
                }
            ],
            "time": "2025-02-03T10:55:03+00:00"
        },
        {
            "name": "laravel/framework",
            "version": "v12.19.3",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/framework.git",
                "reference": "4e6ec689ef704bb4bd282f29d9dd658dfb4fb262"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/framework/zipball/4e6ec689ef704bb4bd282f29d9dd658dfb4fb262",
                "reference": "4e6ec689ef704bb4bd282f29d9dd658dfb4fb262",
                "shasum": ""
            },
            "require": {
                "brick/math": "^0.11|^0.12|^0.13",
                "composer-runtime-api": "^2.2",
                "doctrine/inflector": "^2.0.5",
                "dragonmantank/cron-expression": "^3.4",
                "egulias/email-validator": "^3.2.1|^4.0",
                "ext-ctype": "*",
                "ext-filter": "*",
                "ext-hash": "*",
                "ext-mbstring": "*",
                "ext-openssl": "*",
                "ext-session": "*",
                "ext-tokenizer": "*",
                "fruitcake/php-cors": "^1.3",
                "guzzlehttp/guzzle": "^7.8.2",
                "guzzlehttp/uri-template": "^1.0",
                "laravel/prompts": "^0.3.0",
                "laravel/serializable-closure": "^1.3|^2.0",
                "league/commonmark": "^2.7",
                "league/flysystem": "^3.25.1",
                "league/flysystem-local": "^3.25.1",
                "league/uri": "^7.5.1",
                "monolog/monolog": "^3.0",
                "nesbot/carbon": "^3.8.4",
                "nunomaduro/termwind": "^2.0",
                "php": "^8.2",
                "psr/container": "^1.1.1|^2.0.1",
                "psr/log": "^1.0|^2.0|^3.0",
                "psr/simple-cache": "^1.0|^2.0|^3.0",
                "ramsey/uuid": "^4.7",
                "symfony/console": "^7.2.0",
                "symfony/error-handler": "^7.2.0",
                "symfony/finder": "^7.2.0",
                "symfony/http-foundation": "^7.2.0",
                "symfony/http-kernel": "^7.2.0",
                "symfony/mailer": "^7.2.0",
                "symfony/mime": "^7.2.0",
                "symfony/polyfill-php83": "^1.31",
                "symfony/process": "^7.2.0",
                "symfony/routing": "^7.2.0",
                "symfony/uid": "^7.2.0",
                "symfony/var-dumper": "^7.2.0",
                "tijsverkoyen/css-to-inline-styles": "^2.2.5",
                "vlucas/phpdotenv": "^5.6.1",
                "voku/portable-ascii": "^2.0.2"
            },
            "conflict": {
                "tightenco/collect": "<5.5.33"
            },
            "provide": {
                "psr/container-implementation": "1.1|2.0",
                "psr/log-implementation": "1.0|2.0|3.0",
                "psr/simple-cache-implementation": "1.0|2.0|3.0"
            },
            "replace": {
                "illuminate/auth": "self.version",
                "illuminate/broadcasting": "self.version",
                "illuminate/bus": "self.version",
                "illuminate/cache": "self.version",
                "illuminate/collections": "self.version",
                "illuminate/concurrency": "self.version",
                "illuminate/conditionable": "self.version",
                "illuminate/config": "self.version",
                "illuminate/console": "self.version",
                "illuminate/container": "self.version",
                "illuminate/contracts": "self.version",
                "illuminate/cookie": "self.version",
                "illuminate/database": "self.version",
                "illuminate/encryption": "self.version",
                "illuminate/events": "self.version",
                "illuminate/filesystem": "self.version",
                "illuminate/hashing": "self.version",
                "illuminate/http": "self.version",
                "illuminate/log": "self.version",
                "illuminate/macroable": "self.version",
                "illuminate/mail": "self.version",
                "illuminate/notifications": "self.version",
                "illuminate/pagination": "self.version",
                "illuminate/pipeline": "self.version",
                "illuminate/process": "self.version",
                "illuminate/queue": "self.version",
                "illuminate/redis": "self.version",
                "illuminate/routing": "self.version",
                "illuminate/session": "self.version",
                "illuminate/support": "self.version",
                "illuminate/testing": "self.version",
                "illuminate/translation": "self.version",
                "illuminate/validation": "self.version",
                "illuminate/view": "self.version",
                "spatie/once": "*"
            },
            "require-dev": {
                "ably/ably-php": "^1.0",
                "aws/aws-sdk-php": "^3.322.9",
                "ext-gmp": "*",
                "fakerphp/faker": "^1.24",
                "guzzlehttp/promises": "^2.0.3",
                "guzzlehttp/psr7": "^2.4",
                "laravel/pint": "^1.18",
                "league/flysystem-aws-s3-v3": "^3.25.1",
                "league/flysystem-ftp": "^3.25.1",
                "league/flysystem-path-prefixing": "^3.25.1",
                "league/flysystem-read-only": "^3.25.1",
                "league/flysystem-sftp-v3": "^3.25.1",
                "mockery/mockery": "^1.6.10",
                "orchestra/testbench-core": "^10.0.0",
                "pda/pheanstalk": "^5.0.6|^7.0.0",
                "php-http/discovery": "^1.15",
                "phpstan/phpstan": "^2.0",
                "phpunit/phpunit": "^10.5.35|^11.5.3|^12.0.1",
                "predis/predis": "^2.3|^3.0",
                "resend/resend-php": "^0.10.0",
                "symfony/cache": "^7.2.0",
                "symfony/http-client": "^7.2.0",
                "symfony/psr-http-message-bridge": "^7.2.0",
                "symfony/translation": "^7.2.0"
            },
            "suggest": {
                "ably/ably-php": "Required to use the Ably broadcast driver (^1.0).",
                "aws/aws-sdk-php": "Required to use the SQS queue driver, DynamoDb failed job storage, and SES mail driver (^3.322.9).",
                "brianium/paratest": "Required to run tests in parallel (^7.0|^8.0).",
                "ext-apcu": "Required to use the APC cache driver.",
                "ext-fileinfo": "Required to use the Filesystem class.",
                "ext-ftp": "Required to use the Flysystem FTP driver.",
                "ext-gd": "Required to use Illuminate\\Http\\Testing\\FileFactory::image().",
                "ext-memcached": "Required to use the memcache cache driver.",
                "ext-pcntl": "Required to use all features of the queue worker and console signal trapping.",
                "ext-pdo": "Required to use all database features.",
                "ext-posix": "Required to use all features of the queue worker.",
                "ext-redis": "Required to use the Redis cache and queue drivers (^4.0|^5.0|^6.0).",
                "fakerphp/faker": "Required to use the eloquent factory builder (^1.9.1).",
                "filp/whoops": "Required for friendly error pages in development (^2.14.3).",
                "laravel/tinker": "Required to use the tinker console command (^2.0).",
                "league/flysystem-aws-s3-v3": "Required to use the Flysystem S3 driver (^3.25.1).",
                "league/flysystem-ftp": "Required to use the Flysystem FTP driver (^3.25.1).",
                "league/flysystem-path-prefixing": "Required to use the scoped driver (^3.25.1).",
                "league/flysystem-read-only": "Required to use read-only disks (^3.25.1)",
                "league/flysystem-sftp-v3": "Required to use the Flysystem SFTP driver (^3.25.1).",
                "mockery/mockery": "Required to use mocking (^1.6).",
                "pda/pheanstalk": "Required to use the beanstalk queue driver (^5.0).",
                "php-http/discovery": "Required to use PSR-7 bridging features (^1.15).",
                "phpunit/phpunit": "Required to use assertions and run tests (^10.5.35|^11.5.3|^12.0.1).",
                "predis/predis": "Required to use the predis connector (^2.3|^3.0).",
                "psr/http-message": "Required to allow Storage::put to accept a StreamInterface (^1.0).",
                "pusher/pusher-php-server": "Required to use the Pusher broadcast driver (^6.0|^7.0).",
                "resend/resend-php": "Required to enable support for the Resend mail transport (^0.10.0).",
                "symfony/cache": "Required to PSR-6 cache bridge (^7.2).",
                "symfony/filesystem": "Required to enable support for relative symbolic links (^7.2).",
                "symfony/http-client": "Required to enable support for the Symfony API mail transports (^7.2).",
                "symfony/mailgun-mailer": "Required to enable support for the Mailgun mail transport (^7.2).",
                "symfony/postmark-mailer": "Required to enable support for the Postmark mail transport (^7.2).",
                "symfony/psr-http-message-bridge": "Required to use PSR-7 bridging features (^7.2)."
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "12.x-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/Illuminate/Collections/functions.php",
                    "src/Illuminate/Collections/helpers.php",
                    "src/Illuminate/Events/functions.php",
                    "src/Illuminate/Filesystem/functions.php",
                    "src/Illuminate/Foundation/helpers.php",
                    "src/Illuminate/Log/functions.php",
                    "src/Illuminate/Support/functions.php",
                    "src/Illuminate/Support/helpers.php"
                ],
                "psr-4": {
                    "Illuminate\\": "src/Illuminate/",
                    "Illuminate\\Support\\": [
                        "src/Illuminate/Macroable/",
                        "src/Illuminate/Collections/",
                        "src/Illuminate/Conditionable/"
                    ]
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Taylor Otwell",
                    "email": "taylor@laravel.com"
                }
            ],
            "description": "The Laravel Framework.",
            "homepage": "https://laravel.com",
            "keywords": [
                "framework",
                "laravel"
            ],
            "support": {
                "issues": "https://github.com/laravel/framework/issues",
                "source": "https://github.com/laravel/framework"
            },
            "time": "2025-06-18T12:56:23+00:00"
        },
        {
            "name": "laravel/prompts",
            "version": "v0.3.5",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/prompts.git",
                "reference": "57b8f7efe40333cdb925700891c7d7465325d3b1"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/prompts/zipball/57b8f7efe40333cdb925700891c7d7465325d3b1",
                "reference": "57b8f7efe40333cdb925700891c7d7465325d3b1",
                "shasum": ""
            },
            "require": {
                "composer-runtime-api": "^2.2",
                "ext-mbstring": "*",
                "php": "^8.1",
                "symfony/console": "^6.2|^7.0"
            },
            "conflict": {
                "illuminate/console": ">=10.17.0 <10.25.0",
                "laravel/framework": ">=10.17.0 <10.25.0"
            },
            "require-dev": {
                "illuminate/collections": "^10.0|^11.0|^12.0",
                "mockery/mockery": "^1.5",
                "pestphp/pest": "^2.3|^3.4",
                "phpstan/phpstan": "^1.11",
                "phpstan/phpstan-mockery": "^1.1"
            },
            "suggest": {
                "ext-pcntl": "Required for the spinner to be animated."
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "0.3.x-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/helpers.php"
                ],
                "psr-4": {
                    "Laravel\\Prompts\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Add beautiful and user-friendly forms to your command-line applications.",
            "support": {
                "issues": "https://github.com/laravel/prompts/issues",
                "source": "https://github.com/laravel/prompts/tree/v0.3.5"
            },
            "time": "2025-02-11T13:34:40+00:00"
        },
        {
            "name": "laravel/serializable-closure",
            "version": "v2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/serializable-closure.git",
                "reference": "b352cf0534aa1ae6b4d825d1e762e35d43f8a841"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/serializable-closure/zipball/b352cf0534aa1ae6b4d825d1e762e35d43f8a841",
                "reference": "b352cf0534aa1ae6b4d825d1e762e35d43f8a841",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "illuminate/support": "^10.0|^11.0|^12.0",
                "nesbot/carbon": "^2.67|^3.0",
                "pestphp/pest": "^2.36|^3.0",
                "phpstan/phpstan": "^2.0",
                "symfony/var-dumper": "^6.2.0|^7.0.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Laravel\\SerializableClosure\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Taylor Otwell",
                    "email": "taylor@laravel.com"
                },
                {
                    "name": "Nuno Maduro",
                    "email": "nuno@laravel.com"
                }
            ],
            "description": "Laravel Serializable Closure provides an easy and secure way to serialize closures in PHP.",
            "keywords": [
                "closure",
                "laravel",
                "serializable"
            ],
            "support": {
                "issues": "https://github.com/laravel/serializable-closure/issues",
                "source": "https://github.com/laravel/serializable-closure"
            },
            "time": "2025-03-19T13:51:03+00:00"
        },
        {
            "name": "laravel/tinker",
            "version": "v2.10.1",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/tinker.git",
                "reference": "22177cc71807d38f2810c6204d8f7183d88a57d3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/tinker/zipball/22177cc71807d38f2810c6204d8f7183d88a57d3",
                "reference": "22177cc71807d38f2810c6204d8f7183d88a57d3",
                "shasum": ""
            },
            "require": {
                "illuminate/console": "^6.0|^7.0|^8.0|^9.0|^10.0|^11.0|^12.0",
                "illuminate/contracts": "^6.0|^7.0|^8.0|^9.0|^10.0|^11.0|^12.0",
                "illuminate/support": "^6.0|^7.0|^8.0|^9.0|^10.0|^11.0|^12.0",
                "php": "^7.2.5|^8.0",
                "psy/psysh": "^0.11.1|^0.12.0",
                "symfony/var-dumper": "^4.3.4|^5.0|^6.0|^7.0"
            },
            "require-dev": {
                "mockery/mockery": "~1.3.3|^1.4.2",
                "phpstan/phpstan": "^1.10",
                "phpunit/phpunit": "^8.5.8|^9.3.3|^10.0"
            },
            "suggest": {
                "illuminate/database": "The Illuminate Database package (^6.0|^7.0|^8.0|^9.0|^10.0|^11.0|^12.0)."
            },
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "Laravel\\Tinker\\TinkerServiceProvider"
                    ]
                }
            },
            "autoload": {
                "psr-4": {
                    "Laravel\\Tinker\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Taylor Otwell",
                    "email": "taylor@laravel.com"
                }
            ],
            "description": "Powerful REPL for the Laravel framework.",
            "keywords": [
                "REPL",
                "Tinker",
                "laravel",
                "psysh"
            ],
            "support": {
                "issues": "https://github.com/laravel/tinker/issues",
                "source": "https://github.com/laravel/tinker/tree/v2.10.1"
            },
            "time": "2025-01-27T14:24:01+00:00"
        },
        {
            "name": "league/commonmark",
            "version": "2.7.0",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/commonmark.git",
                "reference": "6fbb36d44824ed4091adbcf4c7d4a3923cdb3405"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/commonmark/zipball/6fbb36d44824ed4091adbcf4c7d4a3923cdb3405",
                "reference": "6fbb36d44824ed4091adbcf4c7d4a3923cdb3405",
                "shasum": ""
            },
            "require": {
                "ext-mbstring": "*",
                "league/config": "^1.1.1",
                "php": "^7.4 || ^8.0",
                "psr/event-dispatcher": "^1.0",
                "symfony/deprecation-contracts": "^2.1 || ^3.0",
                "symfony/polyfill-php80": "^1.16"
            },
            "require-dev": {
                "cebe/markdown": "^1.0",
                "commonmark/cmark": "0.31.1",
                "commonmark/commonmark.js": "0.31.1",
                "composer/package-versions-deprecated": "^1.8",
                "embed/embed": "^4.4",
                "erusev/parsedown": "^1.0",
                "ext-json": "*",
                "github/gfm": "0.29.0",
                "michelf/php-markdown": "^1.4 || ^2.0",
                "nyholm/psr7": "^1.5",
                "phpstan/phpstan": "^1.8.2",
                "phpunit/phpunit": "^9.5.21 || ^10.5.9 || ^11.0.0",
                "scrutinizer/ocular": "^1.8.1",
                "symfony/finder": "^5.3 | ^6.0 | ^7.0",
                "symfony/process": "^5.4 | ^6.0 | ^7.0",
                "symfony/yaml": "^2.3 | ^3.0 | ^4.0 | ^5.0 | ^6.0 | ^7.0",
                "unleashedtech/php-coding-standard": "^3.1.1",
                "vimeo/psalm": "^4.24.0 || ^5.0.0"
            },
            "suggest": {
                "symfony/yaml": "v2.3+ required if using the Front Matter extension"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "2.8-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "League\\CommonMark\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Colin O'Dell",
                    "email": "colinodell@gmail.com",
                    "homepage": "https://www.colinodell.com",
                    "role": "Lead Developer"
                }
            ],
            "description": "Highly-extensible PHP Markdown parser which fully supports the CommonMark spec and GitHub-Flavored Markdown (GFM)",
            "homepage": "https://commonmark.thephpleague.com",
            "keywords": [
                "commonmark",
                "flavored",
                "gfm",
                "github",
                "github-flavored",
                "markdown",
                "md",
                "parser"
            ],
            "support": {
                "docs": "https://commonmark.thephpleague.com/",
                "forum": "https://github.com/thephpleague/commonmark/discussions",
                "issues": "https://github.com/thephpleague/commonmark/issues",
                "rss": "https://github.com/thephpleague/commonmark/releases.atom",
                "source": "https://github.com/thephpleague/commonmark"
            },
            "funding": [
                {
                    "url": "https://www.colinodell.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://www.paypal.me/colinpodell/10.00",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/colinodell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/league/commonmark",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-05T12:20:28+00:00"
        },
        {
            "name": "league/config",
            "version": "v1.2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/config.git",
                "reference": "754b3604fb2984c71f4af4a9cbe7b57f346ec1f3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/config/zipball/754b3604fb2984c71f4af4a9cbe7b57f346ec1f3",
                "reference": "754b3604fb2984c71f4af4a9cbe7b57f346ec1f3",
                "shasum": ""
            },
            "require": {
                "dflydev/dot-access-data": "^3.0.1",
                "nette/schema": "^1.2",
                "php": "^7.4 || ^8.0"
            },
            "require-dev": {
                "phpstan/phpstan": "^1.8.2",
                "phpunit/phpunit": "^9.5.5",
                "scrutinizer/ocular": "^1.8.1",
                "unleashedtech/php-coding-standard": "^3.1",
                "vimeo/psalm": "^4.7.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "1.2-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "League\\Config\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Colin O'Dell",
                    "email": "colinodell@gmail.com",
                    "homepage": "https://www.colinodell.com",
                    "role": "Lead Developer"
                }
            ],
            "description": "Define configuration arrays with strict schemas and access values with dot notation",
            "homepage": "https://config.thephpleague.com",
            "keywords": [
                "array",
                "config",
                "configuration",
                "dot",
                "dot-access",
                "nested",
                "schema"
            ],
            "support": {
                "docs": "https://config.thephpleague.com/",
                "issues": "https://github.com/thephpleague/config/issues",
                "rss": "https://github.com/thephpleague/config/releases.atom",
                "source": "https://github.com/thephpleague/config"
            },
            "funding": [
                {
                    "url": "https://www.colinodell.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://www.paypal.me/colinpodell/10.00",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/colinodell",
                    "type": "github"
                }
            ],
            "time": "2022-12-11T20:36:23+00:00"
        },
        {
            "name": "league/flysystem",
            "version": "3.29.1",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/flysystem.git",
                "reference": "edc1bb7c86fab0776c3287dbd19b5fa278347319"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/flysystem/zipball/edc1bb7c86fab0776c3287dbd19b5fa278347319",
                "reference": "edc1bb7c86fab0776c3287dbd19b5fa278347319",
                "shasum": ""
            },
            "require": {
                "league/flysystem-local": "^3.0.0",
                "league/mime-type-detection": "^1.0.0",
                "php": "^8.0.2"
            },
            "conflict": {
                "async-aws/core": "<1.19.0",
                "async-aws/s3": "<1.14.0",
                "aws/aws-sdk-php": "3.209.31 || 3.210.0",
                "guzzlehttp/guzzle": "<7.0",
                "guzzlehttp/ringphp": "<1.1.1",
                "phpseclib/phpseclib": "3.0.15",
                "symfony/http-client": "<5.2"
            },
            "require-dev": {
                "async-aws/s3": "^1.5 || ^2.0",
                "async-aws/simple-s3": "^1.1 || ^2.0",
                "aws/aws-sdk-php": "^3.295.10",
                "composer/semver": "^3.0",
                "ext-fileinfo": "*",
                "ext-ftp": "*",
                "ext-mongodb": "^1.3",
                "ext-zip": "*",
                "friendsofphp/php-cs-fixer": "^3.5",
                "google/cloud-storage": "^1.23",
                "guzzlehttp/psr7": "^2.6",
                "microsoft/azure-storage-blob": "^1.1",
                "mongodb/mongodb": "^1.2",
                "phpseclib/phpseclib": "^3.0.36",
                "phpstan/phpstan": "^1.10",
                "phpunit/phpunit": "^9.5.11|^10.0",
                "sabre/dav": "^4.6.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "League\\Flysystem\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Frank de Jonge",
                    "email": "info@frankdejonge.nl"
                }
            ],
            "description": "File storage abstraction for PHP",
            "keywords": [
                "WebDAV",
                "aws",
                "cloud",
                "file",
                "files",
                "filesystem",
                "filesystems",
                "ftp",
                "s3",
                "sftp",
                "storage"
            ],
            "support": {
                "issues": "https://github.com/thephpleague/flysystem/issues",
                "source": "https://github.com/thephpleague/flysystem/tree/3.29.1"
            },
            "time": "2024-10-08T08:58:34+00:00"
        },
        {
            "name": "league/flysystem-local",
            "version": "3.29.0",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/flysystem-local.git",
                "reference": "e0e8d52ce4b2ed154148453d321e97c8e931bd27"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/flysystem-local/zipball/e0e8d52ce4b2ed154148453d321e97c8e931bd27",
                "reference": "e0e8d52ce4b2ed154148453d321e97c8e931bd27",
                "shasum": ""
            },
            "require": {
                "ext-fileinfo": "*",
                "league/flysystem": "^3.0.0",
                "league/mime-type-detection": "^1.0.0",
                "php": "^8.0.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "League\\Flysystem\\Local\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Frank de Jonge",
                    "email": "info@frankdejonge.nl"
                }
            ],
            "description": "Local filesystem adapter for Flysystem.",
            "keywords": [
                "Flysystem",
                "file",
                "files",
                "filesystem",
                "local"
            ],
            "support": {
                "source": "https://github.com/thephpleague/flysystem-local/tree/3.29.0"
            },
            "time": "2024-08-09T21:24:39+00:00"
        },
        {
            "name": "league/mime-type-detection",
            "version": "1.16.0",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/mime-type-detection.git",
                "reference": "2d6702ff215bf922936ccc1ad31007edc76451b9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/mime-type-detection/zipball/2d6702ff215bf922936ccc1ad31007edc76451b9",
                "reference": "2d6702ff215bf922936ccc1ad31007edc76451b9",
                "shasum": ""
            },
            "require": {
                "ext-fileinfo": "*",
                "php": "^7.4 || ^8.0"
            },
            "require-dev": {
                "friendsofphp/php-cs-fixer": "^3.2",
                "phpstan/phpstan": "^0.12.68",
                "phpunit/phpunit": "^8.5.8 || ^9.3 || ^10.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "League\\MimeTypeDetection\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Frank de Jonge",
                    "email": "info@frankdejonge.nl"
                }
            ],
            "description": "Mime-type detection for Flysystem",
            "support": {
                "issues": "https://github.com/thephpleague/mime-type-detection/issues",
                "source": "https://github.com/thephpleague/mime-type-detection/tree/1.16.0"
            },
            "funding": [
                {
                    "url": "https://github.com/frankdejonge",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/league/flysystem",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-21T08:32:55+00:00"
        },
        {
            "name": "league/uri",
            "version": "7.5.1",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/uri.git",
                "reference": "81fb5145d2644324614cc532b28efd0215bda430"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/uri/zipball/81fb5145d2644324614cc532b28efd0215bda430",
                "reference": "81fb5145d2644324614cc532b28efd0215bda430",
                "shasum": ""
            },
            "require": {
                "league/uri-interfaces": "^7.5",
                "php": "^8.1"
            },
            "conflict": {
                "league/uri-schemes": "^1.0"
            },
            "suggest": {
                "ext-bcmath": "to improve IPV4 host parsing",
                "ext-fileinfo": "to create Data URI from file contennts",
                "ext-gmp": "to improve IPV4 host parsing",
                "ext-intl": "to handle IDN host with the best performance",
                "jeremykendall/php-domain-parser": "to resolve Public Suffix and Top Level Domain",
                "league/uri-components": "Needed to easily manipulate URI objects components",
                "php-64bit": "to improve IPV4 host parsing",
                "symfony/polyfill-intl-idn": "to handle IDN host via the Symfony polyfill if ext-intl is not present"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "7.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "League\\Uri\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ignace Nyamagana Butera",
                    "email": "nyamsprod@gmail.com",
                    "homepage": "https://nyamsprod.com"
                }
            ],
            "description": "URI manipulation library",
            "homepage": "https://uri.thephpleague.com",
            "keywords": [
                "data-uri",
                "file-uri",
                "ftp",
                "hostname",
                "http",
                "https",
                "middleware",
                "parse_str",
                "parse_url",
                "psr-7",
                "query-string",
                "querystring",
                "rfc3986",
                "rfc3987",
                "rfc6570",
                "uri",
                "uri-template",
                "url",
                "ws"
            ],
            "support": {
                "docs": "https://uri.thephpleague.com",
                "forum": "https://thephpleague.slack.com",
                "issues": "https://github.com/thephpleague/uri-src/issues",
                "source": "https://github.com/thephpleague/uri/tree/7.5.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sponsors/nyamsprod",
                    "type": "github"
                }
            ],
            "time": "2024-12-08T08:40:02+00:00"
        },
        {
            "name": "league/uri-interfaces",
            "version": "7.5.0",
            "source": {
                "type": "git",
                "url": "https://github.com/thephpleague/uri-interfaces.git",
                "reference": "08cfc6c4f3d811584fb09c37e2849e6a7f9b0742"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/thephpleague/uri-interfaces/zipball/08cfc6c4f3d811584fb09c37e2849e6a7f9b0742",
                "reference": "08cfc6c4f3d811584fb09c37e2849e6a7f9b0742",
                "shasum": ""
            },
            "require": {
                "ext-filter": "*",
                "php": "^8.1",
                "psr/http-factory": "^1",
                "psr/http-message": "^1.1 || ^2.0"
            },
            "suggest": {
                "ext-bcmath": "to improve IPV4 host parsing",
                "ext-gmp": "to improve IPV4 host parsing",
                "ext-intl": "to handle IDN host with the best performance",
                "php-64bit": "to improve IPV4 host parsing",
                "symfony/polyfill-intl-idn": "to handle IDN host via the Symfony polyfill if ext-intl is not present"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "7.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "League\\Uri\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ignace Nyamagana Butera",
                    "email": "nyamsprod@gmail.com",
                    "homepage": "https://nyamsprod.com"
                }
            ],
            "description": "Common interfaces and classes for URI representation and interaction",
            "homepage": "https://uri.thephpleague.com",
            "keywords": [
                "data-uri",
                "file-uri",
                "ftp",
                "hostname",
                "http",
                "https",
                "parse_str",
                "parse_url",
                "psr-7",
                "query-string",
                "querystring",
                "rfc3986",
                "rfc3987",
                "rfc6570",
                "uri",
                "url",
                "ws"
            ],
            "support": {
                "docs": "https://uri.thephpleague.com",
                "forum": "https://thephpleague.slack.com",
                "issues": "https://github.com/thephpleague/uri-src/issues",
                "source": "https://github.com/thephpleague/uri-interfaces/tree/7.5.0"
            },
            "funding": [
                {
                    "url": "https://github.com/sponsors/nyamsprod",
                    "type": "github"
                }
            ],
            "time": "2024-12-08T08:18:47+00:00"
        },
        {
            "name": "monolog/monolog",
            "version": "3.9.0",
            "source": {
                "type": "git",
                "url": "https://github.com/Seldaek/monolog.git",
                "reference": "10d85740180ecba7896c87e06a166e0c95a0e3b6"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/10d85740180ecba7896c87e06a166e0c95a0e3b6",
                "reference": "10d85740180ecba7896c87e06a166e0c95a0e3b6",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1",
                "psr/log": "^2.0 || ^3.0"
            },
            "provide": {
                "psr/log-implementation": "3.0.0"
            },
            "require-dev": {
                "aws/aws-sdk-php": "^3.0",
                "doctrine/couchdb": "~1.0@dev",
                "elasticsearch/elasticsearch": "^7 || ^8",
                "ext-json": "*",
                "graylog2/gelf-php": "^1.4.2 || ^2.0",
                "guzzlehttp/guzzle": "^7.4.5",
                "guzzlehttp/psr7": "^2.2",
                "mongodb/mongodb": "^1.8",
                "php-amqplib/php-amqplib": "~2.4 || ^3",
                "php-console/php-console": "^3.1.8",
                "phpstan/phpstan": "^2",
                "phpstan/phpstan-deprecation-rules": "^2",
                "phpstan/phpstan-strict-rules": "^2",
                "phpunit/phpunit": "^10.5.17 || ^11.0.7",
                "predis/predis": "^1.1 || ^2",
                "rollbar/rollbar": "^4.0",
                "ruflin/elastica": "^7 || ^8",
                "symfony/mailer": "^5.4 || ^6",
                "symfony/mime": "^5.4 || ^6"
            },
            "suggest": {
                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
                "elasticsearch/elasticsearch": "Allow sending log messages to an Elasticsearch server via official client",
                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
                "ext-curl": "Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler",
                "ext-mbstring": "Allow to work properly with unicode symbols",
                "ext-mongodb": "Allow sending log messages to a MongoDB server (via driver)",
                "ext-openssl": "Required to send log messages using SSL",
                "ext-sockets": "Allow sending log messages to a Syslog server (via UDP driver)",
                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
                "mongodb/mongodb": "Allow sending log messages to a MongoDB server (via library)",
                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
                "rollbar/rollbar": "Allow sending log messages to Rollbar",
                "ruflin/elastica": "Allow sending log messages to an Elastic Search server"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Monolog\\": "src/Monolog"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Jordi Boggiano",
                    "email": "j.boggiano@seld.be",
                    "homepage": "https://seld.be"
                }
            ],
            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
            "homepage": "https://github.com/Seldaek/monolog",
            "keywords": [
                "log",
                "logging",
                "psr-3"
            ],
            "support": {
                "issues": "https://github.com/Seldaek/monolog/issues",
                "source": "https://github.com/Seldaek/monolog/tree/3.9.0"
            },
            "funding": [
                {
                    "url": "https://github.com/Seldaek",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/monolog/monolog",
                    "type": "tidelift"
                }
            ],
            "time": "2025-03-24T10:02:05+00:00"
        },
        {
            "name": "nesbot/carbon",
            "version": "3.10.0",
            "source": {
                "type": "git",
                "url": "https://github.com/CarbonPHP/carbon.git",
                "reference": "c1397390dd0a7e0f11660f0ae20f753d88c1f3d9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/CarbonPHP/carbon/zipball/c1397390dd0a7e0f11660f0ae20f753d88c1f3d9",
                "reference": "c1397390dd0a7e0f11660f0ae20f753d88c1f3d9",
                "shasum": ""
            },
            "require": {
                "carbonphp/carbon-doctrine-types": "<100.0",
                "ext-json": "*",
                "php": "^8.1",
                "psr/clock": "^1.0",
                "symfony/clock": "^6.3.12 || ^7.0",
                "symfony/polyfill-mbstring": "^1.0",
                "symfony/translation": "^4.4.18 || ^5.2.1 || ^6.0 || ^7.0"
            },
            "provide": {
                "psr/clock-implementation": "1.0"
            },
            "require-dev": {
                "doctrine/dbal": "^3.6.3 || ^4.0",
                "doctrine/orm": "^2.15.2 || ^3.0",
                "friendsofphp/php-cs-fixer": "^3.75.0",
                "kylekatarnls/multi-tester": "^2.5.3",
                "phpmd/phpmd": "^2.15.0",
                "phpstan/extension-installer": "^1.4.3",
                "phpstan/phpstan": "^2.1.17",
                "phpunit/phpunit": "^10.5.46",
                "squizlabs/php_codesniffer": "^3.13.0"
            },
            "bin": [
                "bin/carbon"
            ],
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "Carbon\\Laravel\\ServiceProvider"
                    ]
                },
                "phpstan": {
                    "includes": [
                        "extension.neon"
                    ]
                },
                "branch-alias": {
                    "dev-2.x": "2.x-dev",
                    "dev-master": "3.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Carbon\\": "src/Carbon/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Brian Nesbitt",
                    "email": "brian@nesbot.com",
                    "homepage": "https://markido.com"
                },
                {
                    "name": "kylekatarnls",
                    "homepage": "https://github.com/kylekatarnls"
                }
            ],
            "description": "An API extension for DateTime that supports 281 different languages.",
            "homepage": "https://carbon.nesbot.com",
            "keywords": [
                "date",
                "datetime",
                "time"
            ],
            "support": {
                "docs": "https://carbon.nesbot.com/docs",
                "issues": "https://github.com/CarbonPHP/carbon/issues",
                "source": "https://github.com/CarbonPHP/carbon"
            },
            "funding": [
                {
                    "url": "https://github.com/sponsors/kylekatarnls",
                    "type": "github"
                },
                {
                    "url": "https://opencollective.com/Carbon#sponsor",
                    "type": "opencollective"
                },
                {
                    "url": "https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&utm_medium=referral&utm_campaign=readme",
                    "type": "tidelift"
                }
            ],
            "time": "2025-06-12T10:24:28+00:00"
        },
        {
            "name": "nette/schema",
            "version": "v1.3.2",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/schema.git",
                "reference": "da801d52f0354f70a638673c4a0f04e16529431d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/schema/zipball/da801d52f0354f70a638673c4a0f04e16529431d",
                "reference": "da801d52f0354f70a638673c4a0f04e16529431d",
                "shasum": ""
            },
            "require": {
                "nette/utils": "^4.0",
                "php": "8.1 - 8.4"
            },
            "require-dev": {
                "nette/tester": "^2.5.2",
                "phpstan/phpstan-nette": "^1.0",
                "tracy/tracy": "^2.8"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.3-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0-only",
                "GPL-3.0-only"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "📐 Nette Schema: validating data structures against a given Schema.",
            "homepage": "https://nette.org",
            "keywords": [
                "config",
                "nette"
            ],
            "support": {
                "issues": "https://github.com/nette/schema/issues",
                "source": "https://github.com/nette/schema/tree/v1.3.2"
            },
            "time": "2024-10-06T23:10:23+00:00"
        },
        {
            "name": "nette/utils",
            "version": "v4.0.7",
            "source": {
                "type": "git",
                "url": "https://github.com/nette/utils.git",
                "reference": "e67c4061eb40b9c113b218214e42cb5a0dda28f2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nette/utils/zipball/e67c4061eb40b9c113b218214e42cb5a0dda28f2",
                "reference": "e67c4061eb40b9c113b218214e42cb5a0dda28f2",
                "shasum": ""
            },
            "require": {
                "php": "8.0 - 8.4"
            },
            "conflict": {
                "nette/finder": "<3",
                "nette/schema": "<1.2.2"
            },
            "require-dev": {
                "jetbrains/phpstorm-attributes": "dev-master",
                "nette/tester": "^2.5",
                "phpstan/phpstan": "^1.0",
                "tracy/tracy": "^2.9"
            },
            "suggest": {
                "ext-gd": "to use Image",
                "ext-iconv": "to use Strings::webalize(), toAscii(), chr() and reverse()",
                "ext-intl": "to use Strings::webalize(), toAscii(), normalize() and compare()",
                "ext-json": "to use Nette\\Utils\\Json",
                "ext-mbstring": "to use Strings::lower() etc...",
                "ext-tokenizer": "to use Nette\\Utils\\Reflection::getUseStatements()"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause",
                "GPL-2.0-only",
                "GPL-3.0-only"
            ],
            "authors": [
                {
                    "name": "David Grudl",
                    "homepage": "https://davidgrudl.com"
                },
                {
                    "name": "Nette Community",
                    "homepage": "https://nette.org/contributors"
                }
            ],
            "description": "🛠  Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding/decoding, validation, slug or strong password generating etc.",
            "homepage": "https://nette.org",
            "keywords": [
                "array",
                "core",
                "datetime",
                "images",
                "json",
                "nette",
                "paginator",
                "password",
                "slugify",
                "string",
                "unicode",
                "utf-8",
                "utility",
                "validation"
            ],
            "support": {
                "issues": "https://github.com/nette/utils/issues",
                "source": "https://github.com/nette/utils/tree/v4.0.7"
            },
            "time": "2025-06-03T04:55:08+00:00"
        },
        {
            "name": "nikic/php-parser",
            "version": "v5.5.0",
            "source": {
                "type": "git",
                "url": "https://github.com/nikic/PHP-Parser.git",
                "reference": "ae59794362fe85e051a58ad36b289443f57be7a9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/ae59794362fe85e051a58ad36b289443f57be7a9",
                "reference": "ae59794362fe85e051a58ad36b289443f57be7a9",
                "shasum": ""
            },
            "require": {
                "ext-ctype": "*",
                "ext-json": "*",
                "ext-tokenizer": "*",
                "php": ">=7.4"
            },
            "require-dev": {
                "ircmaxell/php-yacc": "^0.0.7",
                "phpunit/phpunit": "^9.0"
            },
            "bin": [
                "bin/php-parse"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpParser\\": "lib/PhpParser"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Nikita Popov"
                }
            ],
            "description": "A PHP parser written in PHP",
            "keywords": [
                "parser",
                "php"
            ],
            "support": {
                "issues": "https://github.com/nikic/PHP-Parser/issues",
                "source": "https://github.com/nikic/PHP-Parser/tree/v5.5.0"
            },
            "time": "2025-05-31T08:24:38+00:00"
        },
        {
            "name": "nunomaduro/termwind",
            "version": "v2.3.1",
            "source": {
                "type": "git",
                "url": "https://github.com/nunomaduro/termwind.git",
                "reference": "dfa08f390e509967a15c22493dc0bac5733d9123"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nunomaduro/termwind/zipball/dfa08f390e509967a15c22493dc0bac5733d9123",
                "reference": "dfa08f390e509967a15c22493dc0bac5733d9123",
                "shasum": ""
            },
            "require": {
                "ext-mbstring": "*",
                "php": "^8.2",
                "symfony/console": "^7.2.6"
            },
            "require-dev": {
                "illuminate/console": "^11.44.7",
                "laravel/pint": "^1.22.0",
                "mockery/mockery": "^1.6.12",
                "pestphp/pest": "^2.36.0 || ^3.8.2",
                "phpstan/phpstan": "^1.12.25",
                "phpstan/phpstan-strict-rules": "^1.6.2",
                "symfony/var-dumper": "^7.2.6",
                "thecodingmachine/phpstan-strict-rules": "^1.0.0"
            },
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "Termwind\\Laravel\\TermwindServiceProvider"
                    ]
                },
                "branch-alias": {
                    "dev-2.x": "2.x-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/Functions.php"
                ],
                "psr-4": {
                    "Termwind\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nuno Maduro",
                    "email": "enunomaduro@gmail.com"
                }
            ],
            "description": "Its like Tailwind CSS, but for the console.",
            "keywords": [
                "cli",
                "console",
                "css",
                "package",
                "php",
                "style"
            ],
            "support": {
                "issues": "https://github.com/nunomaduro/termwind/issues",
                "source": "https://github.com/nunomaduro/termwind/tree/v2.3.1"
            },
            "funding": [
                {
                    "url": "https://www.paypal.com/paypalme/enunomaduro",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/nunomaduro",
                    "type": "github"
                },
                {
                    "url": "https://github.com/xiCO2k",
                    "type": "github"
                }
            ],
            "time": "2025-05-08T08:14:37+00:00"
        },
        {
            "name": "phpoption/phpoption",
            "version": "1.9.3",
            "source": {
                "type": "git",
                "url": "https://github.com/schmittjoh/php-option.git",
                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/schmittjoh/php-option/zipball/e3fac8b24f56113f7cb96af14958c0dd16330f54",
                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-master": "1.9-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpOption\\": "src/PhpOption/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "authors": [
                {
                    "name": "Johannes M. Schmitt",
                    "email": "schmittjoh@gmail.com",
                    "homepage": "https://github.com/schmittjoh"
                },
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                }
            ],
            "description": "Option Type for PHP",
            "keywords": [
                "language",
                "option",
                "php",
                "type"
            ],
            "support": {
                "issues": "https://github.com/schmittjoh/php-option/issues",
                "source": "https://github.com/schmittjoh/php-option/tree/1.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpoption/phpoption",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:41:07+00:00"
        },
        {
            "name": "psr/clock",
            "version": "1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/clock.git",
                "reference": "e41a24703d4560fd0acb709162f73b8adfc3aa0d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/clock/zipball/e41a24703d4560fd0acb709162f73b8adfc3aa0d",
                "reference": "e41a24703d4560fd0acb709162f73b8adfc3aa0d",
                "shasum": ""
            },
            "require": {
                "php": "^7.0 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Psr\\Clock\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for reading the clock.",
            "homepage": "https://github.com/php-fig/clock",
            "keywords": [
                "clock",
                "now",
                "psr",
                "psr-20",
                "time"
            ],
            "support": {
                "issues": "https://github.com/php-fig/clock/issues",
                "source": "https://github.com/php-fig/clock/tree/1.0.0"
            },
            "time": "2022-11-25T14:36:26+00:00"
        },
        {
            "name": "psr/container",
            "version": "2.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/container.git",
                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/container/zipball/c71ecc56dfe541dbd90c5360474fbc405f8d5963",
                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963",
                "shasum": ""
            },
            "require": {
                "php": ">=7.4.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Container\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common Container Interface (PHP FIG PSR-11)",
            "homepage": "https://github.com/php-fig/container",
            "keywords": [
                "PSR-11",
                "container",
                "container-interface",
                "container-interop",
                "psr"
            ],
            "support": {
                "issues": "https://github.com/php-fig/container/issues",
                "source": "https://github.com/php-fig/container/tree/2.0.2"
            },
            "time": "2021-11-05T16:47:00+00:00"
        },
        {
            "name": "psr/event-dispatcher",
            "version": "1.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/event-dispatcher.git",
                "reference": "dbefd12671e8a14ec7f180cab83036ed26714bb0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0",
                "reference": "dbefd12671e8a14ec7f180cab83036ed26714bb0",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\EventDispatcher\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "http://www.php-fig.org/"
                }
            ],
            "description": "Standard interfaces for event handling.",
            "keywords": [
                "events",
                "psr",
                "psr-14"
            ],
            "support": {
                "issues": "https://github.com/php-fig/event-dispatcher/issues",
                "source": "https://github.com/php-fig/event-dispatcher/tree/1.0.0"
            },
            "time": "2019-01-08T18:20:26+00:00"
        },
        {
            "name": "psr/http-client",
            "version": "1.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-client.git",
                "reference": "bb5906edc1c324c9a05aa0873d40117941e5fa90"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-client/zipball/bb5906edc1c324c9a05aa0873d40117941e5fa90",
                "reference": "bb5906edc1c324c9a05aa0873d40117941e5fa90",
                "shasum": ""
            },
            "require": {
                "php": "^7.0 || ^8.0",
                "psr/http-message": "^1.0 || ^2.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Client\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP clients",
            "homepage": "https://github.com/php-fig/http-client",
            "keywords": [
                "http",
                "http-client",
                "psr",
                "psr-18"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-client"
            },
            "time": "2023-09-23T14:17:50+00:00"
        },
        {
            "name": "psr/http-factory",
            "version": "1.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-factory.git",
                "reference": "2b4765fddfe3b508ac62f829e852b1501d3f6e8a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-factory/zipball/2b4765fddfe3b508ac62f829e852b1501d3f6e8a",
                "reference": "2b4765fddfe3b508ac62f829e852b1501d3f6e8a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.1",
                "psr/http-message": "^1.0 || ^2.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Message\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "PSR-17: Common interfaces for PSR-7 HTTP message factories",
            "keywords": [
                "factory",
                "http",
                "message",
                "psr",
                "psr-17",
                "psr-7",
                "request",
                "response"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-factory"
            },
            "time": "2024-04-15T12:06:14+00:00"
        },
        {
            "name": "psr/http-message",
            "version": "2.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/http-message.git",
                "reference": "402d35bcb92c70c026d1a6a9883f06b2ead23d71"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/http-message/zipball/402d35bcb92c70c026d1a6a9883f06b2ead23d71",
                "reference": "402d35bcb92c70c026d1a6a9883f06b2ead23d71",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Http\\Message\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for HTTP messages",
            "homepage": "https://github.com/php-fig/http-message",
            "keywords": [
                "http",
                "http-message",
                "psr",
                "psr-7",
                "request",
                "response"
            ],
            "support": {
                "source": "https://github.com/php-fig/http-message/tree/2.0"
            },
            "time": "2023-04-04T09:54:51+00:00"
        },
        {
            "name": "psr/log",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/log.git",
                "reference": "f16e1d5863e37f8d8c2a01719f5b34baa2b714d3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/log/zipball/f16e1d5863e37f8d8c2a01719f5b34baa2b714d3",
                "reference": "f16e1d5863e37f8d8c2a01719f5b34baa2b714d3",
                "shasum": ""
            },
            "require": {
                "php": ">=8.0.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\Log\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interface for logging libraries",
            "homepage": "https://github.com/php-fig/log",
            "keywords": [
                "log",
                "psr",
                "psr-3"
            ],
            "support": {
                "source": "https://github.com/php-fig/log/tree/3.0.2"
            },
            "time": "2024-09-11T13:17:53+00:00"
        },
        {
            "name": "psr/simple-cache",
            "version": "3.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/php-fig/simple-cache.git",
                "reference": "764e0b3939f5ca87cb904f570ef9be2d78a07865"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/php-fig/simple-cache/zipball/764e0b3939f5ca87cb904f570ef9be2d78a07865",
                "reference": "764e0b3939f5ca87cb904f570ef9be2d78a07865",
                "shasum": ""
            },
            "require": {
                "php": ">=8.0.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Psr\\SimpleCache\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "PHP-FIG",
                    "homepage": "https://www.php-fig.org/"
                }
            ],
            "description": "Common interfaces for simple caching",
            "keywords": [
                "cache",
                "caching",
                "psr",
                "psr-16",
                "simple-cache"
            ],
            "support": {
                "source": "https://github.com/php-fig/simple-cache/tree/3.0.0"
            },
            "time": "2021-10-29T13:26:27+00:00"
        },
        {
            "name": "psy/psysh",
            "version": "v0.12.8",
            "source": {
                "type": "git",
                "url": "https://github.com/bobthecow/psysh.git",
                "reference": "85057ceedee50c49d4f6ecaff73ee96adb3b3625"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/bobthecow/psysh/zipball/85057ceedee50c49d4f6ecaff73ee96adb3b3625",
                "reference": "85057ceedee50c49d4f6ecaff73ee96adb3b3625",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "ext-tokenizer": "*",
                "nikic/php-parser": "^5.0 || ^4.0",
                "php": "^8.0 || ^7.4",
                "symfony/console": "^7.0 || ^6.0 || ^5.0 || ^4.0 || ^3.4",
                "symfony/var-dumper": "^7.0 || ^6.0 || ^5.0 || ^4.0 || ^3.4"
            },
            "conflict": {
                "symfony/console": "4.4.37 || 5.3.14 || 5.3.15 || 5.4.3 || 5.4.4 || 6.0.3 || 6.0.4"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.2"
            },
            "suggest": {
                "ext-pcntl": "Enabling the PCNTL extension makes PsySH a lot happier :)",
                "ext-pdo-sqlite": "The doc command requires SQLite to work.",
                "ext-posix": "If you have PCNTL, you'll want the POSIX extension as well."
            },
            "bin": [
                "bin/psysh"
            ],
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": false,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-main": "0.12.x-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/functions.php"
                ],
                "psr-4": {
                    "Psy\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Justin Hileman",
                    "email": "justin@justinhileman.info",
                    "homepage": "http://justinhileman.com"
                }
            ],
            "description": "An interactive shell for modern PHP.",
            "homepage": "http://psysh.org",
            "keywords": [
                "REPL",
                "console",
                "interactive",
                "shell"
            ],
            "support": {
                "issues": "https://github.com/bobthecow/psysh/issues",
                "source": "https://github.com/bobthecow/psysh/tree/v0.12.8"
            },
            "time": "2025-03-16T03:05:19+00:00"
        },
        {
            "name": "ralouphie/getallheaders",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/ralouphie/getallheaders.git",
                "reference": "120b605dfeb996808c31b6477290a714d356e822"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822",
                "reference": "120b605dfeb996808c31b6477290a714d356e822",
                "shasum": ""
            },
            "require": {
                "php": ">=5.6"
            },
            "require-dev": {
                "php-coveralls/php-coveralls": "^2.1",
                "phpunit/phpunit": "^5 || ^6.5"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/getallheaders.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ralph Khattar",
                    "email": "ralph.khattar@gmail.com"
                }
            ],
            "description": "A polyfill for getallheaders.",
            "support": {
                "issues": "https://github.com/ralouphie/getallheaders/issues",
                "source": "https://github.com/ralouphie/getallheaders/tree/develop"
            },
            "time": "2019-03-08T08:55:37+00:00"
        },
        {
            "name": "ramsey/collection",
            "version": "2.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/ramsey/collection.git",
                "reference": "344572933ad0181accbf4ba763e85a0306a8c5e2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ramsey/collection/zipball/344572933ad0181accbf4ba763e85a0306a8c5e2",
                "reference": "344572933ad0181accbf4ba763e85a0306a8c5e2",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "captainhook/plugin-composer": "^5.3",
                "ergebnis/composer-normalize": "^2.45",
                "fakerphp/faker": "^1.24",
                "hamcrest/hamcrest-php": "^2.0",
                "jangregor/phpstan-prophecy": "^2.1",
                "mockery/mockery": "^1.6",
                "php-parallel-lint/php-console-highlighter": "^1.0",
                "php-parallel-lint/php-parallel-lint": "^1.4",
                "phpspec/prophecy-phpunit": "^2.3",
                "phpstan/extension-installer": "^1.4",
                "phpstan/phpstan": "^2.1",
                "phpstan/phpstan-mockery": "^2.0",
                "phpstan/phpstan-phpunit": "^2.0",
                "phpunit/phpunit": "^10.5",
                "ramsey/coding-standard": "^2.3",
                "ramsey/conventional-commits": "^1.6",
                "roave/security-advisories": "dev-latest"
            },
            "type": "library",
            "extra": {
                "captainhook": {
                    "force-install": true
                },
                "ramsey/conventional-commits": {
                    "configFile": "conventional-commits.json"
                }
            },
            "autoload": {
                "psr-4": {
                    "Ramsey\\Collection\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ben Ramsey",
                    "email": "ben@benramsey.com",
                    "homepage": "https://benramsey.com"
                }
            ],
            "description": "A PHP library for representing and manipulating collections.",
            "keywords": [
                "array",
                "collection",
                "hash",
                "map",
                "queue",
                "set"
            ],
            "support": {
                "issues": "https://github.com/ramsey/collection/issues",
                "source": "https://github.com/ramsey/collection/tree/2.1.1"
            },
            "time": "2025-03-22T05:38:12+00:00"
        },
        {
            "name": "ramsey/uuid",
            "version": "4.8.1",
            "source": {
                "type": "git",
                "url": "https://github.com/ramsey/uuid.git",
                "reference": "fdf4dd4e2ff1813111bd0ad58d7a1ddbb5b56c28"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/ramsey/uuid/zipball/fdf4dd4e2ff1813111bd0ad58d7a1ddbb5b56c28",
                "reference": "fdf4dd4e2ff1813111bd0ad58d7a1ddbb5b56c28",
                "shasum": ""
            },
            "require": {
                "brick/math": "^0.8.8 || ^0.9 || ^0.10 || ^0.11 || ^0.12 || ^0.13",
                "ext-json": "*",
                "php": "^8.0",
                "ramsey/collection": "^1.2 || ^2.0"
            },
            "replace": {
                "rhumsaa/uuid": "self.version"
            },
            "require-dev": {
                "captainhook/captainhook": "^5.25",
                "captainhook/plugin-composer": "^5.3",
                "dealerdirect/phpcodesniffer-composer-installer": "^1.0",
                "ergebnis/composer-normalize": "^2.47",
                "mockery/mockery": "^1.6",
                "paragonie/random-lib": "^2",
                "php-mock/php-mock": "^2.6",
                "php-mock/php-mock-mockery": "^1.5",
                "php-parallel-lint/php-parallel-lint": "^1.4.0",
                "phpbench/phpbench": "^1.2.14",
                "phpstan/extension-installer": "^1.4",
                "phpstan/phpstan": "^2.1",
                "phpstan/phpstan-mockery": "^2.0",
                "phpstan/phpstan-phpunit": "^2.0",
                "phpunit/phpunit": "^9.6",
                "slevomat/coding-standard": "^8.18",
                "squizlabs/php_codesniffer": "^3.13"
            },
            "suggest": {
                "ext-bcmath": "Enables faster math with arbitrary-precision integers using BCMath.",
                "ext-gmp": "Enables faster math with arbitrary-precision integers using GMP.",
                "ext-uuid": "Enables the use of PeclUuidTimeGenerator and PeclUuidRandomGenerator.",
                "paragonie/random-lib": "Provides RandomLib for use with the RandomLibAdapter",
                "ramsey/uuid-doctrine": "Allows the use of Ramsey\\Uuid\\Uuid as Doctrine field type."
            },
            "type": "library",
            "extra": {
                "captainhook": {
                    "force-install": true
                }
            },
            "autoload": {
                "files": [
                    "src/functions.php"
                ],
                "psr-4": {
                    "Ramsey\\Uuid\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "A PHP library for generating and working with universally unique identifiers (UUIDs).",
            "keywords": [
                "guid",
                "identifier",
                "uuid"
            ],
            "support": {
                "issues": "https://github.com/ramsey/uuid/issues",
                "source": "https://github.com/ramsey/uuid/tree/4.8.1"
            },
            "time": "2025-06-01T06:28:46+00:00"
        },
        {
            "name": "symfony/clock",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/clock.git",
                "reference": "b81435fbd6648ea425d1ee96a2d8e68f4ceacd24"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/clock/zipball/b81435fbd6648ea425d1ee96a2d8e68f4ceacd24",
                "reference": "b81435fbd6648ea425d1ee96a2d8e68f4ceacd24",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "psr/clock": "^1.0",
                "symfony/polyfill-php83": "^1.28"
            },
            "provide": {
                "psr/clock-implementation": "1.0"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "Resources/now.php"
                ],
                "psr-4": {
                    "Symfony\\Component\\Clock\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Decouples applications from the system clock",
            "homepage": "https://symfony.com",
            "keywords": [
                "clock",
                "psr20",
                "time"
            ],
            "support": {
                "source": "https://github.com/symfony/clock/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-25T14:21:43+00:00"
        },
        {
            "name": "symfony/console",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/console.git",
                "reference": "66c1440edf6f339fd82ed6c7caa76cb006211b44"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/console/zipball/66c1440edf6f339fd82ed6c7caa76cb006211b44",
                "reference": "66c1440edf6f339fd82ed6c7caa76cb006211b44",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/polyfill-mbstring": "~1.0",
                "symfony/service-contracts": "^2.5|^3",
                "symfony/string": "^7.2"
            },
            "conflict": {
                "symfony/dependency-injection": "<6.4",
                "symfony/dotenv": "<6.4",
                "symfony/event-dispatcher": "<6.4",
                "symfony/lock": "<6.4",
                "symfony/process": "<6.4"
            },
            "provide": {
                "psr/log-implementation": "1.0|2.0|3.0"
            },
            "require-dev": {
                "psr/log": "^1|^2|^3",
                "symfony/config": "^6.4|^7.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/event-dispatcher": "^6.4|^7.0",
                "symfony/http-foundation": "^6.4|^7.0",
                "symfony/http-kernel": "^6.4|^7.0",
                "symfony/lock": "^6.4|^7.0",
                "symfony/messenger": "^6.4|^7.0",
                "symfony/process": "^6.4|^7.0",
                "symfony/stopwatch": "^6.4|^7.0",
                "symfony/var-dumper": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Console\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Eases the creation of beautiful and testable command line interfaces",
            "homepage": "https://symfony.com",
            "keywords": [
                "cli",
                "command-line",
                "console",
                "terminal"
            ],
            "support": {
                "source": "https://github.com/symfony/console/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-24T10:34:04+00:00"
        },
        {
            "name": "symfony/css-selector",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/css-selector.git",
                "reference": "601a5ce9aaad7bf10797e3663faefce9e26c24e2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/css-selector/zipball/601a5ce9aaad7bf10797e3663faefce9e26c24e2",
                "reference": "601a5ce9aaad7bf10797e3663faefce9e26c24e2",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\CssSelector\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Jean-François Simon",
                    "email": "jeanfrancois.simon@sensiolabs.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Converts CSS selectors to XPath expressions",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/css-selector/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-25T14:21:43+00:00"
        },
        {
            "name": "symfony/deprecation-contracts",
            "version": "v3.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/deprecation-contracts.git",
                "reference": "63afe740e99a13ba87ec199bb07bbdee937a5b62"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/deprecation-contracts/zipball/63afe740e99a13ba87ec199bb07bbdee937a5b62",
                "reference": "63afe740e99a13ba87ec199bb07bbdee937a5b62",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/contracts",
                    "name": "symfony/contracts"
                },
                "branch-alias": {
                    "dev-main": "3.6-dev"
                }
            },
            "autoload": {
                "files": [
                    "function.php"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "A generic function and convention to trigger deprecation notices",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/deprecation-contracts/tree/v3.6.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-25T14:21:43+00:00"
        },
        {
            "name": "symfony/error-handler",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/error-handler.git",
                "reference": "cf68d225bc43629de4ff54778029aee6dc191b83"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/error-handler/zipball/cf68d225bc43629de4ff54778029aee6dc191b83",
                "reference": "cf68d225bc43629de4ff54778029aee6dc191b83",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "psr/log": "^1|^2|^3",
                "symfony/var-dumper": "^6.4|^7.0"
            },
            "conflict": {
                "symfony/deprecation-contracts": "<2.5",
                "symfony/http-kernel": "<6.4"
            },
            "require-dev": {
                "symfony/console": "^6.4|^7.0",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/http-kernel": "^6.4|^7.0",
                "symfony/serializer": "^6.4|^7.0",
                "symfony/webpack-encore-bundle": "^1.0|^2.0"
            },
            "bin": [
                "Resources/bin/patch-type-declarations"
            ],
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\ErrorHandler\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides tools to manage errors and ease debugging PHP code",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/error-handler/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-29T07:19:49+00:00"
        },
        {
            "name": "symfony/event-dispatcher",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/event-dispatcher.git",
                "reference": "497f73ac996a598c92409b44ac43b6690c4f666d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/event-dispatcher/zipball/497f73ac996a598c92409b44ac43b6690c4f666d",
                "reference": "497f73ac996a598c92409b44ac43b6690c4f666d",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/event-dispatcher-contracts": "^2.5|^3"
            },
            "conflict": {
                "symfony/dependency-injection": "<6.4",
                "symfony/service-contracts": "<2.5"
            },
            "provide": {
                "psr/event-dispatcher-implementation": "1.0",
                "symfony/event-dispatcher-implementation": "2.0|3.0"
            },
            "require-dev": {
                "psr/log": "^1|^2|^3",
                "symfony/config": "^6.4|^7.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/error-handler": "^6.4|^7.0",
                "symfony/expression-language": "^6.4|^7.0",
                "symfony/http-foundation": "^6.4|^7.0",
                "symfony/service-contracts": "^2.5|^3",
                "symfony/stopwatch": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\EventDispatcher\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides tools that allow your application components to communicate with each other by dispatching events and listening to them",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/event-dispatcher/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-22T09:11:45+00:00"
        },
        {
            "name": "symfony/event-dispatcher-contracts",
            "version": "v3.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/event-dispatcher-contracts.git",
                "reference": "59eb412e93815df44f05f342958efa9f46b1e586"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/59eb412e93815df44f05f342958efa9f46b1e586",
                "reference": "59eb412e93815df44f05f342958efa9f46b1e586",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1",
                "psr/event-dispatcher": "^1"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/contracts",
                    "name": "symfony/contracts"
                },
                "branch-alias": {
                    "dev-main": "3.6-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Contracts\\EventDispatcher\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Generic abstractions related to dispatching event",
            "homepage": "https://symfony.com",
            "keywords": [
                "abstractions",
                "contracts",
                "decoupling",
                "interfaces",
                "interoperability",
                "standards"
            ],
            "support": {
                "source": "https://github.com/symfony/event-dispatcher-contracts/tree/v3.6.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-25T14:21:43+00:00"
        },
        {
            "name": "symfony/finder",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/finder.git",
                "reference": "ec2344cf77a48253bbca6939aa3d2477773ea63d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/finder/zipball/ec2344cf77a48253bbca6939aa3d2477773ea63d",
                "reference": "ec2344cf77a48253bbca6939aa3d2477773ea63d",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "symfony/filesystem": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Finder\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Finds files and directories via an intuitive fluent interface",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/finder/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-12-30T19:00:26+00:00"
        },
        {
            "name": "symfony/http-foundation",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/http-foundation.git",
                "reference": "4236baf01609667d53b20371486228231eb135fd"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/http-foundation/zipball/4236baf01609667d53b20371486228231eb135fd",
                "reference": "4236baf01609667d53b20371486228231eb135fd",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/deprecation-contracts": "^2.5|^3.0",
                "symfony/polyfill-mbstring": "~1.1",
                "symfony/polyfill-php83": "^1.27"
            },
            "conflict": {
                "doctrine/dbal": "<3.6",
                "symfony/cache": "<6.4.12|>=7.0,<7.1.5"
            },
            "require-dev": {
                "doctrine/dbal": "^3.6|^4",
                "predis/predis": "^1.1|^2.0",
                "symfony/cache": "^6.4.12|^7.1.5",
                "symfony/clock": "^6.4|^7.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/expression-language": "^6.4|^7.0",
                "symfony/http-kernel": "^6.4|^7.0",
                "symfony/mime": "^6.4|^7.0",
                "symfony/rate-limiter": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\HttpFoundation\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Defines an object-oriented layer for the HTTP specification",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/http-foundation/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-12T14:48:23+00:00"
        },
        {
            "name": "symfony/http-kernel",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/http-kernel.git",
                "reference": "ac7b8e163e8c83dce3abcc055a502d4486051a9f"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/http-kernel/zipball/ac7b8e163e8c83dce3abcc055a502d4486051a9f",
                "reference": "ac7b8e163e8c83dce3abcc055a502d4486051a9f",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "psr/log": "^1|^2|^3",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/error-handler": "^6.4|^7.0",
                "symfony/event-dispatcher": "^7.3",
                "symfony/http-foundation": "^7.3",
                "symfony/polyfill-ctype": "^1.8"
            },
            "conflict": {
                "symfony/browser-kit": "<6.4",
                "symfony/cache": "<6.4",
                "symfony/config": "<6.4",
                "symfony/console": "<6.4",
                "symfony/dependency-injection": "<6.4",
                "symfony/doctrine-bridge": "<6.4",
                "symfony/form": "<6.4",
                "symfony/http-client": "<6.4",
                "symfony/http-client-contracts": "<2.5",
                "symfony/mailer": "<6.4",
                "symfony/messenger": "<6.4",
                "symfony/translation": "<6.4",
                "symfony/translation-contracts": "<2.5",
                "symfony/twig-bridge": "<6.4",
                "symfony/validator": "<6.4",
                "symfony/var-dumper": "<6.4",
                "twig/twig": "<3.12"
            },
            "provide": {
                "psr/log-implementation": "1.0|2.0|3.0"
            },
            "require-dev": {
                "psr/cache": "^1.0|^2.0|^3.0",
                "symfony/browser-kit": "^6.4|^7.0",
                "symfony/clock": "^6.4|^7.0",
                "symfony/config": "^6.4|^7.0",
                "symfony/console": "^6.4|^7.0",
                "symfony/css-selector": "^6.4|^7.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/dom-crawler": "^6.4|^7.0",
                "symfony/expression-language": "^6.4|^7.0",
                "symfony/finder": "^6.4|^7.0",
                "symfony/http-client-contracts": "^2.5|^3",
                "symfony/process": "^6.4|^7.0",
                "symfony/property-access": "^7.1",
                "symfony/routing": "^6.4|^7.0",
                "symfony/serializer": "^7.1",
                "symfony/stopwatch": "^6.4|^7.0",
                "symfony/translation": "^6.4|^7.0",
                "symfony/translation-contracts": "^2.5|^3",
                "symfony/uid": "^6.4|^7.0",
                "symfony/validator": "^6.4|^7.0",
                "symfony/var-dumper": "^6.4|^7.0",
                "symfony/var-exporter": "^6.4|^7.0",
                "twig/twig": "^3.12"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\HttpKernel\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides a structured process for converting a Request into a Response",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/http-kernel/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-29T07:47:32+00:00"
        },
        {
            "name": "symfony/mailer",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/mailer.git",
                "reference": "0f375bbbde96ae8c78e4aa3e63aabd486e33364c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/mailer/zipball/0f375bbbde96ae8c78e4aa3e63aabd486e33364c",
                "reference": "0f375bbbde96ae8c78e4aa3e63aabd486e33364c",
                "shasum": ""
            },
            "require": {
                "egulias/email-validator": "^2.1.10|^3|^4",
                "php": ">=8.2",
                "psr/event-dispatcher": "^1",
                "psr/log": "^1|^2|^3",
                "symfony/event-dispatcher": "^6.4|^7.0",
                "symfony/mime": "^7.2",
                "symfony/service-contracts": "^2.5|^3"
            },
            "conflict": {
                "symfony/http-client-contracts": "<2.5",
                "symfony/http-kernel": "<6.4",
                "symfony/messenger": "<6.4",
                "symfony/mime": "<6.4",
                "symfony/twig-bridge": "<6.4"
            },
            "require-dev": {
                "symfony/console": "^6.4|^7.0",
                "symfony/http-client": "^6.4|^7.0",
                "symfony/messenger": "^6.4|^7.0",
                "symfony/twig-bridge": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Mailer\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Helps sending emails",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/mailer/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-04T09:51:09+00:00"
        },
        {
            "name": "symfony/mime",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/mime.git",
                "reference": "0e7b19b2f399c31df0cdbe5d8cbf53f02f6cfcd9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/mime/zipball/0e7b19b2f399c31df0cdbe5d8cbf53f02f6cfcd9",
                "reference": "0e7b19b2f399c31df0cdbe5d8cbf53f02f6cfcd9",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/polyfill-intl-idn": "^1.10",
                "symfony/polyfill-mbstring": "^1.0"
            },
            "conflict": {
                "egulias/email-validator": "~3.0.0",
                "phpdocumentor/reflection-docblock": "<3.2.2",
                "phpdocumentor/type-resolver": "<1.4.0",
                "symfony/mailer": "<6.4",
                "symfony/serializer": "<6.4.3|>7.0,<7.0.3"
            },
            "require-dev": {
                "egulias/email-validator": "^2.1.10|^3.1|^4",
                "league/html-to-markdown": "^5.0",
                "phpdocumentor/reflection-docblock": "^3.0|^4.0|^5.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/process": "^6.4|^7.0",
                "symfony/property-access": "^6.4|^7.0",
                "symfony/property-info": "^6.4|^7.0",
                "symfony/serializer": "^6.4.3|^7.0.3"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Mime\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Allows manipulating MIME messages",
            "homepage": "https://symfony.com",
            "keywords": [
                "mime",
                "mime-type"
            ],
            "support": {
                "source": "https://github.com/symfony/mime/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-02-19T08:51:26+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638",
                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "provide": {
                "ext-ctype": "*"
            },
            "suggest": {
                "ext-ctype": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-intl-grapheme",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-intl-grapheme.git",
                "reference": "b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe",
                "reference": "b9123926e3b7bc2f98c02ad54f6a4b02b91a8abe",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "suggest": {
                "ext-intl": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Intl\\Grapheme\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for intl's grapheme_* functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "grapheme",
                "intl",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-intl-grapheme/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-intl-idn",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-intl-idn.git",
                "reference": "9614ac4d8061dc257ecc64cba1b140873dce8ad3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-intl-idn/zipball/9614ac4d8061dc257ecc64cba1b140873dce8ad3",
                "reference": "9614ac4d8061dc257ecc64cba1b140873dce8ad3",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2",
                "symfony/polyfill-intl-normalizer": "^1.10"
            },
            "suggest": {
                "ext-intl": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Intl\\Idn\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Laurent Bassin",
                    "email": "laurent@bassin.info"
                },
                {
                    "name": "Trevor Rowbotham",
                    "email": "trevor.rowbotham@pm.me"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "idn",
                "intl",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-intl-idn/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-10T14:38:51+00:00"
        },
        {
            "name": "symfony/polyfill-intl-normalizer",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-intl-normalizer.git",
                "reference": "3833d7255cc303546435cb650316bff708a1c75c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/3833d7255cc303546435cb650316bff708a1c75c",
                "reference": "3833d7255cc303546435cb650316bff708a1c75c",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "suggest": {
                "ext-intl": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Intl\\Normalizer\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for intl's Normalizer class and related functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "intl",
                "normalizer",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-intl-normalizer/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-mbstring",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-mbstring.git",
                "reference": "6d857f4d76bd4b343eac26d6b539585d2bc56493"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/6d857f4d76bd4b343eac26d6b539585d2bc56493",
                "reference": "6d857f4d76bd4b343eac26d6b539585d2bc56493",
                "shasum": ""
            },
            "require": {
                "ext-iconv": "*",
                "php": ">=7.2"
            },
            "provide": {
                "ext-mbstring": "*"
            },
            "suggest": {
                "ext-mbstring": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Mbstring\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for the Mbstring extension",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "mbstring",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-12-23T08:48:59+00:00"
        },
        {
            "name": "symfony/polyfill-php80",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php80.git",
                "reference": "0cc9dd0f17f61d8131e7df6b84bd344899fe2608"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/0cc9dd0f17f61d8131e7df6b84bd344899fe2608",
                "reference": "0cc9dd0f17f61d8131e7df6b84bd344899fe2608",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Php80\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ion Bazan",
                    "email": "ion.bazan@gmail.com"
                },
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php80/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-01-02T08:10:11+00:00"
        },
        {
            "name": "symfony/polyfill-php83",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php83.git",
                "reference": "2fb86d65e2d424369ad2905e83b236a8805ba491"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php83/zipball/2fb86d65e2d424369ad2905e83b236a8805ba491",
                "reference": "2fb86d65e2d424369ad2905e83b236a8805ba491",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Php83\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.3+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php83/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-uuid",
            "version": "v1.32.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-uuid.git",
                "reference": "21533be36c24be3f4b1669c4725c7d1d2bab4ae2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-uuid/zipball/21533be36c24be3f4b1669c4725c7d1d2bab4ae2",
                "reference": "21533be36c24be3f4b1669c4725c7d1d2bab4ae2",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "provide": {
                "ext-uuid": "*"
            },
            "suggest": {
                "ext-uuid": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/polyfill",
                    "name": "symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Uuid\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Grégoire Pineau",
                    "email": "lyrixx@lyrixx.info"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for uuid functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "uuid"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-uuid/tree/v1.32.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/process",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/process.git",
                "reference": "40c295f2deb408d5e9d2d32b8ba1dd61e36f05af"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/process/zipball/40c295f2deb408d5e9d2d32b8ba1dd61e36f05af",
                "reference": "40c295f2deb408d5e9d2d32b8ba1dd61e36f05af",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Process\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Executes commands in sub-processes",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/process/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-17T09:11:12+00:00"
        },
        {
            "name": "symfony/routing",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/routing.git",
                "reference": "8e213820c5fea844ecea29203d2a308019007c15"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/routing/zipball/8e213820c5fea844ecea29203d2a308019007c15",
                "reference": "8e213820c5fea844ecea29203d2a308019007c15",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/deprecation-contracts": "^2.5|^3"
            },
            "conflict": {
                "symfony/config": "<6.4",
                "symfony/dependency-injection": "<6.4",
                "symfony/yaml": "<6.4"
            },
            "require-dev": {
                "psr/log": "^1|^2|^3",
                "symfony/config": "^6.4|^7.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/expression-language": "^6.4|^7.0",
                "symfony/http-foundation": "^6.4|^7.0",
                "symfony/yaml": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Routing\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Maps an HTTP request to a set of configuration variables",
            "homepage": "https://symfony.com",
            "keywords": [
                "router",
                "routing",
                "uri",
                "url"
            ],
            "support": {
                "source": "https://github.com/symfony/routing/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-24T20:43:28+00:00"
        },
        {
            "name": "symfony/service-contracts",
            "version": "v3.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/service-contracts.git",
                "reference": "f021b05a130d35510bd6b25fe9053c2a8a15d5d4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/service-contracts/zipball/f021b05a130d35510bd6b25fe9053c2a8a15d5d4",
                "reference": "f021b05a130d35510bd6b25fe9053c2a8a15d5d4",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1",
                "psr/container": "^1.1|^2.0",
                "symfony/deprecation-contracts": "^2.5|^3"
            },
            "conflict": {
                "ext-psr": "<1.1|>=2"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/contracts",
                    "name": "symfony/contracts"
                },
                "branch-alias": {
                    "dev-main": "3.6-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Contracts\\Service\\": ""
                },
                "exclude-from-classmap": [
                    "/Test/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Generic abstractions related to writing services",
            "homepage": "https://symfony.com",
            "keywords": [
                "abstractions",
                "contracts",
                "decoupling",
                "interfaces",
                "interoperability",
                "standards"
            ],
            "support": {
                "source": "https://github.com/symfony/service-contracts/tree/v3.6.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-25T09:37:31+00:00"
        },
        {
            "name": "symfony/string",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/string.git",
                "reference": "f3570b8c61ca887a9e2938e85cb6458515d2b125"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/string/zipball/f3570b8c61ca887a9e2938e85cb6458515d2b125",
                "reference": "f3570b8c61ca887a9e2938e85cb6458515d2b125",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/polyfill-ctype": "~1.8",
                "symfony/polyfill-intl-grapheme": "~1.0",
                "symfony/polyfill-intl-normalizer": "~1.0",
                "symfony/polyfill-mbstring": "~1.0"
            },
            "conflict": {
                "symfony/translation-contracts": "<2.5"
            },
            "require-dev": {
                "symfony/emoji": "^7.1",
                "symfony/error-handler": "^6.4|^7.0",
                "symfony/http-client": "^6.4|^7.0",
                "symfony/intl": "^6.4|^7.0",
                "symfony/translation-contracts": "^2.5|^3.0",
                "symfony/var-exporter": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "Resources/functions.php"
                ],
                "psr-4": {
                    "Symfony\\Component\\String\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way",
            "homepage": "https://symfony.com",
            "keywords": [
                "grapheme",
                "i18n",
                "string",
                "unicode",
                "utf-8",
                "utf8"
            ],
            "support": {
                "source": "https://github.com/symfony/string/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-20T20:19:01+00:00"
        },
        {
            "name": "symfony/translation",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/translation.git",
                "reference": "4aba29076a29a3aa667e09b791e5f868973a8667"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/translation/zipball/4aba29076a29a3aa667e09b791e5f868973a8667",
                "reference": "4aba29076a29a3aa667e09b791e5f868973a8667",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/polyfill-mbstring": "~1.0",
                "symfony/translation-contracts": "^2.5|^3.0"
            },
            "conflict": {
                "nikic/php-parser": "<5.0",
                "symfony/config": "<6.4",
                "symfony/console": "<6.4",
                "symfony/dependency-injection": "<6.4",
                "symfony/http-client-contracts": "<2.5",
                "symfony/http-kernel": "<6.4",
                "symfony/service-contracts": "<2.5",
                "symfony/twig-bundle": "<6.4",
                "symfony/yaml": "<6.4"
            },
            "provide": {
                "symfony/translation-implementation": "2.3|3.0"
            },
            "require-dev": {
                "nikic/php-parser": "^5.0",
                "psr/log": "^1|^2|^3",
                "symfony/config": "^6.4|^7.0",
                "symfony/console": "^6.4|^7.0",
                "symfony/dependency-injection": "^6.4|^7.0",
                "symfony/finder": "^6.4|^7.0",
                "symfony/http-client-contracts": "^2.5|^3.0",
                "symfony/http-kernel": "^6.4|^7.0",
                "symfony/intl": "^6.4|^7.0",
                "symfony/polyfill-intl-icu": "^1.21",
                "symfony/routing": "^6.4|^7.0",
                "symfony/service-contracts": "^2.5|^3",
                "symfony/yaml": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "Resources/functions.php"
                ],
                "psr-4": {
                    "Symfony\\Component\\Translation\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides tools to internationalize your application",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/translation/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-29T07:19:49+00:00"
        },
        {
            "name": "symfony/translation-contracts",
            "version": "v3.6.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/translation-contracts.git",
                "reference": "df210c7a2573f1913b2d17cc95f90f53a73d8f7d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/translation-contracts/zipball/df210c7a2573f1913b2d17cc95f90f53a73d8f7d",
                "reference": "df210c7a2573f1913b2d17cc95f90f53a73d8f7d",
                "shasum": ""
            },
            "require": {
                "php": ">=8.1"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "url": "https://github.com/symfony/contracts",
                    "name": "symfony/contracts"
                },
                "branch-alias": {
                    "dev-main": "3.6-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Symfony\\Contracts\\Translation\\": ""
                },
                "exclude-from-classmap": [
                    "/Test/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Generic abstractions related to translation",
            "homepage": "https://symfony.com",
            "keywords": [
                "abstractions",
                "contracts",
                "decoupling",
                "interfaces",
                "interoperability",
                "standards"
            ],
            "support": {
                "source": "https://github.com/symfony/translation-contracts/tree/v3.6.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-27T08:32:26+00:00"
        },
        {
            "name": "symfony/uid",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/uid.git",
                "reference": "7beeb2b885cd584cd01e126c5777206ae4c3c6a3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/uid/zipball/7beeb2b885cd584cd01e126c5777206ae4c3c6a3",
                "reference": "7beeb2b885cd584cd01e126c5777206ae4c3c6a3",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/polyfill-uuid": "^1.15"
            },
            "require-dev": {
                "symfony/console": "^6.4|^7.0"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Uid\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Grégoire Pineau",
                    "email": "lyrixx@lyrixx.info"
                },
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides an object-oriented API to generate and represent UIDs",
            "homepage": "https://symfony.com",
            "keywords": [
                "UID",
                "ulid",
                "uuid"
            ],
            "support": {
                "source": "https://github.com/symfony/uid/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-24T14:28:13+00:00"
        },
        {
            "name": "symfony/var-dumper",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/var-dumper.git",
                "reference": "548f6760c54197b1084e1e5c71f6d9d523f2f78e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/var-dumper/zipball/548f6760c54197b1084e1e5c71f6d9d523f2f78e",
                "reference": "548f6760c54197b1084e1e5c71f6d9d523f2f78e",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/deprecation-contracts": "^2.5|^3",
                "symfony/polyfill-mbstring": "~1.0"
            },
            "conflict": {
                "symfony/console": "<6.4"
            },
            "require-dev": {
                "ext-iconv": "*",
                "symfony/console": "^6.4|^7.0",
                "symfony/http-kernel": "^6.4|^7.0",
                "symfony/process": "^6.4|^7.0",
                "symfony/uid": "^6.4|^7.0",
                "twig/twig": "^3.12"
            },
            "bin": [
                "Resources/bin/var-dump-server"
            ],
            "type": "library",
            "autoload": {
                "files": [
                    "Resources/functions/dump.php"
                ],
                "psr-4": {
                    "Symfony\\Component\\VarDumper\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Provides mechanisms for walking through any arbitrary PHP variable",
            "homepage": "https://symfony.com",
            "keywords": [
                "debug",
                "dump"
            ],
            "support": {
                "source": "https://github.com/symfony/var-dumper/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-27T18:39:23+00:00"
        },
        {
            "name": "tijsverkoyen/css-to-inline-styles",
            "version": "v2.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/tijsverkoyen/CssToInlineStyles.git",
                "reference": "0d72ac1c00084279c1816675284073c5a337c20d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/tijsverkoyen/CssToInlineStyles/zipball/0d72ac1c00084279c1816675284073c5a337c20d",
                "reference": "0d72ac1c00084279c1816675284073c5a337c20d",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "php": "^7.4 || ^8.0",
                "symfony/css-selector": "^5.4 || ^6.0 || ^7.0"
            },
            "require-dev": {
                "phpstan/phpstan": "^2.0",
                "phpstan/phpstan-phpunit": "^2.0",
                "phpunit/phpunit": "^8.5.21 || ^9.5.10"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "TijsVerkoyen\\CssToInlineStyles\\": "src"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Tijs Verkoyen",
                    "email": "css_to_inline_styles@verkoyen.eu",
                    "role": "Developer"
                }
            ],
            "description": "CssToInlineStyles is a class that enables you to convert HTML-pages/files into HTML-pages/files with inline styles. This is very useful when you're sending emails.",
            "homepage": "https://github.com/tijsverkoyen/CssToInlineStyles",
            "support": {
                "issues": "https://github.com/tijsverkoyen/CssToInlineStyles/issues",
                "source": "https://github.com/tijsverkoyen/CssToInlineStyles/tree/v2.3.0"
            },
            "time": "2024-12-21T16:25:41+00:00"
        },
        {
            "name": "vlucas/phpdotenv",
            "version": "v5.6.2",
            "source": {
                "type": "git",
                "url": "https://github.com/vlucas/phpdotenv.git",
                "reference": "24ac4c74f91ee2c193fa1aaa5c249cb0822809af"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/vlucas/phpdotenv/zipball/24ac4c74f91ee2c193fa1aaa5c249cb0822809af",
                "reference": "24ac4c74f91ee2c193fa1aaa5c249cb0822809af",
                "shasum": ""
            },
            "require": {
                "ext-pcre": "*",
                "graham-campbell/result-type": "^1.1.3",
                "php": "^7.2.5 || ^8.0",
                "phpoption/phpoption": "^1.9.3",
                "symfony/polyfill-ctype": "^1.24",
                "symfony/polyfill-mbstring": "^1.24",
                "symfony/polyfill-php80": "^1.24"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "ext-filter": "*",
                "phpunit/phpunit": "^8.5.34 || ^9.6.13 || ^10.4.2"
            },
            "suggest": {
                "ext-filter": "Required to use the boolean validator."
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-master": "5.6-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Dotenv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Vance Lucas",
                    "email": "vance@vancelucas.com",
                    "homepage": "https://github.com/vlucas"
                }
            ],
            "description": "Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.",
            "keywords": [
                "dotenv",
                "env",
                "environment"
            ],
            "support": {
                "issues": "https://github.com/vlucas/phpdotenv/issues",
                "source": "https://github.com/vlucas/phpdotenv/tree/v5.6.2"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/vlucas/phpdotenv",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-30T23:37:27+00:00"
        },
        {
            "name": "voku/portable-ascii",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/voku/portable-ascii.git",
                "reference": "b1d923f88091c6bf09699efcd7c8a1b1bfd7351d"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/voku/portable-ascii/zipball/b1d923f88091c6bf09699efcd7c8a1b1bfd7351d",
                "reference": "b1d923f88091c6bf09699efcd7c8a1b1bfd7351d",
                "shasum": ""
            },
            "require": {
                "php": ">=7.0.0"
            },
            "require-dev": {
                "phpunit/phpunit": "~6.0 || ~7.0 || ~9.0"
            },
            "suggest": {
                "ext-intl": "Use Intl for transliterator_transliterate() support"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "voku\\": "src/voku/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Lars Moelleken",
                    "homepage": "https://www.moelleken.org/"
                }
            ],
            "description": "Portable ASCII library - performance optimized (ascii) string functions for php.",
            "homepage": "https://github.com/voku/portable-ascii",
            "keywords": [
                "ascii",
                "clean",
                "php"
            ],
            "support": {
                "issues": "https://github.com/voku/portable-ascii/issues",
                "source": "https://github.com/voku/portable-ascii/tree/2.0.3"
            },
            "funding": [
                {
                    "url": "https://www.paypal.me/moelleken",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/voku",
                    "type": "github"
                },
                {
                    "url": "https://opencollective.com/portable-ascii",
                    "type": "open_collective"
                },
                {
                    "url": "https://www.patreon.com/voku",
                    "type": "patreon"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/voku/portable-ascii",
                    "type": "tidelift"
                }
            ],
            "time": "2024-11-21T01:49:47+00:00"
        },
        {
            "name": "webmozart/assert",
            "version": "1.11.0",
            "source": {
                "type": "git",
                "url": "https://github.com/webmozarts/assert.git",
                "reference": "11cb2199493b2f8a3b53e7f19068fc6aac760991"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/webmozarts/assert/zipball/11cb2199493b2f8a3b53e7f19068fc6aac760991",
                "reference": "11cb2199493b2f8a3b53e7f19068fc6aac760991",
                "shasum": ""
            },
            "require": {
                "ext-ctype": "*",
                "php": "^7.2 || ^8.0"
            },
            "conflict": {
                "phpstan/phpstan": "<0.12.20",
                "vimeo/psalm": "<4.6.1 || 4.6.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^8.5.13"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.10-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Webmozart\\Assert\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Assertions to validate method input/output with nice error messages.",
            "keywords": [
                "assert",
                "check",
                "validate"
            ],
            "support": {
                "issues": "https://github.com/webmozarts/assert/issues",
                "source": "https://github.com/webmozarts/assert/tree/1.11.0"
            },
            "time": "2022-06-03T18:03:27+00:00"
        }
    ],
    "packages-dev": [
        {
            "name": "fakerphp/faker",
            "version": "v1.24.1",
            "source": {
                "type": "git",
                "url": "https://github.com/FakerPHP/Faker.git",
                "reference": "e0ee18eb1e6dc3cda3ce9fd97e5a0689a88a64b5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/FakerPHP/Faker/zipball/e0ee18eb1e6dc3cda3ce9fd97e5a0689a88a64b5",
                "reference": "e0ee18eb1e6dc3cda3ce9fd97e5a0689a88a64b5",
                "shasum": ""
            },
            "require": {
                "php": "^7.4 || ^8.0",
                "psr/container": "^1.0 || ^2.0",
                "symfony/deprecation-contracts": "^2.2 || ^3.0"
            },
            "conflict": {
                "fzaninotto/faker": "*"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.4.1",
                "doctrine/persistence": "^1.3 || ^2.0",
                "ext-intl": "*",
                "phpunit/phpunit": "^9.5.26",
                "symfony/phpunit-bridge": "^5.4.16"
            },
            "suggest": {
                "doctrine/orm": "Required to use Faker\\ORM\\Doctrine",
                "ext-curl": "Required by Faker\\Provider\\Image to download images.",
                "ext-dom": "Required by Faker\\Provider\\HtmlLorem for generating random HTML.",
                "ext-iconv": "Required by Faker\\Provider\\ru_RU\\Text::realText() for generating real Russian text.",
                "ext-mbstring": "Required for multibyte Unicode string functionality."
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Faker\\": "src/Faker/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "François Zaninotto"
                }
            ],
            "description": "Faker is a PHP library that generates fake data for you.",
            "keywords": [
                "data",
                "faker",
                "fixtures"
            ],
            "support": {
                "issues": "https://github.com/FakerPHP/Faker/issues",
                "source": "https://github.com/FakerPHP/Faker/tree/v1.24.1"
            },
            "time": "2024-11-21T13:46:39+00:00"
        },
        {
            "name": "filp/whoops",
            "version": "2.18.3",
            "source": {
                "type": "git",
                "url": "https://github.com/filp/whoops.git",
                "reference": "59a123a3d459c5a23055802237cb317f609867e5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/filp/whoops/zipball/59a123a3d459c5a23055802237cb317f609867e5",
                "reference": "59a123a3d459c5a23055802237cb317f609867e5",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0",
                "psr/log": "^1.0.1 || ^2.0 || ^3.0"
            },
            "require-dev": {
                "mockery/mockery": "^1.0",
                "phpunit/phpunit": "^7.5.20 || ^8.5.8 || ^9.3.3",
                "symfony/var-dumper": "^4.0 || ^5.0"
            },
            "suggest": {
                "symfony/var-dumper": "Pretty print complex values better with var-dumper available",
                "whoops/soap": "Formats errors as SOAP responses"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.7-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Whoops\\": "src/Whoops/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Filipe Dobreira",
                    "homepage": "https://github.com/filp",
                    "role": "Developer"
                }
            ],
            "description": "php error handling for cool kids",
            "homepage": "https://filp.github.io/whoops/",
            "keywords": [
                "error",
                "exception",
                "handling",
                "library",
                "throwable",
                "whoops"
            ],
            "support": {
                "issues": "https://github.com/filp/whoops/issues",
                "source": "https://github.com/filp/whoops/tree/2.18.3"
            },
            "funding": [
                {
                    "url": "https://github.com/denis-sokolov",
                    "type": "github"
                }
            ],
            "time": "2025-06-16T00:02:10+00:00"
        },
        {
            "name": "hamcrest/hamcrest-php",
            "version": "v2.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/hamcrest/hamcrest-php.git",
                "reference": "f8b1c0173b22fa6ec77a81fe63e5b01eba7e6487"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/hamcrest/hamcrest-php/zipball/f8b1c0173b22fa6ec77a81fe63e5b01eba7e6487",
                "reference": "f8b1c0173b22fa6ec77a81fe63e5b01eba7e6487",
                "shasum": ""
            },
            "require": {
                "php": "^7.4|^8.0"
            },
            "replace": {
                "cordoval/hamcrest-php": "*",
                "davedevelopment/hamcrest-php": "*",
                "kodova/hamcrest-php": "*"
            },
            "require-dev": {
                "phpunit/php-file-iterator": "^1.4 || ^2.0 || ^3.0",
                "phpunit/phpunit": "^4.8.36 || ^5.7 || ^6.5 || ^7.0 || ^8.0 || ^9.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "hamcrest"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "description": "This is the PHP port of Hamcrest Matchers",
            "keywords": [
                "test"
            ],
            "support": {
                "issues": "https://github.com/hamcrest/hamcrest-php/issues",
                "source": "https://github.com/hamcrest/hamcrest-php/tree/v2.1.1"
            },
            "time": "2025-04-30T06:54:44+00:00"
        },
        {
            "name": "laravel/breeze",
            "version": "v2.3.7",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/breeze.git",
                "reference": "73149b5d84be3881b2fdda94b2ad289e7905c1a4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/breeze/zipball/73149b5d84be3881b2fdda94b2ad289e7905c1a4",
                "reference": "73149b5d84be3881b2fdda94b2ad289e7905c1a4",
                "shasum": ""
            },
            "require": {
                "illuminate/console": "^11.0|^12.0",
                "illuminate/filesystem": "^11.0|^12.0",
                "illuminate/support": "^11.0|^12.0",
                "illuminate/validation": "^11.0|^12.0",
                "php": "^8.2.0",
                "symfony/console": "^7.0"
            },
            "require-dev": {
                "laravel/framework": "^11.0|^12.0",
                "orchestra/testbench-core": "^9.0|^10.0",
                "phpstan/phpstan": "^2.0"
            },
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "Laravel\\Breeze\\BreezeServiceProvider"
                    ]
                }
            },
            "autoload": {
                "psr-4": {
                    "Laravel\\Breeze\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Taylor Otwell",
                    "email": "taylor@laravel.com"
                }
            ],
            "description": "Minimal Laravel authentication scaffolding with Blade and Tailwind.",
            "keywords": [
                "auth",
                "laravel"
            ],
            "support": {
                "issues": "https://github.com/laravel/breeze/issues",
                "source": "https://github.com/laravel/breeze"
            },
            "time": "2025-06-17T13:07:20+00:00"
        },
        {
            "name": "laravel/pail",
            "version": "v1.2.3",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/pail.git",
                "reference": "8cc3d575c1f0e57eeb923f366a37528c50d2385a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/pail/zipball/8cc3d575c1f0e57eeb923f366a37528c50d2385a",
                "reference": "8cc3d575c1f0e57eeb923f366a37528c50d2385a",
                "shasum": ""
            },
            "require": {
                "ext-mbstring": "*",
                "illuminate/console": "^10.24|^11.0|^12.0",
                "illuminate/contracts": "^10.24|^11.0|^12.0",
                "illuminate/log": "^10.24|^11.0|^12.0",
                "illuminate/process": "^10.24|^11.0|^12.0",
                "illuminate/support": "^10.24|^11.0|^12.0",
                "nunomaduro/termwind": "^1.15|^2.0",
                "php": "^8.2",
                "symfony/console": "^6.0|^7.0"
            },
            "require-dev": {
                "laravel/framework": "^10.24|^11.0|^12.0",
                "laravel/pint": "^1.13",
                "orchestra/testbench-core": "^8.13|^9.0|^10.0",
                "pestphp/pest": "^2.20|^3.0",
                "pestphp/pest-plugin-type-coverage": "^2.3|^3.0",
                "phpstan/phpstan": "^1.12.27",
                "symfony/var-dumper": "^6.3|^7.0"
            },
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "Laravel\\Pail\\PailServiceProvider"
                    ]
                },
                "branch-alias": {
                    "dev-main": "1.x-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Laravel\\Pail\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Taylor Otwell",
                    "email": "taylor@laravel.com"
                },
                {
                    "name": "Nuno Maduro",
                    "email": "enunomaduro@gmail.com"
                }
            ],
            "description": "Easily delve into your Laravel application's log files directly from the command line.",
            "homepage": "https://github.com/laravel/pail",
            "keywords": [
                "dev",
                "laravel",
                "logs",
                "php",
                "tail"
            ],
            "support": {
                "issues": "https://github.com/laravel/pail/issues",
                "source": "https://github.com/laravel/pail"
            },
            "time": "2025-06-05T13:55:57+00:00"
        },
        {
            "name": "laravel/pint",
            "version": "v1.22.1",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/pint.git",
                "reference": "941d1927c5ca420c22710e98420287169c7bcaf7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/pint/zipball/941d1927c5ca420c22710e98420287169c7bcaf7",
                "reference": "941d1927c5ca420c22710e98420287169c7bcaf7",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "ext-mbstring": "*",
                "ext-tokenizer": "*",
                "ext-xml": "*",
                "php": "^8.2.0"
            },
            "require-dev": {
                "friendsofphp/php-cs-fixer": "^3.75.0",
                "illuminate/view": "^11.44.7",
                "larastan/larastan": "^3.4.0",
                "laravel-zero/framework": "^11.36.1",
                "mockery/mockery": "^1.6.12",
                "nunomaduro/termwind": "^2.3.1",
                "pestphp/pest": "^2.36.0"
            },
            "bin": [
                "builds/pint"
            ],
            "type": "project",
            "autoload": {
                "psr-4": {
                    "App\\": "app/",
                    "Database\\Seeders\\": "database/seeders/",
                    "Database\\Factories\\": "database/factories/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nuno Maduro",
                    "email": "enunomaduro@gmail.com"
                }
            ],
            "description": "An opinionated code formatter for PHP.",
            "homepage": "https://laravel.com",
            "keywords": [
                "format",
                "formatter",
                "lint",
                "linter",
                "php"
            ],
            "support": {
                "issues": "https://github.com/laravel/pint/issues",
                "source": "https://github.com/laravel/pint"
            },
            "time": "2025-05-08T08:38:12+00:00"
        },
        {
            "name": "laravel/sail",
            "version": "v1.43.1",
            "source": {
                "type": "git",
                "url": "https://github.com/laravel/sail.git",
                "reference": "3e7d899232a8c5e3ea4fc6dee7525ad583887e72"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/laravel/sail/zipball/3e7d899232a8c5e3ea4fc6dee7525ad583887e72",
                "reference": "3e7d899232a8c5e3ea4fc6dee7525ad583887e72",
                "shasum": ""
            },
            "require": {
                "illuminate/console": "^9.52.16|^10.0|^11.0|^12.0",
                "illuminate/contracts": "^9.52.16|^10.0|^11.0|^12.0",
                "illuminate/support": "^9.52.16|^10.0|^11.0|^12.0",
                "php": "^8.0",
                "symfony/console": "^6.0|^7.0",
                "symfony/yaml": "^6.0|^7.0"
            },
            "require-dev": {
                "orchestra/testbench": "^7.0|^8.0|^9.0|^10.0",
                "phpstan/phpstan": "^1.10"
            },
            "bin": [
                "bin/sail"
            ],
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "Laravel\\Sail\\SailServiceProvider"
                    ]
                }
            },
            "autoload": {
                "psr-4": {
                    "Laravel\\Sail\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Taylor Otwell",
                    "email": "taylor@laravel.com"
                }
            ],
            "description": "Docker files for running a basic Laravel application.",
            "keywords": [
                "docker",
                "laravel"
            ],
            "support": {
                "issues": "https://github.com/laravel/sail/issues",
                "source": "https://github.com/laravel/sail"
            },
            "time": "2025-05-19T13:19:21+00:00"
        },
        {
            "name": "mockery/mockery",
            "version": "1.6.12",
            "source": {
                "type": "git",
                "url": "https://github.com/mockery/mockery.git",
                "reference": "1f4efdd7d3beafe9807b08156dfcb176d18f1699"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/mockery/mockery/zipball/1f4efdd7d3beafe9807b08156dfcb176d18f1699",
                "reference": "1f4efdd7d3beafe9807b08156dfcb176d18f1699",
                "shasum": ""
            },
            "require": {
                "hamcrest/hamcrest-php": "^2.0.1",
                "lib-pcre": ">=7.0",
                "php": ">=7.3"
            },
            "conflict": {
                "phpunit/phpunit": "<8.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^8.5 || ^9.6.17",
                "symplify/easy-coding-standard": "^12.1.14"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "library/helpers.php",
                    "library/Mockery.php"
                ],
                "psr-4": {
                    "Mockery\\": "library/Mockery"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Pádraic Brady",
                    "email": "padraic.brady@gmail.com",
                    "homepage": "https://github.com/padraic",
                    "role": "Author"
                },
                {
                    "name": "Dave Marshall",
                    "email": "dave.marshall@atstsolutions.co.uk",
                    "homepage": "https://davedevelopment.co.uk",
                    "role": "Developer"
                },
                {
                    "name": "Nathanael Esayeas",
                    "email": "nathanael.esayeas@protonmail.com",
                    "homepage": "https://github.com/ghostwriter",
                    "role": "Lead Developer"
                }
            ],
            "description": "Mockery is a simple yet flexible PHP mock object framework",
            "homepage": "https://github.com/mockery/mockery",
            "keywords": [
                "BDD",
                "TDD",
                "library",
                "mock",
                "mock objects",
                "mockery",
                "stub",
                "test",
                "test double",
                "testing"
            ],
            "support": {
                "docs": "https://docs.mockery.io/",
                "issues": "https://github.com/mockery/mockery/issues",
                "rss": "https://github.com/mockery/mockery/releases.atom",
                "security": "https://github.com/mockery/mockery/security/advisories",
                "source": "https://github.com/mockery/mockery"
            },
            "time": "2024-05-16T03:13:13+00:00"
        },
        {
            "name": "myclabs/deep-copy",
            "version": "1.13.1",
            "source": {
                "type": "git",
                "url": "https://github.com/myclabs/DeepCopy.git",
                "reference": "1720ddd719e16cf0db4eb1c6eca108031636d46c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/1720ddd719e16cf0db4eb1c6eca108031636d46c",
                "reference": "1720ddd719e16cf0db4eb1c6eca108031636d46c",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0"
            },
            "conflict": {
                "doctrine/collections": "<1.6.8",
                "doctrine/common": "<2.13.3 || >=3 <3.2.2"
            },
            "require-dev": {
                "doctrine/collections": "^1.6.8",
                "doctrine/common": "^2.13.3 || ^3.2.2",
                "phpspec/prophecy": "^1.10",
                "phpunit/phpunit": "^7.5.20 || ^8.5.23 || ^9.5.13"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/DeepCopy/deep_copy.php"
                ],
                "psr-4": {
                    "DeepCopy\\": "src/DeepCopy/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create deep copies (clones) of your objects",
            "keywords": [
                "clone",
                "copy",
                "duplicate",
                "object",
                "object graph"
            ],
            "support": {
                "issues": "https://github.com/myclabs/DeepCopy/issues",
                "source": "https://github.com/myclabs/DeepCopy/tree/1.13.1"
            },
            "funding": [
                {
                    "url": "https://tidelift.com/funding/github/packagist/myclabs/deep-copy",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-29T12:36:36+00:00"
        },
        {
            "name": "nunomaduro/collision",
            "version": "v8.8.1",
            "source": {
                "type": "git",
                "url": "https://github.com/nunomaduro/collision.git",
                "reference": "44ccb82e3e21efb5446748d2a3c81a030ac22bd5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nunomaduro/collision/zipball/44ccb82e3e21efb5446748d2a3c81a030ac22bd5",
                "reference": "44ccb82e3e21efb5446748d2a3c81a030ac22bd5",
                "shasum": ""
            },
            "require": {
                "filp/whoops": "^2.18.1",
                "nunomaduro/termwind": "^2.3.1",
                "php": "^8.2.0",
                "symfony/console": "^7.3.0"
            },
            "conflict": {
                "laravel/framework": "<11.44.2 || >=13.0.0",
                "phpunit/phpunit": "<11.5.15 || >=13.0.0"
            },
            "require-dev": {
                "brianium/paratest": "^7.8.3",
                "larastan/larastan": "^3.4.2",
                "laravel/framework": "^11.44.2 || ^12.18",
                "laravel/pint": "^1.22.1",
                "laravel/sail": "^1.43.1",
                "laravel/sanctum": "^4.1.1",
                "laravel/tinker": "^2.10.1",
                "orchestra/testbench-core": "^9.12.0 || ^10.4",
                "pestphp/pest": "^3.8.2",
                "sebastian/environment": "^7.2.1 || ^8.0"
            },
            "type": "library",
            "extra": {
                "laravel": {
                    "providers": [
                        "NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider"
                    ]
                },
                "branch-alias": {
                    "dev-8.x": "8.x-dev"
                }
            },
            "autoload": {
                "files": [
                    "./src/Adapters/Phpunit/Autoload.php"
                ],
                "psr-4": {
                    "NunoMaduro\\Collision\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nuno Maduro",
                    "email": "enunomaduro@gmail.com"
                }
            ],
            "description": "Cli error handling for console/command-line PHP applications.",
            "keywords": [
                "artisan",
                "cli",
                "command-line",
                "console",
                "dev",
                "error",
                "handling",
                "laravel",
                "laravel-zero",
                "php",
                "symfony"
            ],
            "support": {
                "issues": "https://github.com/nunomaduro/collision/issues",
                "source": "https://github.com/nunomaduro/collision"
            },
            "funding": [
                {
                    "url": "https://www.paypal.com/paypalme/enunomaduro",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/nunomaduro",
                    "type": "github"
                },
                {
                    "url": "https://www.patreon.com/nunomaduro",
                    "type": "patreon"
                }
            ],
            "time": "2025-06-11T01:04:21+00:00"
        },
        {
            "name": "phar-io/manifest",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/manifest.git",
                "reference": "54750ef60c58e43759730615a392c31c80e23176"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176",
                "reference": "54750ef60c58e43759730615a392c31c80e23176",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-phar": "*",
                "ext-xmlwriter": "*",
                "phar-io/version": "^3.0.1",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
            "support": {
                "issues": "https://github.com/phar-io/manifest/issues",
                "source": "https://github.com/phar-io/manifest/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2024-03-03T12:33:53+00:00"
        },
        {
            "name": "phar-io/version",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/version.git",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Library for handling version information and constraints",
            "support": {
                "issues": "https://github.com/phar-io/version/issues",
                "source": "https://github.com/phar-io/version/tree/3.2.1"
            },
            "time": "2022-02-21T01:04:05+00:00"
        },
        {
            "name": "phpunit/php-code-coverage",
            "version": "11.0.10",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
                "reference": "1a800a7446add2d79cc6b3c01c45381810367d76"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/1a800a7446add2d79cc6b3c01c45381810367d76",
                "reference": "1a800a7446add2d79cc6b3c01c45381810367d76",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-xmlwriter": "*",
                "nikic/php-parser": "^5.4.0",
                "php": ">=8.2",
                "phpunit/php-file-iterator": "^5.1.0",
                "phpunit/php-text-template": "^4.0.1",
                "sebastian/code-unit-reverse-lookup": "^4.0.1",
                "sebastian/complexity": "^4.0.1",
                "sebastian/environment": "^7.2.0",
                "sebastian/lines-of-code": "^3.0.1",
                "sebastian/version": "^5.0.2",
                "theseer/tokenizer": "^1.2.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.5.2"
            },
            "suggest": {
                "ext-pcov": "PHP extension that provides line coverage",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "11.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
            "keywords": [
                "coverage",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
                "security": "https://github.com/sebastianbergmann/php-code-coverage/security/policy",
                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/show"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                },
                {
                    "url": "https://liberapay.com/sebastianbergmann",
                    "type": "liberapay"
                },
                {
                    "url": "https://thanks.dev/u/gh/sebastianbergmann",
                    "type": "thanks_dev"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpunit/php-code-coverage",
                    "type": "tidelift"
                }
            ],
            "time": "2025-06-18T08:56:18+00:00"
        },
        {
            "name": "phpunit/php-file-iterator",
            "version": "5.1.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
                "reference": "118cfaaa8bc5aef3287bf315b6060b1174754af6"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/118cfaaa8bc5aef3287bf315b6060b1174754af6",
                "reference": "118cfaaa8bc5aef3287bf315b6060b1174754af6",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
            "keywords": [
                "filesystem",
                "iterator"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
                "security": "https://github.com/sebastianbergmann/php-file-iterator/security/policy",
                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/5.1.0"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-08-27T05:02:59+00:00"
        },
        {
            "name": "phpunit/php-invoker",
            "version": "5.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-invoker.git",
                "reference": "c1ca3814734c07492b3d4c5f794f4b0995333da2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/c1ca3814734c07492b3d4c5f794f4b0995333da2",
                "reference": "c1ca3814734c07492b3d4c5f794f4b0995333da2",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "ext-pcntl": "*",
                "phpunit/phpunit": "^11.0"
            },
            "suggest": {
                "ext-pcntl": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Invoke callables with a timeout",
            "homepage": "https://github.com/sebastianbergmann/php-invoker/",
            "keywords": [
                "process"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-invoker/issues",
                "security": "https://github.com/sebastianbergmann/php-invoker/security/policy",
                "source": "https://github.com/sebastianbergmann/php-invoker/tree/5.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T05:07:44+00:00"
        },
        {
            "name": "phpunit/php-text-template",
            "version": "4.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-text-template.git",
                "reference": "3e0404dc6b300e6bf56415467ebcb3fe4f33e964"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/3e0404dc6b300e6bf56415467ebcb3fe4f33e964",
                "reference": "3e0404dc6b300e6bf56415467ebcb3fe4f33e964",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Simple template engine.",
            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
            "keywords": [
                "template"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
                "security": "https://github.com/sebastianbergmann/php-text-template/security/policy",
                "source": "https://github.com/sebastianbergmann/php-text-template/tree/4.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T05:08:43+00:00"
        },
        {
            "name": "phpunit/php-timer",
            "version": "7.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-timer.git",
                "reference": "3b415def83fbcb41f991d9ebf16ae4ad8b7837b3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/3b415def83fbcb41f991d9ebf16ae4ad8b7837b3",
                "reference": "3b415def83fbcb41f991d9ebf16ae4ad8b7837b3",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "7.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Utility class for timing",
            "homepage": "https://github.com/sebastianbergmann/php-timer/",
            "keywords": [
                "timer"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
                "security": "https://github.com/sebastianbergmann/php-timer/security/policy",
                "source": "https://github.com/sebastianbergmann/php-timer/tree/7.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T05:09:35+00:00"
        },
        {
            "name": "phpunit/phpunit",
            "version": "11.5.23",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit.git",
                "reference": "86ebcd8a3dbcd1857d88505109b2a2b376501cde"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/86ebcd8a3dbcd1857d88505109b2a2b376501cde",
                "reference": "86ebcd8a3dbcd1857d88505109b2a2b376501cde",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-json": "*",
                "ext-libxml": "*",
                "ext-mbstring": "*",
                "ext-xml": "*",
                "ext-xmlwriter": "*",
                "myclabs/deep-copy": "^1.13.1",
                "phar-io/manifest": "^2.0.4",
                "phar-io/version": "^3.2.1",
                "php": ">=8.2",
                "phpunit/php-code-coverage": "^11.0.9",
                "phpunit/php-file-iterator": "^5.1.0",
                "phpunit/php-invoker": "^5.0.1",
                "phpunit/php-text-template": "^4.0.1",
                "phpunit/php-timer": "^7.0.1",
                "sebastian/cli-parser": "^3.0.2",
                "sebastian/code-unit": "^3.0.3",
                "sebastian/comparator": "^6.3.1",
                "sebastian/diff": "^6.0.2",
                "sebastian/environment": "^7.2.1",
                "sebastian/exporter": "^6.3.0",
                "sebastian/global-state": "^7.0.2",
                "sebastian/object-enumerator": "^6.0.1",
                "sebastian/type": "^5.1.2",
                "sebastian/version": "^5.0.2",
                "staabm/side-effects-detector": "^1.0.5"
            },
            "suggest": {
                "ext-soap": "To be able to generate mocks based on WSDL files"
            },
            "bin": [
                "phpunit"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "11.5-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/Framework/Assert/Functions.php"
                ],
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "The PHP Unit Testing framework.",
            "homepage": "https://phpunit.de/",
            "keywords": [
                "phpunit",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
                "security": "https://github.com/sebastianbergmann/phpunit/security/policy",
                "source": "https://github.com/sebastianbergmann/phpunit/tree/11.5.23"
            },
            "funding": [
                {
                    "url": "https://phpunit.de/sponsors.html",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                },
                {
                    "url": "https://liberapay.com/sebastianbergmann",
                    "type": "liberapay"
                },
                {
                    "url": "https://thanks.dev/u/gh/sebastianbergmann",
                    "type": "thanks_dev"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpunit/phpunit",
                    "type": "tidelift"
                }
            ],
            "time": "2025-06-13T05:47:49+00:00"
        },
        {
            "name": "sebastian/cli-parser",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/cli-parser.git",
                "reference": "15c5dd40dc4f38794d383bb95465193f5e0ae180"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/15c5dd40dc4f38794d383bb95465193f5e0ae180",
                "reference": "15c5dd40dc4f38794d383bb95465193f5e0ae180",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for parsing CLI options",
            "homepage": "https://github.com/sebastianbergmann/cli-parser",
            "support": {
                "issues": "https://github.com/sebastianbergmann/cli-parser/issues",
                "security": "https://github.com/sebastianbergmann/cli-parser/security/policy",
                "source": "https://github.com/sebastianbergmann/cli-parser/tree/3.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T04:41:36+00:00"
        },
        {
            "name": "sebastian/code-unit",
            "version": "3.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit.git",
                "reference": "54391c61e4af8078e5b276ab082b6d3c54c9ad64"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit/zipball/54391c61e4af8078e5b276ab082b6d3c54c9ad64",
                "reference": "54391c61e4af8078e5b276ab082b6d3c54c9ad64",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the PHP code units",
            "homepage": "https://github.com/sebastianbergmann/code-unit",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit/issues",
                "security": "https://github.com/sebastianbergmann/code-unit/security/policy",
                "source": "https://github.com/sebastianbergmann/code-unit/tree/3.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2025-03-19T07:56:08+00:00"
        },
        {
            "name": "sebastian/code-unit-reverse-lookup",
            "version": "4.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
                "reference": "183a9b2632194febd219bb9246eee421dad8d45e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/183a9b2632194febd219bb9246eee421dad8d45e",
                "reference": "183a9b2632194febd219bb9246eee421dad8d45e",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Looks up which function or method a line of code belongs to",
            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues",
                "security": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/security/policy",
                "source": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/4.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T04:45:54+00:00"
        },
        {
            "name": "sebastian/comparator",
            "version": "6.3.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/comparator.git",
                "reference": "24b8fbc2c8e201bb1308e7b05148d6ab393b6959"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/24b8fbc2c8e201bb1308e7b05148d6ab393b6959",
                "reference": "24b8fbc2c8e201bb1308e7b05148d6ab393b6959",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-mbstring": "*",
                "php": ">=8.2",
                "sebastian/diff": "^6.0",
                "sebastian/exporter": "^6.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.4"
            },
            "suggest": {
                "ext-bcmath": "For comparing BcMath\\Number objects"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "6.3-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                }
            ],
            "description": "Provides the functionality to compare PHP values for equality",
            "homepage": "https://github.com/sebastianbergmann/comparator",
            "keywords": [
                "comparator",
                "compare",
                "equality"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/comparator/issues",
                "security": "https://github.com/sebastianbergmann/comparator/security/policy",
                "source": "https://github.com/sebastianbergmann/comparator/tree/6.3.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2025-03-07T06:57:01+00:00"
        },
        {
            "name": "sebastian/complexity",
            "version": "4.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/complexity.git",
                "reference": "ee41d384ab1906c68852636b6de493846e13e5a0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/complexity/zipball/ee41d384ab1906c68852636b6de493846e13e5a0",
                "reference": "ee41d384ab1906c68852636b6de493846e13e5a0",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^5.0",
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for calculating the complexity of PHP code units",
            "homepage": "https://github.com/sebastianbergmann/complexity",
            "support": {
                "issues": "https://github.com/sebastianbergmann/complexity/issues",
                "security": "https://github.com/sebastianbergmann/complexity/security/policy",
                "source": "https://github.com/sebastianbergmann/complexity/tree/4.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T04:49:50+00:00"
        },
        {
            "name": "sebastian/diff",
            "version": "6.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/diff.git",
                "reference": "b4ccd857127db5d41a5b676f24b51371d76d8544"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/b4ccd857127db5d41a5b676f24b51371d76d8544",
                "reference": "b4ccd857127db5d41a5b676f24b51371d76d8544",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0",
                "symfony/process": "^4.2 || ^5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "6.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Kore Nordmann",
                    "email": "mail@kore-nordmann.de"
                }
            ],
            "description": "Diff implementation",
            "homepage": "https://github.com/sebastianbergmann/diff",
            "keywords": [
                "diff",
                "udiff",
                "unidiff",
                "unified diff"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/diff/issues",
                "security": "https://github.com/sebastianbergmann/diff/security/policy",
                "source": "https://github.com/sebastianbergmann/diff/tree/6.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T04:53:05+00:00"
        },
        {
            "name": "sebastian/environment",
            "version": "7.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/environment.git",
                "reference": "a5c75038693ad2e8d4b6c15ba2403532647830c4"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/a5c75038693ad2e8d4b6c15ba2403532647830c4",
                "reference": "a5c75038693ad2e8d4b6c15ba2403532647830c4",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.3"
            },
            "suggest": {
                "ext-posix": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "7.2-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides functionality to handle HHVM/PHP environments",
            "homepage": "https://github.com/sebastianbergmann/environment",
            "keywords": [
                "Xdebug",
                "environment",
                "hhvm"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/environment/issues",
                "security": "https://github.com/sebastianbergmann/environment/security/policy",
                "source": "https://github.com/sebastianbergmann/environment/tree/7.2.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                },
                {
                    "url": "https://liberapay.com/sebastianbergmann",
                    "type": "liberapay"
                },
                {
                    "url": "https://thanks.dev/u/gh/sebastianbergmann",
                    "type": "thanks_dev"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/sebastian/environment",
                    "type": "tidelift"
                }
            ],
            "time": "2025-05-21T11:55:47+00:00"
        },
        {
            "name": "sebastian/exporter",
            "version": "6.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/exporter.git",
                "reference": "3473f61172093b2da7de1fb5782e1f24cc036dc3"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/3473f61172093b2da7de1fb5782e1f24cc036dc3",
                "reference": "3473f61172093b2da7de1fb5782e1f24cc036dc3",
                "shasum": ""
            },
            "require": {
                "ext-mbstring": "*",
                "php": ">=8.2",
                "sebastian/recursion-context": "^6.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "6.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Provides the functionality to export PHP variables for visualization",
            "homepage": "https://www.github.com/sebastianbergmann/exporter",
            "keywords": [
                "export",
                "exporter"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/exporter/issues",
                "security": "https://github.com/sebastianbergmann/exporter/security/policy",
                "source": "https://github.com/sebastianbergmann/exporter/tree/6.3.0"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-12-05T09:17:50+00:00"
        },
        {
            "name": "sebastian/global-state",
            "version": "7.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/global-state.git",
                "reference": "3be331570a721f9a4b5917f4209773de17f747d7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/3be331570a721f9a4b5917f4209773de17f747d7",
                "reference": "3be331570a721f9a4b5917f4209773de17f747d7",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "sebastian/object-reflector": "^4.0",
                "sebastian/recursion-context": "^6.0"
            },
            "require-dev": {
                "ext-dom": "*",
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "7.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Snapshotting of global state",
            "homepage": "https://www.github.com/sebastianbergmann/global-state",
            "keywords": [
                "global state"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/global-state/issues",
                "security": "https://github.com/sebastianbergmann/global-state/security/policy",
                "source": "https://github.com/sebastianbergmann/global-state/tree/7.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T04:57:36+00:00"
        },
        {
            "name": "sebastian/lines-of-code",
            "version": "3.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/lines-of-code.git",
                "reference": "d36ad0d782e5756913e42ad87cb2890f4ffe467a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/d36ad0d782e5756913e42ad87cb2890f4ffe467a",
                "reference": "d36ad0d782e5756913e42ad87cb2890f4ffe467a",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^5.0",
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for counting the lines of code in PHP source code",
            "homepage": "https://github.com/sebastianbergmann/lines-of-code",
            "support": {
                "issues": "https://github.com/sebastianbergmann/lines-of-code/issues",
                "security": "https://github.com/sebastianbergmann/lines-of-code/security/policy",
                "source": "https://github.com/sebastianbergmann/lines-of-code/tree/3.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T04:58:38+00:00"
        },
        {
            "name": "sebastian/object-enumerator",
            "version": "6.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
                "reference": "f5b498e631a74204185071eb41f33f38d64608aa"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/f5b498e631a74204185071eb41f33f38d64608aa",
                "reference": "f5b498e631a74204185071eb41f33f38d64608aa",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "sebastian/object-reflector": "^4.0",
                "sebastian/recursion-context": "^6.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "6.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-enumerator/issues",
                "security": "https://github.com/sebastianbergmann/object-enumerator/security/policy",
                "source": "https://github.com/sebastianbergmann/object-enumerator/tree/6.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T05:00:13+00:00"
        },
        {
            "name": "sebastian/object-reflector",
            "version": "4.0.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-reflector.git",
                "reference": "6e1a43b411b2ad34146dee7524cb13a068bb35f9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/6e1a43b411b2ad34146dee7524cb13a068bb35f9",
                "reference": "6e1a43b411b2ad34146dee7524cb13a068bb35f9",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Allows reflection of object attributes, including inherited and non-public ones",
            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-reflector/issues",
                "security": "https://github.com/sebastianbergmann/object-reflector/security/policy",
                "source": "https://github.com/sebastianbergmann/object-reflector/tree/4.0.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T05:01:32+00:00"
        },
        {
            "name": "sebastian/recursion-context",
            "version": "6.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/recursion-context.git",
                "reference": "694d156164372abbd149a4b85ccda2e4670c0e16"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/694d156164372abbd149a4b85ccda2e4670c0e16",
                "reference": "694d156164372abbd149a4b85ccda2e4670c0e16",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "6.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides functionality to recursively process PHP variables",
            "homepage": "https://github.com/sebastianbergmann/recursion-context",
            "support": {
                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
                "security": "https://github.com/sebastianbergmann/recursion-context/security/policy",
                "source": "https://github.com/sebastianbergmann/recursion-context/tree/6.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-07-03T05:10:34+00:00"
        },
        {
            "name": "sebastian/type",
            "version": "5.1.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/type.git",
                "reference": "a8a7e30534b0eb0c77cd9d07e82de1a114389f5e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/type/zipball/a8a7e30534b0eb0c77cd9d07e82de1a114389f5e",
                "reference": "a8a7e30534b0eb0c77cd9d07e82de1a114389f5e",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "require-dev": {
                "phpunit/phpunit": "^11.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "5.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the types of the PHP type system",
            "homepage": "https://github.com/sebastianbergmann/type",
            "support": {
                "issues": "https://github.com/sebastianbergmann/type/issues",
                "security": "https://github.com/sebastianbergmann/type/security/policy",
                "source": "https://github.com/sebastianbergmann/type/tree/5.1.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2025-03-18T13:35:50+00:00"
        },
        {
            "name": "sebastian/version",
            "version": "5.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/version.git",
                "reference": "c687e3387b99f5b03b6caa64c74b63e2936ff874"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/c687e3387b99f5b03b6caa64c74b63e2936ff874",
                "reference": "c687e3387b99f5b03b6caa64c74b63e2936ff874",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
            "homepage": "https://github.com/sebastianbergmann/version",
            "support": {
                "issues": "https://github.com/sebastianbergmann/version/issues",
                "security": "https://github.com/sebastianbergmann/version/security/policy",
                "source": "https://github.com/sebastianbergmann/version/tree/5.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-10-09T05:16:32+00:00"
        },
        {
            "name": "staabm/side-effects-detector",
            "version": "1.0.5",
            "source": {
                "type": "git",
                "url": "https://github.com/staabm/side-effects-detector.git",
                "reference": "d8334211a140ce329c13726d4a715adbddd0a163"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/staabm/side-effects-detector/zipball/d8334211a140ce329c13726d4a715adbddd0a163",
                "reference": "d8334211a140ce329c13726d4a715adbddd0a163",
                "shasum": ""
            },
            "require": {
                "ext-tokenizer": "*",
                "php": "^7.4 || ^8.0"
            },
            "require-dev": {
                "phpstan/extension-installer": "^1.4.3",
                "phpstan/phpstan": "^1.12.6",
                "phpunit/phpunit": "^9.6.21",
                "symfony/var-dumper": "^5.4.43",
                "tomasvotruba/type-coverage": "1.0.0",
                "tomasvotruba/unused-public": "1.0.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "lib/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "A static analysis tool to detect side effects in PHP code",
            "keywords": [
                "static analysis"
            ],
            "support": {
                "issues": "https://github.com/staabm/side-effects-detector/issues",
                "source": "https://github.com/staabm/side-effects-detector/tree/1.0.5"
            },
            "funding": [
                {
                    "url": "https://github.com/staabm",
                    "type": "github"
                }
            ],
            "time": "2024-10-20T05:08:20+00:00"
        },
        {
            "name": "symfony/yaml",
            "version": "v7.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/yaml.git",
                "reference": "cea40a48279d58dc3efee8112634cb90141156c2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/yaml/zipball/cea40a48279d58dc3efee8112634cb90141156c2",
                "reference": "cea40a48279d58dc3efee8112634cb90141156c2",
                "shasum": ""
            },
            "require": {
                "php": ">=8.2",
                "symfony/deprecation-contracts": "^2.5|^3.0",
                "symfony/polyfill-ctype": "^1.8"
            },
            "conflict": {
                "symfony/console": "<6.4"
            },
            "require-dev": {
                "symfony/console": "^6.4|^7.0"
            },
            "bin": [
                "Resources/bin/yaml-lint"
            ],
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Symfony\\Component\\Yaml\\": ""
                },
                "exclude-from-classmap": [
                    "/Tests/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Fabien Potencier",
                    "email": "fabien@symfony.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Loads and dumps YAML files",
            "homepage": "https://symfony.com",
            "support": {
                "source": "https://github.com/symfony/yaml/tree/v7.3.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2025-04-04T10:10:33+00:00"
        },
        {
            "name": "theseer/tokenizer",
            "version": "1.2.3",
            "source": {
                "type": "git",
                "url": "https://github.com/theseer/tokenizer.git",
                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                }
            ],
            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
            "support": {
                "issues": "https://github.com/theseer/tokenizer/issues",
                "source": "https://github.com/theseer/tokenizer/tree/1.2.3"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2024-03-03T12:36:25+00:00"
        }
    ],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": {},
    "prefer-stable": true,
    "prefer-lowest": false,
    "platform": {
        "php": "^8.2"
    },
    "platform-dev": {},
    "plugin-api-version": "2.6.0"
}



================================================
FILE: package.json
================================================
{
    "$schema": "https://json.schemastore.org/package.json",
    "private": true,
    "type": "module",
    "scripts": {
        "build": "vite build",
        "dev": "vite"
    },
    "devDependencies": {
        "@tailwindcss/forms": "^0.5.2",
        "@tailwindcss/vite": "^4.0.0",
        "alpinejs": "^3.4.2",
        "autoprefixer": "^10.4.21",
        "axios": "^1.8.2",
        "concurrently": "^9.0.1",
        "laravel-vite-plugin": "^1.2.0",
        "postcss": "^8.5.6",
        "tailwindcss": "^3.4.17",
        "vite": "^6.2.4"
    },
    "dependencies": {
        "@popperjs/core": "^2.11.8",
        "bootstrap": "^5.3.7",
        "bootstrap-icons": "^1.13.1"
    }
}



================================================
FILE: phpunit.xml
================================================
<?xml version="1.0" encoding="UTF-8"?>
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
         bootstrap="vendor/autoload.php"
         colors="true"
>
    <testsuites>
        <testsuite name="Unit">
            <directory>tests/Unit</directory>
        </testsuite>
        <testsuite name="Feature">
            <directory>tests/Feature</directory>
        </testsuite>
    </testsuites>
    <source>
        <include>
            <directory>app</directory>
        </include>
    </source>
    <php>
        <env name="APP_ENV" value="testing"/>
        <env name="APP_MAINTENANCE_DRIVER" value="file"/>
        <env name="BCRYPT_ROUNDS" value="4"/>
        <env name="CACHE_STORE" value="array"/>
        <env name="DB_CONNECTION" value="sqlite"/>
        <env name="DB_DATABASE" value=":memory:"/>
        <env name="MAIL_MAILER" value="array"/>
        <env name="PULSE_ENABLED" value="false"/>
        <env name="QUEUE_CONNECTION" value="sync"/>
        <env name="SESSION_DRIVER" value="array"/>
        <env name="TELESCOPE_ENABLED" value="false"/>
    </php>
</phpunit>



================================================
FILE: postcss.config.js
================================================
export default {
    plugins: {
        tailwindcss: {},
        autoprefixer: {},
    },
};



================================================
FILE: tailwind.config.js
================================================
import defaultTheme from 'tailwindcss/defaultTheme';
import forms from '@tailwindcss/forms';

/** @type {import('tailwindcss').Config} */
export default {
    content: [
        './vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php',
        './storage/framework/views/*.php',
        './resources/views/**/*.blade.php',
    ],

    theme: {
        extend: {
            fontFamily: {
                sans: ['Figtree', ...defaultTheme.fontFamily.sans],
            },
        },
    },

    plugins: [forms],
};



================================================
FILE: vite.config.js
================================================
import { defineConfig } from 'vite';
import laravel from 'laravel-vite-plugin';

export default defineConfig({
    plugins: [
        laravel({
            input: ['resources/css/app.css', 'resources/js/app.js'],
            refresh: true,
        }),
    ],
});



================================================
FILE: .editorconfig
================================================
root = true

[*]
charset = utf-8
end_of_line = lf
indent_size = 4
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

[*.md]
trim_trailing_whitespace = false

[*.{yml,yaml}]
indent_size = 2

[docker-compose.yml]
indent_size = 4



================================================
FILE: .env.example
================================================
APP_NAME=Laravel
APP_ENV=local
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
# APP_MAINTENANCE_STORE=database

PHP_CLI_SERVER_WORKERS=4

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=sqlite
# DB_HOST=127.0.0.1
# DB_PORT=3306
# DB_DATABASE=laravel
# DB_USERNAME=root
# DB_PASSWORD=

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
# CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_SCHEME=null
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"



================================================
FILE: app/Http/Controllers/BookController.php
================================================
<?php

namespace App\Http\Controllers;

use App\Models\Book;
use Illuminate\Http\Request;
use App\Http\Requests\StoreBookRequest;
use App\Http\Requests\UpdateBookRequest;

class BookController extends Controller
{
    public function index(Request $request)
    {
        $query = Book::query();

        if ($request->has('search') && $request->search) {
            $query->search($request->search);
        }

        if ($request->has('genre') && $request->genre) {
            $query->where('genre', $request->genre);
        }

        if ($request->has('availability') && $request->availability !== '') {
            if ($request->availability == '1') {
                $query->available();
            } else {
                $query->where('available_copies', 0);
            }
        }

        $books = $query->paginate(15);
        $genres = Book::distinct()->pluck('genre')->filter();

        return view('books.index', compact('books', 'genres'));
    }

    public function create()
    {
        return view('books.create');
    }

    public function store(StoreBookRequest $request)
    {
        $book = Book::create($request->validated());

        return redirect()->route('books.index')
            ->with('success', 'Book created successfully.');
    }

    public function show(Book $book)
    {
        $book->load(['borrowings.member']);
        return view('books.show', compact('book'));
    }

    public function edit(Book $book)
    {
        return view('books.edit', compact('book'));
    }

    public function update(UpdateBookRequest $request, Book $book)
    {
        $book->update($request->validated());

        return redirect()->route('books.index')
            ->with('success', 'Book updated successfully.');
    }

    public function destroy(Book $book)
    {
        if ($book->activeBorrowings()->count() > 0) {
            return redirect()->route('books.index')
                ->with('error', 'Cannot delete book with active borrowings.');
        }

        $book->delete();

        return redirect()->route('books.index')
            ->with('success', 'Book deleted successfully.');
    }
}



================================================
FILE: app/Http/Controllers/BorrowingController.php
================================================
<?php

namespace App\Http\Controllers;

use App\Models\Borrowing;
use App\Models\Book;
use App\Models\Member;
use App\Http\Requests\StoreBorrowingRequest;
use App\Http\Requests\UpdateBorrowingRequest;
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;
use Carbon\Carbon;
use Barryvdh\DomPDF\Facade\Pdf;

class BorrowingController extends Controller
{
    public function index(Request $request)
    {
        $query = Borrowing::with(['member', 'book']);

        // Search functionality
        if ($request->filled('search')) {
            $search = $request->get('search');
            $query->where(function ($q) use ($search) {
                $q->whereHas('member', function($mq) use ($search) {
                    $mq->where('name', 'like', "%{$search}%")
                        ->orWhere('email', 'like', "%{$search}%");
                })
                    ->orWhereHas('book', function($bq) use ($search) {
                        $bq->where('title', 'like', "%{$search}%")
                            ->orWhere('author', 'like', "%{$search}%");
                    });
            });
        }

        // Status filter
        if ($request->filled('status')) {
            $status = $request->get('status');
            switch ($status) {
                case 'active':
                    $query->whereNull('returned_at');
                    break;
                case 'returned':
                    $query->whereNotNull('returned_at');
                    break;
                case 'overdue':
                    $query->whereNull('returned_at')
                        ->where('due_date', '<', now());
                    break;
            }
        }

        // Date range filter
        if ($request->filled('date_from')) {
            $query->whereDate('borrowed_at', '>=', $request->get('date_from'));
        }

        if ($request->filled('date_to')) {
            $query->whereDate('borrowed_at', '<=', $request->get('date_to'));
        }

        $borrowings = $query->orderBy('borrowed_at', 'desc')->paginate(15);

        // Calculate stats
        $stats = [
            'active_borrowings' => Borrowing::active()->count(),
            'overdue_borrowings' => Borrowing::overdue()->count(),
            'returned_today' => Borrowing::whereDate('returned_at', today())->count(),
            'total_fines' => Borrowing::whereNotNull('fine_amount')
                ->where('fine_paid', false)
                ->sum('fine_amount'),
        ];

        return view('borrowings.index', compact('borrowings', 'stats'));
    }

    public function create(Request $request)
    {
        $members = Member::active()->orderBy('name')->get();
        $books = Book::where('available_copies', '>', 0)->orderBy('title')->get();

        return view('borrowings.create', compact('members', 'books'));
    }

    public function store(StoreBorrowingRequest $request)
    {
        $borrowing = Borrowing::create($request->validated());

        // Update book availability
        $book = $borrowing->book;
        $book->decrement('available_copies');

        return redirect()
            ->route('borrowings.index')
            ->with('success', 'ការខ្ចីត្រូវបានបង្កើតដោយជោគជ័យ!');
    }

    public function show(Borrowing $borrowing)
    {
        $borrowing->load(['member', 'book']);
        return view('borrowings.show', compact('borrowing'));
    }

    public function edit(Borrowing $borrowing)
    {
        $members = Member::active()->orderBy('name')->get();
        $books = Book::orderBy('title')->get();

        return view('borrowings.edit', compact('borrowing', 'members', 'books'));
    }

    public function update(UpdateBorrowingRequest $request, Borrowing $borrowing)
    {
        $originalBookId = $borrowing->book_id;

        $borrowing->update($request->validated());

        // If book changed, update availability counts
        if ($originalBookId != $borrowing->book_id) {
            // Increment old book availability
            Book::find($originalBookId)->increment('available_copies');
            // Decrement new book availability
            $borrowing->book->decrement('available_copies');
        }

        return redirect()
            ->route('borrowings.show', $borrowing)
            ->with('success', 'ព័ត៌មានការខ្ចីត្រូវបានកែប្រែដោយជោគជ័យ!');
    }

    public function destroy(Borrowing $borrowing)
    {
        // If borrowing is not returned, increment book availability
        if (!$borrowing->returned_at) {
            $borrowing->book->increment('available_copies');
        }

        $borrowing->delete();

        return response()->json(['success' => true, 'message' => 'ការខ្ចីត្រូវបានលុបដោយជោគជ័យ!']);
    }

    public function returnBook(Borrowing $borrowing)
    {
        if ($borrowing->returned_at) {
            return response()->json(['success' => false, 'message' => 'សៀវភៅនេះត្រូវបានត្រឡប់រួចហើយ!']);
        }

        $borrowing->update([
            'returned_at' => now(),
        ]);

        // Increment book availability
        $borrowing->book->increment('available_copies');

        return response()->json(['success' => true, 'message' => 'សៀវភៅត្រូវបានត្រឡប់ដោយជោគជ័យ!']);
    }

    public function addFine(Request $request, Borrowing $borrowing)
    {
        $request->validate([
            'fine_amount' => 'required|numeric|min:0',
            'fine_paid' => 'boolean'
        ]);

        $borrowing->update([
            'fine_amount' => $request->fine_amount,
            'fine_paid' => $request->fine_paid ?? false,
        ]);

        return response()->json(['success' => true, 'message' => 'ការពិន័យត្រូវបានរក្សាទុកដោយជោគជ័យ!']);
    }

    public function extendDueDate(Request $request, Borrowing $borrowing)
    {
        $request->validate([
            'days' => 'required|integer|min:1|max:30'
        ]);

        $newDueDate = $borrowing->due_date->addDays($request->days);

        $borrowing->update([
            'due_date' => $newDueDate,
        ]);

        return response()->json(['success' => true, 'message' => 'កាលបរិច្ឆេទត្រូវបានបន្ថែមដោយជោគជ័យ!']);
    }

    public function apiShow(Borrowing $borrowing): JsonResponse
    {
        $borrowing->load(['member', 'book']);

        return response()->json($borrowing);
    }

    public function apiStats(): JsonResponse
    {
        $stats = [
            'active_borrowings' => Borrowing::active()->count(),
            'overdue_borrowings' => Borrowing::overdue()->count(),
            'returned_today' => Borrowing::whereDate('returned_at', today())->count(),
        ];

        return response()->json($stats);
    }

    public function exportPDF(Request $request)
    {
        $query = Borrowing::with(['member', 'book']);

        // Apply same filters as index
        if ($request->filled('search')) {
            $search = $request->get('search');
            $query->where(function ($q) use ($search) {
                $q->whereHas('member', function($mq) use ($search) {
                    $mq->where('name', 'like', "%{$search}%");
                })
                    ->orWhereHas('book', function($bq) use ($search) {
                        $bq->where('title', 'like', "%{$search}%");
                    });
            });
        }

        $borrowings = $query->orderBy('borrowed_at', 'desc')->get();

        $pdf = Pdf::loadView('borrowings.export-pdf', compact('borrowings'));

        return $pdf->download('borrowings-' . now()->format('Y-m-d') . '.pdf');
    }
}



================================================
FILE: app/Http/Controllers/Controller.php
================================================
<?php

namespace App\Http\Controllers;

abstract class Controller
{
    //
}



================================================
FILE: app/Http/Controllers/DashboardController.php
================================================
<?php

namespace App\Http\Controllers;

use App\Models\Book;
use App\Models\Member;
use App\Models\Borrowing;
use Illuminate\Http\Request;

class DashboardController extends Controller
{
    public function index()
    {
        $stats = [
            'total_books' => Book::count(),
            'total_members' => Member::where('membership_status', 'active')->count(),
            'total_borrowed' => Borrowing::active()->count(),
            'overdue_books' => Borrowing::overdue()->count(),
            'available_books' => Book::sum('available_copies'),
            'total_fines' => Borrowing::whereNotNull('fine_amount')
                ->where('fine_paid', false)
                ->sum('fine_amount'),
            'books_returned_today' => Borrowing::whereDate('returned_at', today())->count(),
            'new_members_this_month' => Member::whereMonth('membership_date', now()->month)
                ->whereYear('membership_date', now()->year)
                ->count(),
        ];

        $recent_borrowings = Borrowing::with(['member', 'book'])
            ->latest('borrowed_at')
            ->take(10)
            ->get();

        $overdue_borrowings = Borrowing::overdue()
            ->with(['member', 'book'])
            ->orderBy('due_date', 'asc')
            ->take(5)
            ->get();

        // Calculate additional metrics
        $stats['avg_books_per_member'] = $stats['total_members'] > 0
            ? round($stats['total_borrowed'] / $stats['total_members'], 1)
            : 0;

        $stats['books_due_soon'] = Borrowing::active()
            ->whereBetween('due_date', [now(), now()->addDays(3)])
            ->count();

        return view('dashboard', compact('stats', 'recent_borrowings', 'overdue_borrowings'));
    }
}



================================================
FILE: app/Http/Controllers/MemberController.php
================================================
<?php

namespace App\Http\Controllers;

use App\Models\Member;
use App\Http\Requests\StoreMemberRequest;
use App\Http\Requests\UpdateMemberRequest;
use Illuminate\Http\Request;
use Barryvdh\DomPDF\Facade\Pdf;

class MemberController extends Controller
{
    public function index(Request $request)
    {
        $query = Member::query();

        // Search functionality
        if ($request->filled('search')) {
            $search = $request->get('search');
            $query->where(function ($q) use ($search) {
                $q->where('name', 'like', "%{$search}%")
                    ->orWhere('email', 'like', "%{$search}%")
                    ->orWhere('phone', 'like', "%{$search}%");
            });
        }

        // Status filter
        if ($request->filled('status')) {
            $query->where('membership_status', $request->get('status'));
        }

        // Period filter
        if ($request->filled('period')) {
            $period = $request->get('period');
            switch ($period) {
                case 'today':
                    $query->whereDate('membership_date', today());
                    break;
                case 'week':
                    $query->whereBetween('membership_date', [now()->startOfWeek(), now()->endOfWeek()]);
                    break;
                case 'month':
                    $query->whereMonth('membership_date', now()->month)
                        ->whereYear('membership_date', now()->year);
                    break;
                case 'year':
                    $query->whereYear('membership_date', now()->year);
                    break;
            }
        }

        $members = $query->with(['borrowings' => function($q) {
            $q->latest();
        }])->orderBy('name')->paginate(15);

        return view('members.index', compact('members'));
    }

    public function create()
    {
        return view('members.create');
    }

    public function store(StoreMemberRequest $request)
    {
        Member::create($request->validated());

        return redirect()
            ->route('members.index')
            ->with('success', 'សមាជិកត្រូវបានបន្ថែមដោយជោគជ័យ!');
    }

    public function show(Member $member)
    {
        $member->load(['borrowings.book']);
        return view('members.show', compact('member'));
    }

    public function edit(Member $member)
    {
        return view('members.edit', compact('member'));
    }

    public function update(UpdateMemberRequest $request, Member $member)
    {
        $member->update($request->validated());

        return redirect()
            ->route('members.show', $member)
            ->with('success', 'ព័ត៌មានសមាជិកត្រូវបានកែប្រែដោយជោគជ័យ!');
    }

    public function destroy(Member $member)
    {
        // Check if member has active borrowings
        if ($member->borrowings()->active()->exists()) {
            return redirect()
                ->route('members.show', $member)
                ->with('error', 'មិនអាចលុបសមាជិកដែលមានការខ្ចីសកម្មបានទេ!');
        }

        $member->delete();

        return redirect()
            ->route('members.index')
            ->with('success', 'សមាជិកត្រូវបានលុបដោយជោគជ័យ!');
    }

    public function exportHistory(Member $member)
    {
        $member->load(['borrowings.book']);

        $pdf = Pdf::loadView('members.history-pdf', compact('member'));

        return $pdf->download("member-history-{$member->id}-" . now()->format('Y-m-d') . ".pdf");
    }
}



================================================
FILE: app/Http/Controllers/ProfileController.php
================================================
<?php

namespace App\Http\Controllers;

use App\Http\Requests\ProfileUpdateRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Redirect;
use Illuminate\View\View;

class ProfileController extends Controller
{
    /**
     * Display the user's profile form.
     */
    public function edit(Request $request): View
    {
        return view('profile.edit', [
            'user' => $request->user(),
        ]);
    }

    /**
     * Update the user's profile information.
     */
    public function update(ProfileUpdateRequest $request): RedirectResponse
    {
        $request->user()->fill($request->validated());

        if ($request->user()->isDirty('email')) {
            $request->user()->email_verified_at = null;
        }

        $request->user()->save();

        return Redirect::route('profile.edit')->with('status', 'profile-updated');
    }

    /**
     * Delete the user's account.
     */
    public function destroy(Request $request): RedirectResponse
    {
        $request->validateWithBag('userDeletion', [
            'password' => ['required', 'current_password'],
        ]);

        $user = $request->user();

        Auth::logout();

        $user->delete();

        $request->session()->invalidate();
        $request->session()->regenerateToken();

        return Redirect::to('/');
    }
}



================================================
FILE: app/Http/Controllers/Auth/AuthenticatedSessionController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Http\Requests\Auth\LoginRequest;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\View\View;

class AuthenticatedSessionController extends Controller
{
    /**
     * Display the login view.
     */
    public function create(): View
    {
        return view('auth.login');
    }

    /**
     * Handle an incoming authentication request.
     */
    public function store(LoginRequest $request): RedirectResponse
    {
        $request->authenticate();

        $request->session()->regenerate();

        return redirect()->intended(route('dashboard', absolute: false));
    }

    /**
     * Destroy an authenticated session.
     */
    public function destroy(Request $request): RedirectResponse
    {
        Auth::guard('web')->logout();

        $request->session()->invalidate();

        $request->session()->regenerateToken();

        return redirect('/');
    }
}



================================================
FILE: app/Http/Controllers/Auth/ConfirmablePasswordController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Validation\ValidationException;
use Illuminate\View\View;

class ConfirmablePasswordController extends Controller
{
    /**
     * Show the confirm password view.
     */
    public function show(): View
    {
        return view('auth.confirm-password');
    }

    /**
     * Confirm the user's password.
     */
    public function store(Request $request): RedirectResponse
    {
        if (! Auth::guard('web')->validate([
            'email' => $request->user()->email,
            'password' => $request->password,
        ])) {
            throw ValidationException::withMessages([
                'password' => __('auth.password'),
            ]);
        }

        $request->session()->put('auth.password_confirmed_at', time());

        return redirect()->intended(route('dashboard', absolute: false));
    }
}



================================================
FILE: app/Http/Controllers/Auth/EmailVerificationNotificationController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;

class EmailVerificationNotificationController extends Controller
{
    /**
     * Send a new email verification notification.
     */
    public function store(Request $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false));
        }

        $request->user()->sendEmailVerificationNotification();

        return back()->with('status', 'verification-link-sent');
    }
}



================================================
FILE: app/Http/Controllers/Auth/EmailVerificationPromptController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\View\View;

class EmailVerificationPromptController extends Controller
{
    /**
     * Display the email verification prompt.
     */
    public function __invoke(Request $request): RedirectResponse|View
    {
        return $request->user()->hasVerifiedEmail()
                    ? redirect()->intended(route('dashboard', absolute: false))
                    : view('auth.verify-email');
    }
}



================================================
FILE: app/Http/Controllers/Auth/NewPasswordController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\PasswordReset;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Password;
use Illuminate\Support\Str;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class NewPasswordController extends Controller
{
    /**
     * Display the password reset view.
     */
    public function create(Request $request): View
    {
        return view('auth.reset-password', ['request' => $request]);
    }

    /**
     * Handle an incoming new password request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'token' => ['required'],
            'email' => ['required', 'email'],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        // Here we will attempt to reset the user's password. If it is successful we
        // will update the password on an actual user model and persist it to the
        // database. Otherwise we will parse the error and return the response.
        $status = Password::reset(
            $request->only('email', 'password', 'password_confirmation', 'token'),
            function (User $user) use ($request) {
                $user->forceFill([
                    'password' => Hash::make($request->password),
                    'remember_token' => Str::random(60),
                ])->save();

                event(new PasswordReset($user));
            }
        );

        // If the password was successfully reset, we will redirect the user back to
        // the application's home authenticated view. If there is an error we can
        // redirect them back to where they came from with their error message.
        return $status == Password::PASSWORD_RESET
                    ? redirect()->route('login')->with('status', __($status))
                    : back()->withInput($request->only('email'))
                        ->withErrors(['email' => __($status)]);
    }
}



================================================
FILE: app/Http/Controllers/Auth/PasswordController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules\Password;

class PasswordController extends Controller
{
    /**
     * Update the user's password.
     */
    public function update(Request $request): RedirectResponse
    {
        $validated = $request->validateWithBag('updatePassword', [
            'current_password' => ['required', 'current_password'],
            'password' => ['required', Password::defaults(), 'confirmed'],
        ]);

        $request->user()->update([
            'password' => Hash::make($validated['password']),
        ]);

        return back()->with('status', 'password-updated');
    }
}



================================================
FILE: app/Http/Controllers/Auth/PasswordResetLinkController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Password;
use Illuminate\View\View;

class PasswordResetLinkController extends Controller
{
    /**
     * Display the password reset link request view.
     */
    public function create(): View
    {
        return view('auth.forgot-password');
    }

    /**
     * Handle an incoming password reset link request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'email' => ['required', 'email'],
        ]);

        // We will send the password reset link to this user. Once we have attempted
        // to send the link, we will examine the response then see the message we
        // need to show to the user. Finally, we'll send out a proper response.
        $status = Password::sendResetLink(
            $request->only('email')
        );

        return $status == Password::RESET_LINK_SENT
                    ? back()->with('status', __($status))
                    : back()->withInput($request->only('email'))
                        ->withErrors(['email' => __($status)]);
    }
}



================================================
FILE: app/Http/Controllers/Auth/RegisteredUserController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Models\User;
use Illuminate\Auth\Events\Registered;
use Illuminate\Http\RedirectResponse;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Hash;
use Illuminate\Validation\Rules;
use Illuminate\View\View;

class RegisteredUserController extends Controller
{
    /**
     * Display the registration view.
     */
    public function create(): View
    {
        return view('auth.register');
    }

    /**
     * Handle an incoming registration request.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function store(Request $request): RedirectResponse
    {
        $request->validate([
            'name' => ['required', 'string', 'max:255'],
            'email' => ['required', 'string', 'lowercase', 'email', 'max:255', 'unique:'.User::class],
            'password' => ['required', 'confirmed', Rules\Password::defaults()],
        ]);

        $user = User::create([
            'name' => $request->name,
            'email' => $request->email,
            'password' => Hash::make($request->password),
        ]);

        event(new Registered($user));

        Auth::login($user);

        return redirect(route('dashboard', absolute: false));
    }
}



================================================
FILE: app/Http/Controllers/Auth/VerifyEmailController.php
================================================
<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Auth\EmailVerificationRequest;
use Illuminate\Http\RedirectResponse;

class VerifyEmailController extends Controller
{
    /**
     * Mark the authenticated user's email address as verified.
     */
    public function __invoke(EmailVerificationRequest $request): RedirectResponse
    {
        if ($request->user()->hasVerifiedEmail()) {
            return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
        }

        if ($request->user()->markEmailAsVerified()) {
            event(new Verified($request->user()));
        }

        return redirect()->intended(route('dashboard', absolute: false).'?verified=1');
    }
}



================================================
FILE: app/Http/Requests/ProfileUpdateRequest.php
================================================
<?php

namespace App\Http\Requests;

use App\Models\User;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class ProfileUpdateRequest extends FormRequest
{
    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'name' => ['required', 'string', 'max:255'],
            'email' => [
                'required',
                'string',
                'lowercase',
                'email',
                'max:255',
                Rule::unique(User::class)->ignore($this->user()->id),
            ],
        ];
    }
}



================================================
FILE: app/Http/Requests/StoreBookRequest.php
================================================
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoreBookRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            'title' => 'required|string|max:255',
            'author' => 'required|string|max:255',
            'genre' => 'required|string|max:100',
            'isbn' => 'required|string|unique:books,isbn|max:20',
            'description' => 'nullable|string|max:1000',
            'published_year' => 'nullable|integer|min:1000|max:' . date('Y'),
            'total_copies' => 'required|integer|min:1|max:999',
            'available_copies' => 'required|integer|min:0|lte:total_copies',
        ];
    }

    public function messages(): array
    {
        return [
            'title.required' => 'ចំណងជើងសៀវភៅត្រូវតែបំពេញ',
            'author.required' => 'ឈ្មោះអ្នកនិពន្ធត្រូវតែបំពេញ',
            'genre.required' => 'ប្រភេទសៀវភៅត្រូវតែជ្រើសរើស',
            'isbn.required' => 'លេខ ISBN ត្រូវតែបំពេញ',
            'isbn.unique' => 'លេខ ISBN នេះមានរួចហើយ',
            'total_copies.required' => 'ចំនួនសៀវភៅសរុបត្រូវតែបំពេញ',
            'available_copies.required' => 'ចំនួនដែលអាចខ្ចីបានត្រូវតែបំពេញ',
            'available_copies.lte' => 'ចំនួនដែលអាចខ្ចីបានមិនអាចច្រើនជាងចំនួនសរុបទេ',
            'published_year.max' => 'ឆ្នាំបោះពុម្ពមិនអាចច្រើនជាងឆ្នាំបច្ចុប្បន្នទេ',
        ];
    }
}



================================================
FILE: app/Http/Requests/StoreBorrowingRequest.php
================================================
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoreBorrowingRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            'member_id' => 'required|exists:members,id',
            'book_id' => 'required|exists:books,id',
            'borrowed_at' => 'required|date',
            'due_date' => 'required|date|after:borrowed_at',
        ];
    }

    public function messages(): array
    {
        return [
            'member_id.required' => 'សមាជិកត្រូវតែជ្រើសរើស',
            'member_id.exists' => 'សមាជិកមិនត្រឹមត្រូវ',
            'book_id.required' => 'សៀវភៅត្រូវតែជ្រើសរើស',
            'book_id.exists' => 'សៀវភៅមិនត្រឹមត្រូវ',
            'borrowed_at.required' => 'ថ្ងៃខ្ចីត្រូវតែបំពេញ',
            'borrowed_at.date' => 'ថ្ងៃខ្ចីត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'due_date.required' => 'ថ្ងៃត្រូវត្រឡប់ត្រូវតែបំពេញ',
            'due_date.date' => 'ថ្ងៃត្រូវត្រឡប់ត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'due_date.after' => 'ថ្ងៃត្រូវត្រឡប់ត្រូវតែក្រោយថ្ងៃខ្ចី',
        ];
    }
}



================================================
FILE: app/Http/Requests/StoreMemberRequest.php
================================================
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class StoreMemberRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            'name' => 'required|string|max:255',
            'email' => 'required|email|unique:members,email|max:255',
            'phone' => 'nullable|string|max:20',
            'address' => 'nullable|string|max:500',
            'date_of_birth' => 'nullable|date|before:today',
            'membership_date' => 'required|date|before_or_equal:today',
            'membership_status' => 'required|in:active,inactive,suspended',
        ];
    }

    public function messages(): array
    {
        return [
            'name.required' => 'ឈ្មោះពេញត្រូវតែបំពេញ',
            'name.string' => 'ឈ្មោះត្រូវតែជាអក្សរ',
            'name.max' => 'ឈ្មោះមិនអាចលើសពី 255 តួអក្សរទេ',
            'email.required' => 'អីមែលត្រូវតែបំពេញ',
            'email.email' => 'អីមែលត្រូវតែមានទម្រង់ត្រឹមត្រូវ',
            'email.unique' => 'អីមែលនេះមានរួចហើយ',
            'email.max' => 'អីមែលមិនអាចលើសពី 255 តួអក្សរទេ',
            'phone.max' => 'លេខទូរសព្ទមិនអាចលើសពី 20 តួអក្សរទេ',
            'address.max' => 'អាសយដ្ឋានមិនអាចលើសពី 500 តួអក្សរទេ',
            'date_of_birth.date' => 'ថ្ងៃកំណើតត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'date_of_birth.before' => 'ថ្ងៃកំណើតត្រូវតែមុនថ្ងៃបច្ចុប្បន្ន',
            'membership_date.required' => 'ថ្ងៃចុះឈ្មោះត្រូវតែបំពេញ',
            'membership_date.date' => 'ថ្ងៃចុះឈ្មោះត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'membership_date.before_or_equal' => 'ថ្ងៃចុះឈ្មោះមិនអាចលើសពីថ្ងៃបច្ចុប្បន្នទេ',
            'membership_status.required' => 'ស្ថានភាពសមាជិកត្រូវតែជ្រើសរើស',
            'membership_status.in' => 'ស្ថានភាពសមាជិកមិនត្រឹមត្រូវ',
        ];
    }
}



================================================
FILE: app/Http/Requests/UpdateBookRequest.php
================================================
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class UpdateBookRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            'title' => 'required|string|max:255',
            'author' => 'required|string|max:255',
            'genre' => 'required|string|max:100',
            'isbn' => [
                'required',
                'string',
                'max:20',
                Rule::unique('books', 'isbn')->ignore($this->book->id)
            ],
            'description' => 'nullable|string|max:1000',
            'published_year' => 'nullable|integer|min:1000|max:' . date('Y'),
            'total_copies' => 'required|integer|min:1|max:999',
            'available_copies' => 'required|integer|min:0|lte:total_copies',
        ];
    }

    public function messages(): array
    {
        return [
            'title.required' => 'ចំណងជើងសៀវភៅត្រូវតែបំពេញ',
            'author.required' => 'ឈ្មោះអ្នកនិពន្ធត្រូវតែបំពេញ',
            'genre.required' => 'ប្រភេទសៀវភៅត្រូវតែជ្រើសរើស',
            'isbn.required' => 'លេខ ISBN ត្រូវតែបំពេញ',
            'isbn.unique' => 'លេខ ISBN នេះមានរួចហើយ',
            'total_copies.required' => 'ចំនួនសៀវភៅសរុបត្រូវតែបំពេញ',
            'available_copies.required' => 'ចំនួនដែលអាចខ្ចីបានត្រូវតែបំពេញ',
            'available_copies.lte' => 'ចំនួនដែលអាចខ្ចីបានមិនអាចច្រើនជាងចំនួនសរុបទេ',
            'published_year.max' => 'ឆ្នាំបោះពុម្ពមិនអាចច្រើនជាងឆ្នាំបច្ចុប្បន្នទេ',
        ];
    }
}



================================================
FILE: app/Http/Requests/UpdateBorrowingRequest.php
================================================
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class UpdateBorrowingRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            'member_id' => 'required|exists:members,id',
            'book_id' => 'required|exists:books,id',
            'borrowed_at' => 'required|date',
            'due_date' => 'required|date|after:borrowed_at',
            'returned_at' => 'nullable|date|after_or_equal:borrowed_at',
            'fine_amount' => 'nullable|numeric|min:0',
            'fine_paid' => 'boolean',
        ];
    }

    public function messages(): array
    {
        return [
            'member_id.required' => 'សមាជិកត្រូវតែជ្រើសរើស',
            'member_id.exists' => 'សមាជិកមិនត្រឹមត្រូវ',
            'book_id.required' => 'សៀវភៅត្រូវតែជ្រើសរើស',
            'book_id.exists' => 'សៀវភៅមិនត្រឹមត្រូវ',
            'borrowed_at.required' => 'ថ្ងៃខ្ចីត្រូវតែបំពេញ',
            'borrowed_at.date' => 'ថ្ងៃខ្ចីត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'due_date.required' => 'ថ្ងៃត្រូវត្រឡប់ត្រូវតែបំពេញ',
            'due_date.date' => 'ថ្ងៃត្រូវត្រឡប់ត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'due_date.after' => 'ថ្ងៃត្រូវត្រឡប់ត្រូវតែក្រោយថ្ងៃខ្ចី',
            'returned_at.date' => 'ថ្ងៃត្រឡប់ត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'returned_at.after_or_equal' => 'ថ្ងៃត្រឡប់ត្រូវតែក្រោយ ឬ ស្មើថ្ងៃខ្ចី',
            'fine_amount.numeric' => 'ចំនួនការពិន័យត្រូវតែជាលេខ',
            'fine_amount.min' => 'ចំនួនការពិន័យមិនអាចតិចជាង 0',
        ];
    }
}



================================================
FILE: app/Http/Requests/UpdateMemberRequest.php
================================================
<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;

class UpdateMemberRequest extends FormRequest
{
    public function authorize(): bool
    {
        return true;
    }

    public function rules(): array
    {
        return [
            'name' => 'required|string|max:255',
            'email' => [
                'required',
                'email',
                'max:255',
                Rule::unique('members', 'email')->ignore($this->member->id)
            ],
            'phone' => 'nullable|string|max:20',
            'address' => 'nullable|string|max:500',
            'date_of_birth' => 'nullable|date|before:today',
            'membership_date' => 'required|date|before_or_equal:today',
            'membership_status' => 'required|in:active,inactive,suspended',
        ];
    }

    public function messages(): array
    {
        return [
            'name.required' => 'ឈ្មោះពេញត្រូវតែបំពេញ',
            'name.string' => 'ឈ្មោះត្រូវតែជាអក្សរ',
            'name.max' => 'ឈ្មោះមិនអាចលើសពី 255 តួអក្សរទេ',
            'email.required' => 'អីមែលត្រូវតែបំពេញ',
            'email.email' => 'អីមែលត្រូវតែមានទម្រង់ត្រឹមត្រូវ',
            'email.unique' => 'អីមែលនេះមានរួចហើយ',
            'email.max' => 'អីមែលមិនអាចលើសពី 255 តួអក្សរទេ',
            'phone.max' => 'លេខទូរសព្ទមិនអាចលើសពី 20 តួអក្សរទេ',
            'address.max' => 'អាសយដ្ឋានមិនអាចលើសពី 500 តួអក្សរទេ',
            'date_of_birth.date' => 'ថ្ងៃកំណើតត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'date_of_birth.before' => 'ថ្ងៃកំណើតត្រូវតែមុនថ្ងៃបច្ចុប្បន្ន',
            'membership_date.required' => 'ថ្ងៃចុះឈ្មោះត្រូវតែបំពេញ',
            'membership_date.date' => 'ថ្ងៃចុះឈ្មោះត្រូវតែជាកាលបរិច្ឆេទត្រឹមត្រូវ',
            'membership_date.before_or_equal' => 'ថ្ងៃចុះឈ្មោះមិនអាចលើសពីថ្ងៃបច្ចុប្បន្នទេ',
            'membership_status.required' => 'ស្ថានភាពសមាជិកត្រូវតែជ្រើសរើស',
            'membership_status.in' => 'ស្ថានភាពសមាជិកមិនត្រឹមត្រូវ',
        ];
    }
}



================================================
FILE: app/Http/Requests/Auth/LoginRequest.php
================================================
<?php

namespace App\Http\Requests\Auth;

use Illuminate\Auth\Events\Lockout;
use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\RateLimiter;
use Illuminate\Support\Str;
use Illuminate\Validation\ValidationException;

class LoginRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'email' => ['required', 'string', 'email'],
            'password' => ['required', 'string'],
        ];
    }

    /**
     * Attempt to authenticate the request's credentials.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function authenticate(): void
    {
        $this->ensureIsNotRateLimited();

        if (! Auth::attempt($this->only('email', 'password'), $this->boolean('remember'))) {
            RateLimiter::hit($this->throttleKey());

            throw ValidationException::withMessages([
                'email' => trans('auth.failed'),
            ]);
        }

        RateLimiter::clear($this->throttleKey());
    }

    /**
     * Ensure the login request is not rate limited.
     *
     * @throws \Illuminate\Validation\ValidationException
     */
    public function ensureIsNotRateLimited(): void
    {
        if (! RateLimiter::tooManyAttempts($this->throttleKey(), 5)) {
            return;
        }

        event(new Lockout($this));

        $seconds = RateLimiter::availableIn($this->throttleKey());

        throw ValidationException::withMessages([
            'email' => trans('auth.throttle', [
                'seconds' => $seconds,
                'minutes' => ceil($seconds / 60),
            ]),
        ]);
    }

    /**
     * Get the rate limiting throttle key for the request.
     */
    public function throttleKey(): string
    {
        return Str::transliterate(Str::lower($this->string('email')).'|'.$this->ip());
    }
}



================================================
FILE: app/Models/Book.php
================================================
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Book extends Model
{
    use HasFactory;

    protected $fillable = [
        'title',
        'author',
        'genre',
        'isbn',
        'description',
        'published_year',
        'total_copies',
        'available_copies',
    ];

    protected $casts = [
        'published_year' => 'integer',
        'total_copies' => 'integer',
        'available_copies' => 'integer',
    ];

    // Relationships
    public function borrowings()
    {
        return $this->hasMany(Borrowing::class);
    }

    public function activeBorrowings()
    {
        return $this->borrowings()->active();
    }

    public function overdueBorrowings()
    {
        return $this->borrowings()->overdue();
    }

    // Helper methods
    public function isAvailable()
    {
        return $this->available_copies > 0;
    }

    public function getBorrowedCopiesAttribute()
    {
        return $this->total_copies - $this->available_copies;
    }

    public function getUtilizationRateAttribute()
    {
        if ($this->total_copies == 0) {
            return 0;
        }

        return ($this->borrowed_copies / $this->total_copies) * 100;
    }
}



================================================
FILE: app/Models/Borrowing.php
================================================
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Carbon\Carbon;

class Borrowing extends Model
{
    use HasFactory;

    protected $fillable = [
        'member_id',
        'book_id',
        'borrowed_at',
        'due_date',
        'returned_at',
        'fine_amount',
        'fine_paid',
    ];

    protected $casts = [
        'borrowed_at' => 'datetime',
        'due_date' => 'datetime',
        'returned_at' => 'datetime',
        'fine_paid' => 'boolean',
        'fine_amount' => 'decimal:2',
    ];

    // Relationships
    public function member()
    {
        return $this->belongsTo(Member::class);
    }

    public function book()
    {
        return $this->belongsTo(Book::class);
    }

    // Scopes
    public function scopeActive($query)
    {
        return $query->whereNull('returned_at');
    }

    public function scopeOverdue($query)
    {
        return $query->whereNull('returned_at')
            ->where('due_date', '<', now());
    }

    public function scopeReturned($query)
    {
        return $query->whereNotNull('returned_at');
    }

    // Helper methods
    public function isOverdue()
    {
        return !$this->returned_at && $this->due_date->isPast();
    }

    public function getDaysOverdueAttribute()
    {
        if (!$this->isOverdue()) {
            return 0;
        }

        return $this->due_date->diffInDays(now());
    }

    public function calculateFine($ratePerDay = 1.00)
    {
        if (!$this->isOverdue()) {
            return 0;
        }

        return $this->days_overdue * $ratePerDay;
    }

    public function getStatusAttribute()
    {
        if ($this->returned_at) {
            return 'returned';
        }

        if ($this->isOverdue()) {
            return 'overdue';
        }

        return 'active';
    }
}



================================================
FILE: app/Models/Member.php
================================================
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Member extends Model
{
    use HasFactory;

    protected $fillable = [
        'name',
        'email',
        'phone',
        'address',
        'membership_date',
        'membership_status'
    ];

    protected $casts = [
        'membership_date' => 'date'
    ];

    public function borrowings()
    {
        return $this->hasMany(Borrowing::class);
    }

    public function activeBorrowings()
    {
        return $this->hasMany(Borrowing::class)->whereNull('returned_at');
    }

    public function getTotalFinesAttribute()
    {
        return $this->borrowings()
            ->whereNotNull('fine_amount')
            ->where('fine_paid', false)
            ->sum('fine_amount');
    }

    public function scopeActive($query)
    {
        return $query->where('membership_status', 'active');
    }

    public function scopeSearch($query, $search)
    {
        return $query->where(function ($q) use ($search) {
            $q->where('name', 'LIKE', "%{$search}%")
                ->orWhere('email', 'LIKE', "%{$search}%")
                ->orWhere('phone', 'LIKE', "%{$search}%");
        });
    }
}



================================================
FILE: app/Models/User.php
================================================
<?php

namespace App\Models;

// use Illuminate\Contracts\Auth\MustVerifyEmail;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Foundation\Auth\User as Authenticatable;
use Illuminate\Notifications\Notifiable;

class  User extends Authenticatable
{
    /** @user HasFactory<\Database\Factories\UserFactory> */
    use HasFactory, Notifiable;

    /**
     * The attributes that are mass assignable.
     *
     * @var list<string>
     */
    protected $fillable = [
        'name',
        'email',
        'password',
    ];

    /**
     * The attributes that should be hidden for serialization.
     *
     * @var list<string>
     */
    protected $hidden = [
        'password',
        'remember_token',
    ];

    /**
     * Get the attributes that should be cast.
     *
     * @return array<string, string>
     */
    protected function casts(): array
    {
        return [
            'email_verified_at' => 'datetime',
            'password' => 'hashed',
        ];
    }
}



================================================
FILE: app/Providers/AppServiceProvider.php
================================================
<?php

namespace App\Providers;

use Illuminate\Support\ServiceProvider;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        //
    }
}



================================================
FILE: app/View/Components/AppLayout.php
================================================
<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class AppLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.app');
    }
}



================================================
FILE: app/View/Components/GuestLayout.php
================================================
<?php

namespace App\View\Components;

use Illuminate\View\Component;
use Illuminate\View\View;

class GuestLayout extends Component
{
    /**
     * Get the view / contents that represents the component.
     */
    public function render(): View
    {
        return view('layouts.guest');
    }
}



================================================
FILE: bootstrap/app.php
================================================
<?php

use Illuminate\Foundation\Application;
use Illuminate\Foundation\Configuration\Exceptions;
use Illuminate\Foundation\Configuration\Middleware;

return Application::configure(basePath: dirname(__DIR__))
    ->withRouting(
        web: __DIR__.'/../routes/web.php',
        commands: __DIR__.'/../routes/console.php',
        health: '/up',
    )
    ->withMiddleware(function (Middleware $middleware): void {
        //
    })
    ->withExceptions(function (Exceptions $exceptions): void {
        //
    })->create();



================================================
FILE: bootstrap/providers.php
================================================
<?php

return [
    App\Providers\AppServiceProvider::class,
];



================================================
FILE: config/app.php
================================================
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Application Name
    |--------------------------------------------------------------------------
    |
    | This value is the name of your application, which will be used when the
    | framework needs to place the application's name in a notification or
    | other UI elements where an application name needs to be displayed.
    |
    */

    'name' => env('APP_NAME', 'Laravel'),

    /*
    |--------------------------------------------------------------------------
    | Application Environment
    |--------------------------------------------------------------------------
    |
    | This value determines the "environment" your application is currently
    | running in. This may determine how you prefer to configure various
    | services the application utilizes. Set this in your ".env" file.
    |
    */

    'env' => env('APP_ENV', 'production'),

    /*
    |--------------------------------------------------------------------------
    | Application Debug Mode
    |--------------------------------------------------------------------------
    |
    | When your application is in debug mode, detailed error messages with
    | stack traces will be shown on every error that occurs within your
    | application. If disabled, a simple generic error page is shown.
    |
    */

    'debug' => (bool) env('APP_DEBUG', false),

    /*
    |--------------------------------------------------------------------------
    | Application URL
    |--------------------------------------------------------------------------
    |
    | This URL is used by the console to properly generate URLs when using
    | the Artisan command line tool. You should set this to the root of
    | the application so that it's available within Artisan commands.
    |
    */

    'url' => env('APP_URL', 'http://localhost'),

    /*
    |--------------------------------------------------------------------------
    | Application Timezone
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default timezone for your application, which
    | will be used by the PHP date and date-time functions. The timezone
    | is set to "UTC" by default as it is suitable for most use cases.
    |
    */

    'timezone' => 'UTC',

    /*
    |--------------------------------------------------------------------------
    | Application Locale Configuration
    |--------------------------------------------------------------------------
    |
    | The application locale determines the default locale that will be used
    | by Laravel's translation / localization methods. This option can be
    | set to any locale for which you plan to have translation strings.
    |
    */

    'locale' => env('APP_LOCALE', 'en'),

    'fallback_locale' => env('APP_FALLBACK_LOCALE', 'en'),

    'faker_locale' => env('APP_FAKER_LOCALE', 'en_US'),

    /*
    |--------------------------------------------------------------------------
    | Encryption Key
    |--------------------------------------------------------------------------
    |
    | This key is utilized by Laravel's encryption services and should be set
    | to a random, 32 character string to ensure that all encrypted values
    | are secure. You should do this prior to deploying the application.
    |
    */

    'cipher' => 'AES-256-CBC',

    'key' => env('APP_KEY'),

    'previous_keys' => [
        ...array_filter(
            explode(',', env('APP_PREVIOUS_KEYS', ''))
        ),
    ],

    /*
    |--------------------------------------------------------------------------
    | Maintenance Mode Driver
    |--------------------------------------------------------------------------
    |
    | These configuration options determine the driver used to determine and
    | manage Laravel's "maintenance mode" status. The "cache" driver will
    | allow maintenance mode to be controlled across multiple machines.
    |
    | Supported drivers: "file", "cache"
    |
    */

    'maintenance' => [
        'driver' => env('APP_MAINTENANCE_DRIVER', 'file'),
        'store' => env('APP_MAINTENANCE_STORE', 'database'),
    ],

];



================================================
FILE: config/auth.php
================================================
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Authentication Defaults
    |--------------------------------------------------------------------------
    |
    | This option defines the default authentication "guard" and password
    | reset "broker" for your application. You may change these values
    | as required, but they're a perfect start for most applications.
    |
    */

    'defaults' => [
        'guard' => env('AUTH_GUARD', 'web'),
        'passwords' => env('AUTH_PASSWORD_BROKER', 'users'),
    ],

    /*
    |--------------------------------------------------------------------------
    | Authentication Guards
    |--------------------------------------------------------------------------
    |
    | Next, you may define every authentication guard for your application.
    | Of course, a great default configuration has been defined for you
    | which utilizes session storage plus the Eloquent user provider.
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | Supported: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | User Providers
    |--------------------------------------------------------------------------
    |
    | All authentication guards have a user provider, which defines how the
    | users are actually retrieved out of your database or other storage
    | system used by the application. Typically, Eloquent is utilized.
    |
    | If you have multiple user tables or models you may configure multiple
    | providers to represent the model / table. These providers may then
    | be assigned to any extra authentication guards you have defined.
    |
    | Supported: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => env('AUTH_MODEL', App\Models\User::class),
        ],

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Resetting Passwords
    |--------------------------------------------------------------------------
    |
    | These configuration options specify the behavior of Laravel's password
    | reset functionality, including the table utilized for token storage
    | and the user provider that is invoked to actually retrieve users.
    |
    | The expiry time is the number of minutes that each reset token will be
    | considered valid. This security feature keeps tokens short-lived so
    | they have less time to be guessed. You may change this as needed.
    |
    | The throttle setting is the number of seconds a user must wait before
    | generating more password reset tokens. This prevents the user from
    | quickly generating a very large amount of password reset tokens.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => env('AUTH_PASSWORD_RESET_TOKEN_TABLE', 'password_reset_tokens'),
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Password Confirmation Timeout
    |--------------------------------------------------------------------------
    |
    | Here you may define the number of seconds before a password confirmation
    | window expires and users are asked to re-enter their password via the
    | confirmation screen. By default, the timeout lasts for three hours.
    |
    */

    'password_timeout' => env('AUTH_PASSWORD_TIMEOUT', 10800),

];



================================================
FILE: config/cache.php
================================================
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Cache Store
    |--------------------------------------------------------------------------
    |
    | This option controls the default cache store that will be used by the
    | framework. This connection is utilized if another isn't explicitly
    | specified when running a cache operation inside the application.
    |
    */

    'default' => env('CACHE_STORE', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Cache Stores
    |--------------------------------------------------------------------------
    |
    | Here you may define all of the cache "stores" for your application as
    | well as their drivers. You may even define multiple stores for the
    | same cache driver to group types of items stored in your caches.
    |
    | Supported drivers: "array", "database", "file", "memcached",
    |                    "redis", "dynamodb", "octane", "null"
    |
    */

    'stores' => [

        'array' => [
            'driver' => 'array',
            'serialize' => false,
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_CACHE_CONNECTION'),
            'table' => env('DB_CACHE_TABLE', 'cache'),
            'lock_connection' => env('DB_CACHE_LOCK_CONNECTION'),
            'lock_table' => env('DB_CACHE_LOCK_TABLE'),
        ],

        'file' => [
            'driver' => 'file',
            'path' => storage_path('framework/cache/data'),
            'lock_path' => storage_path('framework/cache/data'),
        ],

        'memcached' => [
            'driver' => 'memcached',
            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
            'sasl' => [
                env('MEMCACHED_USERNAME'),
                env('MEMCACHED_PASSWORD'),
            ],
            'options' => [
                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
            ],
            'servers' => [
                [
                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
                    'port' => env('MEMCACHED_PORT', 11211),
                    'weight' => 100,
                ],
            ],
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_CACHE_CONNECTION', 'cache'),
            'lock_connection' => env('REDIS_CACHE_LOCK_CONNECTION', 'default'),
        ],

        'dynamodb' => [
            'driver' => 'dynamodb',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
            'endpoint' => env('DYNAMODB_ENDPOINT'),
        ],

        'octane' => [
            'driver' => 'octane',
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Cache Key Prefix
    |--------------------------------------------------------------------------
    |
    | When utilizing the APC, database, memcached, Redis, and DynamoDB cache
    | stores, there might be other applications using the same cache. For
    | that reason, you may prefix every cache key to avoid collisions.
    |
    */

    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),

];



================================================
FILE: config/database.php
================================================
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Database Connection Name
    |--------------------------------------------------------------------------
    |
    | Here you may specify which of the database connections below you wish
    | to use as your default connection for database operations. This is
    | the connection which will be utilized unless another connection
    | is explicitly specified when you execute a query / statement.
    |
    */

    'default' => env('DB_CONNECTION', 'sqlite'),

    /*
    |--------------------------------------------------------------------------
    | Database Connections
    |--------------------------------------------------------------------------
    |
    | Below are all of the database connections defined for your application.
    | An example configuration is provided for each database system which
    | is supported by Laravel. You're free to add / remove connections.
    |
    */

    'connections' => [

        'sqlite' => [
            'driver' => 'sqlite',
            'url' => env('DB_URL'),
            'database' => env('DB_DATABASE', database_path('database.sqlite')),
            'prefix' => '',
            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
            'busy_timeout' => null,
            'journal_mode' => null,
            'synchronous' => null,
        ],

        'mysql' => [
            'driver' => 'mysql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'mariadb' => [
            'driver' => 'mariadb',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '3306'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'unix_socket' => env('DB_SOCKET', ''),
            'charset' => env('DB_CHARSET', 'utf8mb4'),
            'collation' => env('DB_COLLATION', 'utf8mb4_unicode_ci'),
            'prefix' => '',
            'prefix_indexes' => true,
            'strict' => true,
            'engine' => null,
            'options' => extension_loaded('pdo_mysql') ? array_filter([
                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
            ]) : [],
        ],

        'pgsql' => [
            'driver' => 'pgsql',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', '127.0.0.1'),
            'port' => env('DB_PORT', '5432'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            'search_path' => 'public',
            'sslmode' => 'prefer',
        ],

        'sqlsrv' => [
            'driver' => 'sqlsrv',
            'url' => env('DB_URL'),
            'host' => env('DB_HOST', 'localhost'),
            'port' => env('DB_PORT', '1433'),
            'database' => env('DB_DATABASE', 'laravel'),
            'username' => env('DB_USERNAME', 'root'),
            'password' => env('DB_PASSWORD', ''),
            'charset' => env('DB_CHARSET', 'utf8'),
            'prefix' => '',
            'prefix_indexes' => true,
            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'false'),
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Migration Repository Table
    |--------------------------------------------------------------------------
    |
    | This table keeps track of all the migrations that have already run for
    | your application. Using this information, we can determine which of
    | the migrations on disk haven't actually been run on the database.
    |
    */

    'migrations' => [
        'table' => 'migrations',
        'update_date_on_publish' => true,
    ],

    /*
    |--------------------------------------------------------------------------
    | Redis Databases
    |--------------------------------------------------------------------------
    |
    | Redis is an open source, fast, and advanced key-value store that also
    | provides a richer body of commands than a typical key-value system
    | such as Memcached. You may define your connection settings here.
    |
    */

    'redis' => [

        'client' => env('REDIS_CLIENT', 'phpredis'),

        'options' => [
            'cluster' => env('REDIS_CLUSTER', 'redis'),
            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
            'persistent' => env('REDIS_PERSISTENT', false),
        ],

        'default' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_DB', '0'),
        ],

        'cache' => [
            'url' => env('REDIS_URL'),
            'host' => env('REDIS_HOST', '127.0.0.1'),
            'username' => env('REDIS_USERNAME'),
            'password' => env('REDIS_PASSWORD'),
            'port' => env('REDIS_PORT', '6379'),
            'database' => env('REDIS_CACHE_DB', '1'),
        ],

    ],

];



================================================
FILE: config/filesystems.php
================================================
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Filesystem Disk
    |--------------------------------------------------------------------------
    |
    | Here you may specify the default filesystem disk that should be used
    | by the framework. The "local" disk, as well as a variety of cloud
    | based disks are available to your application for file storage.
    |
    */

    'default' => env('FILESYSTEM_DISK', 'local'),

    /*
    |--------------------------------------------------------------------------
    | Filesystem Disks
    |--------------------------------------------------------------------------
    |
    | Below you may configure as many filesystem disks as necessary, and you
    | may even configure multiple disks for the same driver. Examples for
    | most supported storage drivers are configured here for reference.
    |
    | Supported drivers: "local", "ftp", "sftp", "s3"
    |
    */

    'disks' => [

        'local' => [
            'driver' => 'local',
            'root' => storage_path('app/private'),
            'serve' => true,
            'throw' => false,
            'report' => false,
        ],

        'public' => [
            'driver' => 'local',
            'root' => storage_path('app/public'),
            'url' => env('APP_URL').'/storage',
            'visibility' => 'public',
            'throw' => false,
            'report' => false,
        ],

        's3' => [
            'driver' => 's3',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'region' => env('AWS_DEFAULT_REGION'),
            'bucket' => env('AWS_BUCKET'),
            'url' => env('AWS_URL'),
            'endpoint' => env('AWS_ENDPOINT'),
            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
            'throw' => false,
            'report' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Symbolic Links
    |--------------------------------------------------------------------------
    |
    | Here you may configure the symbolic links that will be created when the
    | `storage:link` Artisan command is executed. The array keys should be
    | the locations of the links and the values should be their targets.
    |
    */

    'links' => [
        public_path('storage') => storage_path('app/public'),
    ],

];



================================================
FILE: config/logging.php
================================================
<?php

use Monolog\Handler\NullHandler;
use Monolog\Handler\StreamHandler;
use Monolog\Handler\SyslogUdpHandler;
use Monolog\Processor\PsrLogMessageProcessor;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Log Channel
    |--------------------------------------------------------------------------
    |
    | This option defines the default log channel that is used to write
    | messages to your logs. The value provided here should match one of
    | the channels present in the list of "channels" configured below.
    |
    */

    'default' => env('LOG_CHANNEL', 'stack'),

    /*
    |--------------------------------------------------------------------------
    | Deprecations Log Channel
    |--------------------------------------------------------------------------
    |
    | This option controls the log channel that should be used to log warnings
    | regarding deprecated PHP and library features. This allows you to get
    | your application ready for upcoming major versions of dependencies.
    |
    */

    'deprecations' => [
        'channel' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
        'trace' => env('LOG_DEPRECATIONS_TRACE', false),
    ],

    /*
    |--------------------------------------------------------------------------
    | Log Channels
    |--------------------------------------------------------------------------
    |
    | Here you may configure the log channels for your application. Laravel
    | uses the Monolog PHP logging library, which includes a variety
    | of powerful log handlers and formatters that you're free to use.
    |
    | Available drivers: "single", "daily", "slack", "syslog",
    | "errorlog", "monolog", "custom", "stack"
    |
    */

    'channels' => [

        'stack' => [
            'driver' => 'stack',
            'channels' => explode(',', env('LOG_STACK', 'single')),
            'ignore_exceptions' => false,
        ],

        'single' => [
            'driver' => 'single',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'daily' => [
            'driver' => 'daily',
            'path' => storage_path('logs/laravel.log'),
            'level' => env('LOG_LEVEL', 'debug'),
            'days' => env('LOG_DAILY_DAYS', 14),
            'replace_placeholders' => true,
        ],

        'slack' => [
            'driver' => 'slack',
            'url' => env('LOG_SLACK_WEBHOOK_URL'),
            'username' => env('LOG_SLACK_USERNAME', 'Laravel Log'),
            'emoji' => env('LOG_SLACK_EMOJI', ':boom:'),
            'level' => env('LOG_LEVEL', 'critical'),
            'replace_placeholders' => true,
        ],

        'papertrail' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
            'handler_with' => [
                'host' => env('PAPERTRAIL_URL'),
                'port' => env('PAPERTRAIL_PORT'),
                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
            ],
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'stderr' => [
            'driver' => 'monolog',
            'level' => env('LOG_LEVEL', 'debug'),
            'handler' => StreamHandler::class,
            'handler_with' => [
                'stream' => 'php://stderr',
            ],
            'formatter' => env('LOG_STDERR_FORMATTER'),
            'processors' => [PsrLogMessageProcessor::class],
        ],

        'syslog' => [
            'driver' => 'syslog',
            'level' => env('LOG_LEVEL', 'debug'),
            'facility' => env('LOG_SYSLOG_FACILITY', LOG_USER),
            'replace_placeholders' => true,
        ],

        'errorlog' => [
            'driver' => 'errorlog',
            'level' => env('LOG_LEVEL', 'debug'),
            'replace_placeholders' => true,
        ],

        'null' => [
            'driver' => 'monolog',
            'handler' => NullHandler::class,
        ],

        'emergency' => [
            'path' => storage_path('logs/laravel.log'),
        ],

    ],

];



================================================
FILE: config/mail.php
================================================
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Mailer
    |--------------------------------------------------------------------------
    |
    | This option controls the default mailer that is used to send all email
    | messages unless another mailer is explicitly specified when sending
    | the message. All additional mailers can be configured within the
    | "mailers" array. Examples of each type of mailer are provided.
    |
    */

    'default' => env('MAIL_MAILER', 'log'),

    /*
    |--------------------------------------------------------------------------
    | Mailer Configurations
    |--------------------------------------------------------------------------
    |
    | Here you may configure all of the mailers used by your application plus
    | their respective settings. Several examples have been configured for
    | you and you are free to add your own as your application requires.
    |
    | Laravel supports a variety of mail "transport" drivers that can be used
    | when delivering an email. You may specify which one you're using for
    | your mailers below. You may also add additional mailers if needed.
    |
    | Supported: "smtp", "sendmail", "mailgun", "ses", "ses-v2",
    |            "postmark", "resend", "log", "array",
    |            "failover", "roundrobin"
    |
    */

    'mailers' => [

        'smtp' => [
            'transport' => 'smtp',
            'scheme' => env('MAIL_SCHEME'),
            'url' => env('MAIL_URL'),
            'host' => env('MAIL_HOST', '127.0.0.1'),
            'port' => env('MAIL_PORT', 2525),
            'username' => env('MAIL_USERNAME'),
            'password' => env('MAIL_PASSWORD'),
            'timeout' => null,
            'local_domain' => env('MAIL_EHLO_DOMAIN', parse_url(env('APP_URL', 'http://localhost'), PHP_URL_HOST)),
        ],

        'ses' => [
            'transport' => 'ses',
        ],

        'postmark' => [
            'transport' => 'postmark',
            // 'message_stream_id' => env('POSTMARK_MESSAGE_STREAM_ID'),
            // 'client' => [
            //     'timeout' => 5,
            // ],
        ],

        'resend' => [
            'transport' => 'resend',
        ],

        'sendmail' => [
            'transport' => 'sendmail',
            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
        ],

        'log' => [
            'transport' => 'log',
            'channel' => env('MAIL_LOG_CHANNEL'),
        ],

        'array' => [
            'transport' => 'array',
        ],

        'failover' => [
            'transport' => 'failover',
            'mailers' => [
                'smtp',
                'log',
            ],
            'retry_after' => 60,
        ],

        'roundrobin' => [
            'transport' => 'roundrobin',
            'mailers' => [
                'ses',
                'postmark',
            ],
            'retry_after' => 60,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Global "From" Address
    |--------------------------------------------------------------------------
    |
    | You may wish for all emails sent by your application to be sent from
    | the same address. Here you may specify a name and address that is
    | used globally for all emails that are sent by your application.
    |
    */

    'from' => [
        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
        'name' => env('MAIL_FROM_NAME', 'Example'),
    ],

];



================================================
FILE: config/queue.php
================================================
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Default Queue Connection Name
    |--------------------------------------------------------------------------
    |
    | Laravel's queue supports a variety of backends via a single, unified
    | API, giving you convenient access to each backend using identical
    | syntax for each. The default queue connection is defined below.
    |
    */

    'default' => env('QUEUE_CONNECTION', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection options for every queue backend
    | used by your application. An example configuration is provided for
    | each backend supported by Laravel. You're also free to add more.
    |
    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
    |
    */

    'connections' => [

        'sync' => [
            'driver' => 'sync',
        ],

        'database' => [
            'driver' => 'database',
            'connection' => env('DB_QUEUE_CONNECTION'),
            'table' => env('DB_QUEUE_TABLE', 'jobs'),
            'queue' => env('DB_QUEUE', 'default'),
            'retry_after' => (int) env('DB_QUEUE_RETRY_AFTER', 90),
            'after_commit' => false,
        ],

        'beanstalkd' => [
            'driver' => 'beanstalkd',
            'host' => env('BEANSTALKD_QUEUE_HOST', 'localhost'),
            'queue' => env('BEANSTALKD_QUEUE', 'default'),
            'retry_after' => (int) env('BEANSTALKD_QUEUE_RETRY_AFTER', 90),
            'block_for' => 0,
            'after_commit' => false,
        ],

        'sqs' => [
            'driver' => 'sqs',
            'key' => env('AWS_ACCESS_KEY_ID'),
            'secret' => env('AWS_SECRET_ACCESS_KEY'),
            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
            'queue' => env('SQS_QUEUE', 'default'),
            'suffix' => env('SQS_SUFFIX'),
            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
            'after_commit' => false,
        ],

        'redis' => [
            'driver' => 'redis',
            'connection' => env('REDIS_QUEUE_CONNECTION', 'default'),
            'queue' => env('REDIS_QUEUE', 'default'),
            'retry_after' => (int) env('REDIS_QUEUE_RETRY_AFTER', 90),
            'block_for' => null,
            'after_commit' => false,
        ],

    ],

    /*
    |--------------------------------------------------------------------------
    | Job Batching
    |--------------------------------------------------------------------------
    |
    | The following options configure the database and table that store job
    | batching information. These options can be updated to any database
    | connection and table which has been defined by your application.
    |
    */

    'batching' => [
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'job_batches',
    ],

    /*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control how and where failed jobs are stored. Laravel ships with
    | support for storing failed jobs in a simple file or in a database.
    |
    | Supported drivers: "database-uuids", "dynamodb", "file", "null"
    |
    */

    'failed' => [
        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
        'database' => env('DB_CONNECTION', 'sqlite'),
        'table' => 'failed_jobs',
    ],

];



================================================
FILE: config/services.php
================================================
<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Third Party Services
    |--------------------------------------------------------------------------
    |
    | This file is for storing the credentials for third party services such
    | as Mailgun, Postmark, AWS and more. This file provides the de facto
    | location for this type of information, allowing packages to have
    | a conventional file to locate the various service credentials.
    |
    */

    'postmark' => [
        'token' => env('POSTMARK_TOKEN'),
    ],

    'resend' => [
        'key' => env('RESEND_KEY'),
    ],

    'ses' => [
        'key' => env('AWS_ACCESS_KEY_ID'),
        'secret' => env('AWS_SECRET_ACCESS_KEY'),
        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
    ],

    'slack' => [
        'notifications' => [
            'bot_user_oauth_token' => env('SLACK_BOT_USER_OAUTH_TOKEN'),
            'channel' => env('SLACK_BOT_USER_DEFAULT_CHANNEL'),
        ],
    ],

];



================================================
FILE: config/session.php
================================================
<?php

use Illuminate\Support\Str;

return [

    /*
    |--------------------------------------------------------------------------
    | Default Session Driver
    |--------------------------------------------------------------------------
    |
    | This option determines the default session driver that is utilized for
    | incoming requests. Laravel supports a variety of storage options to
    | persist session data. Database storage is a great default choice.
    |
    | Supported: "file", "cookie", "database", "memcached",
    |            "redis", "dynamodb", "array"
    |
    */

    'driver' => env('SESSION_DRIVER', 'database'),

    /*
    |--------------------------------------------------------------------------
    | Session Lifetime
    |--------------------------------------------------------------------------
    |
    | Here you may specify the number of minutes that you wish the session
    | to be allowed to remain idle before it expires. If you want them
    | to expire immediately when the browser is closed then you may
    | indicate that via the expire_on_close configuration option.
    |
    */

    'lifetime' => (int) env('SESSION_LIFETIME', 120),

    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),

    /*
    |--------------------------------------------------------------------------
    | Session Encryption
    |--------------------------------------------------------------------------
    |
    | This option allows you to easily specify that all of your session data
    | should be encrypted before it's stored. All encryption is performed
    | automatically by Laravel and you may use the session like normal.
    |
    */

    'encrypt' => env('SESSION_ENCRYPT', false),

    /*
    |--------------------------------------------------------------------------
    | Session File Location
    |--------------------------------------------------------------------------
    |
    | When utilizing the "file" session driver, the session files are placed
    | on disk. The default storage location is defined here; however, you
    | are free to provide another location where they should be stored.
    |
    */

    'files' => storage_path('framework/sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Connection
    |--------------------------------------------------------------------------
    |
    | When using the "database" or "redis" session drivers, you may specify a
    | connection that should be used to manage these sessions. This should
    | correspond to a connection in your database configuration options.
    |
    */

    'connection' => env('SESSION_CONNECTION'),

    /*
    |--------------------------------------------------------------------------
    | Session Database Table
    |--------------------------------------------------------------------------
    |
    | When using the "database" session driver, you may specify the table to
    | be used to store sessions. Of course, a sensible default is defined
    | for you; however, you're welcome to change this to another table.
    |
    */

    'table' => env('SESSION_TABLE', 'sessions'),

    /*
    |--------------------------------------------------------------------------
    | Session Cache Store
    |--------------------------------------------------------------------------
    |
    | When using one of the framework's cache driven session backends, you may
    | define the cache store which should be used to store the session data
    | between requests. This must match one of your defined cache stores.
    |
    | Affects: "dynamodb", "memcached", "redis"
    |
    */

    'store' => env('SESSION_STORE'),

    /*
    |--------------------------------------------------------------------------
    | Session Sweeping Lottery
    |--------------------------------------------------------------------------
    |
    | Some session drivers must manually sweep their storage location to get
    | rid of old sessions from storage. Here are the chances that it will
    | happen on a given request. By default, the odds are 2 out of 100.
    |
    */

    'lottery' => [2, 100],

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Name
    |--------------------------------------------------------------------------
    |
    | Here you may change the name of the session cookie that is created by
    | the framework. Typically, you should not need to change this value
    | since doing so does not grant a meaningful security improvement.
    |
    */

    'cookie' => env(
        'SESSION_COOKIE',
        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
    ),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Path
    |--------------------------------------------------------------------------
    |
    | The session cookie path determines the path for which the cookie will
    | be regarded as available. Typically, this will be the root path of
    | your application, but you're free to change this when necessary.
    |
    */

    'path' => env('SESSION_PATH', '/'),

    /*
    |--------------------------------------------------------------------------
    | Session Cookie Domain
    |--------------------------------------------------------------------------
    |
    | This value determines the domain and subdomains the session cookie is
    | available to. By default, the cookie will be available to the root
    | domain and all subdomains. Typically, this shouldn't be changed.
    |
    */

    'domain' => env('SESSION_DOMAIN'),

    /*
    |--------------------------------------------------------------------------
    | HTTPS Only Cookies
    |--------------------------------------------------------------------------
    |
    | By setting this option to true, session cookies will only be sent back
    | to the server if the browser has a HTTPS connection. This will keep
    | the cookie from being sent to you when it can't be done securely.
    |
    */

    'secure' => env('SESSION_SECURE_COOKIE'),

    /*
    |--------------------------------------------------------------------------
    | HTTP Access Only
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will prevent JavaScript from accessing the
    | value of the cookie and the cookie will only be accessible through
    | the HTTP protocol. It's unlikely you should disable this option.
    |
    */

    'http_only' => env('SESSION_HTTP_ONLY', true),

    /*
    |--------------------------------------------------------------------------
    | Same-Site Cookies
    |--------------------------------------------------------------------------
    |
    | This option determines how your cookies behave when cross-site requests
    | take place, and can be used to mitigate CSRF attacks. By default, we
    | will set this value to "lax" to permit secure cross-site requests.
    |
    | See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie#samesitesamesite-value
    |
    | Supported: "lax", "strict", "none", null
    |
    */

    'same_site' => env('SESSION_SAME_SITE', 'lax'),

    /*
    |--------------------------------------------------------------------------
    | Partitioned Cookies
    |--------------------------------------------------------------------------
    |
    | Setting this value to true will tie the cookie to the top-level site for
    | a cross-site context. Partitioned cookies are accepted by the browser
    | when flagged "secure" and the Same-Site attribute is set to "none".
    |
    */

    'partitioned' => env('SESSION_PARTITIONED_COOKIE', false),

];



================================================
FILE: database/factories/BookFactory.php
================================================
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

class BookFactory extends Factory
{
    public function definition(): array
    {
        return [
            'title' => $this->faker->sentence(3),
            'author' => $this->faker->name(),
            'genre' => $this->faker->randomElement(['Fiction', 'Non-Fiction', 'Science Fiction', 'Fantasy', 'Mystery', 'Romance', 'Biography']),
            'isbn' => $this->faker->unique()->isbn13(),
            'description' => $this->faker->paragraph(),
            'published_year' => $this->faker->year(),
            'total_copies' => $this->faker->numberBetween(1, 10),
            'available_copies' => function (array $attributes) {
                return $this->faker->numberBetween(0, $attributes['total_copies']);
            },
        ];
    }
}



================================================
FILE: database/factories/BorrowingFactory.php
================================================
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Borrowing>
 */
class BorrowingFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            //
        ];
    }
}



================================================
FILE: database/factories/MemberFactory.php
================================================
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;

class MemberFactory extends Factory
{
    public function definition(): array
    {
        return [
            'name' => $this->faker->name(),
            'email' => $this->faker->unique()->safeEmail(),
            'phone' => $this->faker->phoneNumber(),
            'address' => $this->faker->address(),
            'membership_date' => $this->faker->dateTimeBetween('-2 years', 'now'),
            'membership_status' => $this->faker->randomElement(['active', 'inactive', 'suspended']),
        ];
    }
}



================================================
FILE: database/factories/UserFactory.php
================================================
<?php

namespace Database\Factories;

use Illuminate\Database\Eloquent\Factories\Factory;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Str;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
 */
class UserFactory extends Factory
{
    /**
     * The current password being used by the factory.
     */
    protected static ?string $password;

    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'name' => fake()->name(),
            'email' => fake()->unique()->safeEmail(),
            'email_verified_at' => now(),
            'password' => static::$password ??= Hash::make('password'),
            'remember_token' => Str::random(10),
        ];
    }

    /**
     * Indicate that the model's email address should be unverified.
     */
    public function unverified(): static
    {
        return $this->state(fn (array $attributes) => [
            'email_verified_at' => null,
        ]);
    }
}



================================================
FILE: database/migrations/0001_01_01_000000_create_users_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });

        Schema::create('password_reset_tokens', function (Blueprint $table) {
            $table->string('email')->primary();
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });

        Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
        Schema::dropIfExists('password_reset_tokens');
        Schema::dropIfExists('sessions');
    }
};



================================================
FILE: database/migrations/0001_01_01_000001_create_cache_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('cache', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->mediumText('value');
            $table->integer('expiration');
        });

        Schema::create('cache_locks', function (Blueprint $table) {
            $table->string('key')->primary();
            $table->string('owner');
            $table->integer('expiration');
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('cache');
        Schema::dropIfExists('cache_locks');
    }
};



================================================
FILE: database/migrations/0001_01_01_000002_create_jobs_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('jobs', function (Blueprint $table) {
            $table->id();
            $table->string('queue')->index();
            $table->longText('payload');
            $table->unsignedTinyInteger('attempts');
            $table->unsignedInteger('reserved_at')->nullable();
            $table->unsignedInteger('available_at');
            $table->unsignedInteger('created_at');
        });

        Schema::create('job_batches', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->string('name');
            $table->integer('total_jobs');
            $table->integer('pending_jobs');
            $table->integer('failed_jobs');
            $table->longText('failed_job_ids');
            $table->mediumText('options')->nullable();
            $table->integer('cancelled_at')->nullable();
            $table->integer('created_at');
            $table->integer('finished_at')->nullable();
        });

        Schema::create('failed_jobs', function (Blueprint $table) {
            $table->id();
            $table->string('uuid')->unique();
            $table->text('connection');
            $table->text('queue');
            $table->longText('payload');
            $table->longText('exception');
            $table->timestamp('failed_at')->useCurrent();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('jobs');
        Schema::dropIfExists('job_batches');
        Schema::dropIfExists('failed_jobs');
    }
};



================================================
FILE: database/migrations/2025_06_20_042513_create_books_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('books', function (Blueprint $table) {
            $table->id();
            $table->string('title');
            $table->string('author');
            $table->string('genre');
            $table->string('isbn')->unique();
            $table->text('description')->nullable();
            $table->integer('published_year')->nullable();
            $table->integer('total_copies')->default(1);
            $table->integer('available_copies')->default(1);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('books');
    }
};



================================================
FILE: database/migrations/2025_06_20_042519_create_members_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('members', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->string('phone');
            $table->text('address')->nullable();
            $table->date('membership_date');
            $table->enum('membership_status', ['active', 'inactive', 'suspended'])->default('active');
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('members');
    }
};



================================================
FILE: database/migrations/2025_06_20_042529_create_borrowings_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::create('borrowings', function (Blueprint $table) {
            $table->id();
            $table->foreignId('member_id')->constrained()->onDelete('cascade');
            $table->foreignId('book_id')->constrained()->onDelete('cascade');
            $table->datetime('borrowed_at');
            $table->datetime('due_date');
            $table->datetime('returned_at')->nullable();
            $table->decimal('fine_amount', 8, 2)->nullable();
            $table->boolean('fine_paid')->default(false);
            $table->timestamps();
        });
    }

    public function down(): void
    {
        Schema::dropIfExists('borrowings');
    }
};



================================================
FILE: database/migrations/2025_06_20_052931_add_indexes_to_borrowings_table.php
================================================
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    public function up(): void
    {
        Schema::table('borrowings', function (Blueprint $table) {
            $table->index(['returned_at', 'due_date']); // For overdue queries
            $table->index('borrowed_at'); // For recent borrowings
            $table->index('returned_at'); // For active borrowings
        });
    }

    public function down(): void
    {
        Schema::table('borrowings', function (Blueprint $table) {
            $table->dropIndex(['returned_at', 'due_date']);
            $table->dropIndex(['borrowed_at']);
            $table->dropIndex(['returned_at']);
        });
    }
};



================================================
FILE: database/seeders/BookSeeder.php
================================================
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Book;

class BookSeeder extends Seeder
{
    public function run(): void
    {
        $books = [
            [
                'title' => 'To Kill a Mockingbird',
                'author' => 'Harper Lee',
                'genre' => 'Fiction',
                'isbn' => '9780061120084',
                'description' => 'A gripping tale of racial injustice and childhood innocence.',
                'published_year' => 1960,
                'total_copies' => 5,
                'available_copies' => 5,
            ],
            [
                'title' => '1984',
                'author' => 'George Orwell',
                'genre' => 'Dystopian Fiction',
                'isbn' => '9780451524935',
                'description' => 'A totalitarian future where Big Brother watches everything.',
                'published_year' => 1949,
                'total_copies' => 3,
                'available_copies' => 2,
            ],
            [
                'title' => 'Pride and Prejudice',
                'author' => 'Jane Austen',
                'genre' => 'Romance',
                'isbn' => '9780141439518',
                'description' => 'A witty romance about Elizabeth Bennet and Mr. Darcy.',
                'published_year' => 1813,
                'total_copies' => 4,
                'available_copies' => 4,
            ],
            [
                'title' => 'The Great Gatsby',
                'author' => 'F. Scott Fitzgerald',
                'genre' => 'Fiction',
                'isbn' => '9780743273565',
                'description' => 'The story of Jay Gatsby and his obsession with Daisy Buchanan.',
                'published_year' => 1925,
                'total_copies' => 6,
                'available_copies' => 5,
            ],
            [
                'title' => 'Harry Potter and the Philosopher\'s Stone',
                'author' => 'J.K. Rowling',
                'genre' => 'Fantasy',
                'isbn' => '9780747532699',
                'description' => 'The beginning of Harry Potter\'s magical journey.',
                'published_year' => 1997,
                'total_copies' => 8,
                'available_copies' => 6,
            ],
            [
                'title' => 'The Catcher in the Rye',
                'author' => 'J.D. Salinger',
                'genre' => 'Fiction',
                'isbn' => '9780316769174',
                'description' => 'The story of Holden Caulfield and his disillusionment.',
                'published_year' => 1951,
                'total_copies' => 3,
                'available_copies' => 3,
            ],
            [
                'title' => 'Lord of the Flies',
                'author' => 'William Golding',
                'genre' => 'Fiction',
                'isbn' => '9780571056866',
                'description' => 'A group of boys stranded on an island and their descent into savagery.',
                'published_year' => 1954,
                'total_copies' => 4,
                'available_copies' => 4,
            ],
            [
                'title' => 'The Lord of the Rings',
                'author' => 'J.R.R. Tolkien',
                'genre' => 'Fantasy',
                'isbn' => '9780544003415',
                'description' => 'An epic fantasy adventure in Middle-earth.',
                'published_year' => 1954,
                'total_copies' => 5,
                'available_copies' => 4,
            ],
            [
                'title' => 'Brave New World',
                'author' => 'Aldous Huxley',
                'genre' => 'Science Fiction',
                'isbn' => '9780060850524',
                'description' => 'A dystopian society where everyone is conditioned to be happy.',
                'published_year' => 1932,
                'total_copies' => 3,
                'available_copies' => 3,
            ],
            [
                'title' => 'The Hobbit',
                'author' => 'J.R.R. Tolkien',
                'genre' => 'Fantasy',
                'isbn' => '9780547928227',
                'description' => 'Bilbo Baggins\' unexpected journey.',
                'published_year' => 1937,
                'total_copies' => 6,
                'available_copies' => 5,
            ],
        ];

        foreach ($books as $book) {
            Book::create($book);
        }
    }
}



================================================
FILE: database/seeders/BorrowingSeeder.php
================================================
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use App\Models\Borrowing;
use App\Models\Book;
use App\Models\Member;
use Carbon\Carbon;

class BorrowingSeeder extends Seeder
{
    public function run(): void
    {
        $members = Member::all();
        $books = Book::all();

        // Create some active borrowings
        for ($i = 0; $i < 8; $i++) {
            $member = $members->random();
            $book = $books->random();

            $borrowedAt = Carbon::now()->subDays(rand(1, 10));
            $dueDate = $borrowedAt->copy()->addWeeks(2);

            Borrowing::create([
                'member_id' => $member->id,
                'book_id' => $book->id,
                'borrowed_at' => $borrowedAt,
                'due_date' => $dueDate,
                'returned_at' => null,
            ]);

            // Update book availability
            $book->decrement('available_copies');
        }

        // Create some overdue borrowings
        for ($i = 0; $i < 3; $i++) {
            $member = $members->random();
            $book = $books->random();

            $borrowedAt = Carbon::now()->subDays(rand(20, 40));
            $dueDate = $borrowedAt->copy()->addWeeks(2);

            $borrowing = Borrowing::create([
                'member_id' => $member->id,
                'book_id' => $book->id,
                'borrowed_at' => $borrowedAt,
                'due_date' => $dueDate,
                'returned_at' => null,
            ]);

            // Calculate and set fine
            $borrowing->fine_amount = $borrowing->calculateFine();
            $borrowing->save();

            // Update book availability
            $book->decrement('available_copies');
        }

        // Create some returned borrowings
        for ($i = 0; $i < 10; $i++) {
            $member = $members->random();
            $book = $books->random();

            $borrowedAt = Carbon::now()->subDays(rand(30, 90));
            $dueDate = $borrowedAt->copy()->addWeeks(2);
            $returnedAt = $borrowedAt->copy()->addDays(rand(10, 25));

            $borrowing = Borrowing::create([
                'member_id' => $member->id,
                'book_id' => $book->id,
                'borrowed_at' => $borrowedAt,
                'due_date' => $dueDate,
                'returned_at' => $returnedAt,
            ]);

            // Calculate fine if returned late
            if ($returnedAt->gt($dueDate)) {
                $daysLate = $returnedAt->diffInDays($dueDate);
                $borrowing->fine_amount = $daysLate * 1.00;
                $borrowing->fine_paid = rand(0, 1) == 1; // Randomly set as paid or unpaid
                $borrowing->save();
            }
        }
    }
}



================================================
FILE: database/seeders/DatabaseSeeder.php
================================================
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    public function run(): void
    {
        $this->call([
            UserSeeder::class,
            BookSeeder::class,
            MemberSeeder::class,
            BorrowingSeeder::class,
        ]);
    }
}



================================================
FILE: database/seeders/MemberSeeder.php
================================================
<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Member extends Model
{
    use HasFactory;

    protected $fillable = [
        'name',
        'email',
        'phone',
        'address',
        'date_of_birth',
        'membership_date',
        'membership_status',
    ];

    protected $casts = [
        'date_of_birth' => 'date',
        'membership_date' => 'date',
    ];

    // Relationships
    public function borrowings()
    {
        return $this->hasMany(Borrowing::class);
    }

    public function activeBorrowings()
    {
        return $this->borrowings()->active();
    }

    public function overdueBooks()
    {
        return $this->borrowings()->overdue();
    }

    // Scopes
    public function scopeActive($query)
    {
        return $query->where('membership_status', 'active');
    }

    public function scopeInactive($query)
    {
        return $query->where('membership_status', 'inactive');
    }

    public function scopeSuspended($query)
    {
        return $query->where('membership_status', 'suspended');
    }

    // Helper methods
    public function isActive()
    {
        return $this->membership_status === 'active';
    }

    public function getAgeAttribute()
    {
        return $this->date_of_birth ? $this->date_of_birth->age : null;
    }

    public function getMembershipDurationAttribute()
    {
        return $this->membership_date->diffForHumans();
    }

    public function getTotalBorrowingsAttribute()
    {
        return $this->borrowings()->count();
    }

    public function getActiveBorrowingsCountAttribute()
    {
        return $this->activeBorrowings()->count();
    }

    public function getTotalFinesAttribute()
    {
        return $this->borrowings()->whereNotNull('fine_amount')->sum('fine_amount');
    }

    public function getUnpaidFinesAttribute()
    {
        return $this->borrowings()
            ->whereNotNull('fine_amount')
            ->where('fine_paid', false)
            ->sum('fine_amount');
    }
}



================================================
FILE: database/seeders/UserSeeder.php
================================================
<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\Hash;
use App\Models\User;

class  UserSeeder extends Seeder
{
    public function run(): void
    {
        User::create([
            'name' => 'Library Admin',
            'email' => 'admin@library.com',
            'email_verified_at' => now(),
            'password' => Hash::make('password'),
        ]);
    }
}



================================================
FILE: public/index.php
================================================
<?php

use Illuminate\Foundation\Application;
use Illuminate\Http\Request;

define('LARAVEL_START', microtime(true));

// Determine if the application is in maintenance mode...
if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
    require $maintenance;
}

// Register the Composer autoloader...
require __DIR__.'/../vendor/autoload.php';

// Bootstrap Laravel and handle the request...
/** @var Application $app */
$app = require_once __DIR__.'/../bootstrap/app.php';

$app->handleRequest(Request::capture());



================================================
FILE: public/robots.txt
================================================
User-agent: *
Disallow:



================================================
FILE: public/.htaccess
================================================
<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews -Indexes
    </IfModule>

    RewriteEngine On

    # Handle Authorization Header
    RewriteCond %{HTTP:Authorization} .
    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

    # Handle X-XSRF-Token Header
    RewriteCond %{HTTP:x-xsrf-token} .
    RewriteRule .* - [E=HTTP_X_XSRF_TOKEN:%{HTTP:X-XSRF-Token}]

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Send Requests To Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]
</IfModule>



================================================
FILE: resources/css/app.css
================================================
@import 'bootstrap/dist/css/bootstrap.min.css';
@import 'bootstrap-icons/font/bootstrap-icons.css';

/* Your custom styles here */
body {
    background-color: #f8f9fa;
    font-family: 'Figtree', sans-serif;
}

/* Add the custom styles from the layout above */
:root {
    --primary-gradient: linear-gradient(90deg, #4f46e5 0%, #06b6d4 100%);
    --success-gradient: linear-gradient(90deg, #22c55e 0%, #16a34a 100%);
    --info-gradient: linear-gradient(90deg, #0ea5e9 0%, #06b6d4 100%);
    --warning-gradient: linear-gradient(90deg, #eab308 0%, #f59e42 100%);
    --danger-gradient: linear-gradient(90deg, #ef4444 0%, #dc2626 100%);
    --shadow-medium: 0 4px 20px 0 rgba(0, 0, 0, 0.07);
    --shadow-strong: 0 8px 32px 0 rgba(0, 0, 0, 0.15);
}



================================================
FILE: resources/js/app.js
================================================
import './bootstrap';
import 'bootstrap/dist/js/bootstrap.bundle.min.js';



================================================
FILE: resources/js/bootstrap.js
================================================
import axios from 'axios';
window.axios = axios;

window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
axios.defaults.headers.common['X-CSRF-TOKEN'] = document.querySelector('meta[name="csrf-token"]').getAttribute('content');



================================================
FILE: resources/views/dashboard.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center">
                    <div class="dashboard-icon-wrapper me-3">
                        <i class="bi bi-speedometer2 text-primary"></i>
                    </div>
                    <span class="gradient-text">ផ្ទាំងគ្រប់គ្រង</span>
                </h2>
                <p class="text-muted mb-0 animated-welcome">
                    <i class="bi bi-hand-thumbs-up text-warning me-1"></i>
                    សូមស្វាគមន៍ <span class="text-primary fw-bold">{{ Auth::user()->name }}</span>!
                </p>
            </div>
            <div class="text-end time-display">
                <div class="date-time-card p-3 rounded shadow-sm bg-white">
                    <div class="text-muted small mb-1">
                        <i class="bi bi-calendar3 me-1 text-primary"></i>
                        {{ now()->locale('km')->translatedFormat('l, j F Y') }}
                    </div>
                    <div class="fw-bold text-primary" id="current-time">
                        <i class="bi bi-clock me-1"></i>{{ now()->format('H:i:s') }} UTC
                    </div>
                </div>
            </div>
        </div>
    </x-slot>

    <!-- Enhanced Statistics Cards -->
    <div class="row g-4 mb-4">
        <!-- Total Books -->
        <div class="col-xl-3 col-md-6">
            <div class="card stat-card stat-card-hover border-start-primary h-100 gradient-card">
                <div class="card-body position-relative">
                    <div class="floating-icon">
                        <i class="bi bi-book"></i>
                    </div>
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="stat-label">
                                <i class="bi bi-book-half me-1"></i>
                                សៀវភៅសរុប
                            </div>
                            <div class="stat-number">
                                {{ number_format($stats['total_books']) }}
                            </div>
                            <div class="stat-detail">
                                <i class="bi bi-check-circle text-success"></i>
                                {{ $stats['available_books'] }} ក្បាល​មាន
                            </div>
                        </div>
                    </div>
                    <div class="card-progress">
                        <div class="progress-bar bg-primary" style="width: 100%"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Active Members -->
        <div class="col-xl-3 col-md-6">
            <div class="card stat-card stat-card-hover border-start-success h-100 gradient-card">
                <div class="card-body position-relative">
                    <div class="floating-icon success">
                        <i class="bi bi-people"></i>
                    </div>
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="stat-label">
                                <i class="bi bi-person-check me-1"></i>
                                សមាជិកសកម្ម
                            </div>
                            <div class="stat-number">
                                {{ number_format($stats['total_members']) }}
                            </div>
                            <div class="stat-detail">
                                <i class="bi bi-shield-check text-info"></i>
                                បានចុះឈ្មោះ
                            </div>
                        </div>
                    </div>
                    <div class="card-progress">
                        <div class="progress-bar bg-success" style="width: 85%"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Currently Borrowed -->
        <div class="col-xl-3 col-md-6">
            <div class="card stat-card stat-card-hover border-start-info h-100 gradient-card">
                <div class="card-body position-relative">
                    <div class="floating-icon info">
                        <i class="bi bi-arrow-left-right"></i>
                    </div>
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="stat-label">
                                <i class="bi bi-bookmark me-1"></i>
                                កំពុងខ្ចី
                            </div>
                            <div class="stat-number">
                                {{ number_format($stats['total_borrowed']) }}
                            </div>
                            <div class="stat-detail">
                                <i class="bi bi-clock text-warning"></i>
                                ការខ្ចីសកម្ម
                            </div>
                        </div>
                    </div>
                    <div class="card-progress">
                        <div class="progress-bar bg-info" style="width: {{ $stats['total_books'] > 0 ? ($stats['total_borrowed'] / $stats['total_books']) * 100 : 0 }}%"></div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Overdue Books -->
        <div class="col-xl-3 col-md-6">
            <div class="card stat-card stat-card-hover border-start-{{ $stats['overdue_books'] > 0 ? 'danger' : 'warning' }} h-100 gradient-card">
                <div class="card-body position-relative">
                    <div class="floating-icon {{ $stats['overdue_books'] > 0 ? 'danger' : 'warning' }}">
                        <i class="bi bi-exclamation-triangle {{ $stats['overdue_books'] > 0 ? 'pulse-danger' : '' }}"></i>
                    </div>
                    <div class="row align-items-center">
                        <div class="col">
                            <div class="stat-label">
                                <i class="bi bi-alarm me-1"></i>
                                ហួសកំណត់
                            </div>
                            <div class="stat-number text-{{ $stats['overdue_books'] > 0 ? 'danger' : 'warning' }}">
                                {{ number_format($stats['overdue_books']) }}
                            </div>
                            <div class="stat-detail">
                                @if($stats['overdue_books'] > 0)
                                    <i class="bi bi-exclamation-triangle text-danger pulse"></i>
                                    ត្រូវការយកចិត្តទុកដាក់
                                @else
                                    <i class="bi bi-check-circle text-success"></i>
                                    ទាំងអស់ត្រឹមត្រូវ
                                @endif
                            </div>
                        </div>
                    </div>
                    <div class="card-progress">
                        <div class="progress-bar bg-{{ $stats['overdue_books'] > 0 ? 'danger' : 'success' }}" style="width: {{ $stats['overdue_books'] > 0 ? '100' : '0' }}%"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Secondary Stats -->
    <div class="row g-4 mb-4">
        <!-- Financial Overview -->
        <div class="col-md-8">
            <div class="card modern-card h-100">
                <div class="card-header bg-gradient-primary text-white">
                    <div class="d-flex align-items-center">
                        <div class="icon-wrapper me-3">
                            <i class="bi bi-currency-dollar"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">ទិដ្ឋភាពហិរញ្ញវត្ថុ</h6>
                            <small class="opacity-75">ព័ត៌មានលម្អិតអំពីការគ្រប់គ្រងហិរញ្ញវត្ថុ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-4 text-center">
                            <div class="financial-stat">
                                <div class="financial-amount text-danger">
                                    ${{ number_format($stats['total_fines'], 2) }}
                                </div>
                                <div class="financial-label">
                                    <i class="bi bi-exclamation-circle me-1"></i>
                                    ការពិន័យដែលនៅសល់
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 text-center border-start">
                            <div class="financial-stat">
                                <div class="financial-amount text-info">
                                    {{ $stats['total_books'] > 0 ? number_format(($stats['total_borrowed'] / $stats['total_books']) * 100, 1) : 0 }}%
                                </div>
                                <div class="financial-label">
                                    <i class="bi bi-graph-up me-1"></i>
                                    អត្រាប្រើប្រាស់
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 text-center border-start">
                            <div class="financial-stat">
                                <div class="financial-amount text-success">
                                    {{ $stats['total_books'] - $stats['total_borrowed'] }}
                                </div>
                                <div class="financial-label">
                                    <i class="bi bi-check-square me-1"></i>
                                    សៀវភៅនៅសល់
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-4">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span class="text-muted">ការប្រើប្រាស់បណ្ណាល័យ</span>
                            <span class="fw-bold">{{ $stats['total_books'] > 0 ? number_format(($stats['total_borrowed'] / $stats['total_books']) * 100, 1) : 0 }}%</span>
                        </div>
                        <div class="progress progress-modern">
                            <div class="progress-bar bg-gradient-info" role="progressbar"
                                 style="width: {{ $stats['total_books'] > 0 ? ($stats['total_borrowed'] / $stats['total_books']) * 100 : 0 }}%">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Enhanced Quick Actions -->
        <div class="col-md-4">
            <div class="card modern-card h-100">
                <div class="card-header bg-gradient-success text-white">
                    <div class="d-flex align-items-center">
                        <div class="icon-wrapper me-3">
                            <i class="bi bi-lightning-fill"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">សកម្មភាពរហ័ស</h6>
                            <small class="opacity-75">ធ្វើការងារបានលឿន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="quick-actions">
                        <a href="{{ route('borrowings.create') }}" class="quick-action-btn primary">
                            <div class="action-icon">
                                <i class="bi bi-plus-circle"></i>
                            </div>
                            <div class="action-text">
                                <div class="action-title">ការខ្ចីថ្មី</div>
                                <div class="action-subtitle">បង្កើតការខ្ចីថ្មី</div>
                            </div>
                        </a>

                        <a href="{{ route('books.create') }}" class="quick-action-btn success">
                            <div class="action-icon">
                                <i class="bi bi-book-half"></i>
                            </div>
                            <div class="action-text">
                                <div class="action-title">បន្ថែមសៀវភៅ</div>
                                <div class="action-subtitle">សៀវភៅថ្មី</div>
                            </div>
                        </a>

                        <a href="{{ route('members.create') }}" class="quick-action-btn info">
                            <div class="action-icon">
                                <i class="bi bi-person-plus"></i>
                            </div>
                            <div class="action-text">
                                <div class="action-title">បន្ថែមសមាជិក</div>
                                <div class="action-subtitle">សមាជិកថ្មី</div>
                            </div>
                        </a>

                        @if($stats['overdue_books'] > 0)
                            <a href="{{ route('borrowings.index', ['status' => 'overdue']) }}" class="quick-action-btn danger pulse-btn">
                                <div class="action-icon">
                                    <i class="bi bi-exclamation-triangle"></i>
                                </div>
                                <div class="action-text">
                                    <div class="action-title">មើលហួសកំណត់</div>
                                    <div class="action-subtitle">{{ $stats['overdue_books'] }} ការជូនដំណឹង</div>
                                </div>
                            </a>
                        @else
                            <a href="{{ route('borrowings.index') }}" class="quick-action-btn warning">
                                <div class="action-icon">
                                    <i class="bi bi-list-check"></i>
                                </div>
                                <div class="action-text">
                                    <div class="action-title">មើលការខ្ចីទាំងអស់</div>
                                    <div class="action-subtitle">គ្រប់គ្រងការខ្ចី</div>
                                </div>
                            </a>
                        @endif
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Main Content -->
    <div class="row g-4">
        <!-- Recent Borrowings -->
        <div class="col-lg-8">
            <div class="card modern-card">
                <div class="card-header bg-white border-bottom-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <div class="header-icon me-3">
                                <i class="bi bi-clock-history"></i>
                            </div>
                            <div>
                                <h6 class="card-title mb-0">ការខ្ចីថ្មីៗ</h6>
                                <small class="text-muted">គ្រប់គ្រងការខ្ចីបច្ចុប្បន្ន</small>
                            </div>
                        </div>
                        <a href="{{ route('borrowings.index') }}" class="btn btn-outline-primary btn-sm modern-btn">
                            មើលទាំងអស់ <i class="bi bi-arrow-right ms-1"></i>
                        </a>
                    </div>
                </div>
                <div class="card-body p-0">
                    @if($recent_borrowings->count() > 0)
                        <div class="table-responsive">
                            <table class="table table-hover modern-table mb-0">
                                <thead>
                                <tr>
                                    <th class="border-0">សមាជិក</th>
                                    <th class="border-0">សៀវភៅ</th>
                                    <th class="border-0">ថ្ងៃខ្ចី</th>
                                    <th class="border-0">ថ្ងៃត្រូវត្រឡប់</th>
                                    <th class="border-0">ស្ថានភាព</th>
                                    <th class="border-0">សកម្មភាព</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach($recent_borrowings->take(8) as $borrowing)
                                    <tr class="table-row-hover">
                                        <td class="border-0">
                                            <div class="member-info">
                                                <div class="member-avatar">
                                                    {{ strtoupper(substr($borrowing->member->name, 0, 2)) }}
                                                </div>
                                                <div class="member-details">
                                                    <div class="member-name">{{ $borrowing->member->name }}</div>
                                                    <div class="member-email">{{ $borrowing->member->email }}</div>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="border-0">
                                            <div class="book-info">
                                                <div class="book-title">{{ Str::limit($borrowing->book->title, 30) }}</div>
                                                <div class="book-author">{{ $borrowing->book->author }}</div>
                                            </div>
                                        </td>
                                        <td class="border-0">
                                            <div class="date-info">{{ $borrowing->borrowed_at->format('d/m/Y') }}</div>
                                        </td>
                                        <td class="border-0">
                                            <div class="date-info {{ $borrowing->isOverdue() ? 'text-danger fw-bold' : '' }}">
                                                {{ $borrowing->due_date->format('d/m/Y') }}
                                                @if($borrowing->isOverdue())
                                                    <i class="bi bi-exclamation-triangle text-danger ms-1"></i>
                                                @endif
                                            </div>
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->returned_at)
                                                <span class="status-badge success">
                                                        <i class="bi bi-check-circle"></i> បានត្រឡប់
                                                    </span>
                                            @elseif($borrowing->isOverdue())
                                                <span class="status-badge danger pulse">
                                                        <i class="bi bi-exclamation-triangle"></i>
                                                        ហួសកំណត់ {{ $borrowing->days_overdue }}ថ្ងៃ
                                                    </span>
                                            @else
                                                <span class="status-badge primary">
                                                        <i class="bi bi-clock"></i> កំពុងខ្ចី
                                                    </span>
                                            @endif
                                        </td>
                                        <td class="border-0">
                                            <div class="action-buttons">
                                                <a href="{{ route('borrowings.show', $borrowing) }}"
                                                   class="btn btn-sm btn-outline-info" data-bs-toggle="tooltip" title="មើលលម្អិត">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                @if(!$borrowing->returned_at)
                                                    <form action="{{ route('borrowings.return', $borrowing) }}" method="POST" class="d-inline">
                                                        @csrf
                                                        @method('PATCH')
                                                        <button type="submit" class="btn btn-sm btn-outline-success"
                                                                data-bs-toggle="tooltip" title="បានត្រឡប់"
                                                                onclick="return confirm('បញ្ជាក់ការត្រឡប់សៀវភៅនេះ?')">
                                                            <i class="bi bi-check"></i>
                                                        </button>
                                                    </form>
                                                @endif
                                            </div>
                                        </td>
                                    </tr>
                                @endforeach
                                </tbody>
                            </table>
                        </div>
                    @else
                        <div class="empty-state">
                            <div class="empty-icon">
                                <i class="bi bi-inbox"></i>
                            </div>
                            <h5 class="empty-title">មិនមានការខ្ចីថ្មីៗ</h5>
                            <p class="empty-description">ចាប់ផ្តើមដោយបង្កើតការខ្ចីដំបូងរបស់អ្នក</p>
                            <a href="{{ route('borrowings.create') }}" class="btn btn-primary modern-btn">
                                <i class="bi bi-plus me-1"></i> បង្កើតការខ្ចី
                            </a>
                        </div>
                    @endif
                </div>
            </div>
        </div>

        <!-- Enhanced Sidebar -->
        <div class="col-lg-4">
            <!-- Overdue Alert -->
            @if($stats['overdue_books'] > 0)
                <div class="card alert-card danger mb-4">
                    <div class="card-header alert-header">
                        <div class="d-flex align-items-center">
                            <div class="alert-icon pulse-danger">
                                <i class="bi bi-exclamation-triangle"></i>
                            </div>
                            <div>
                                <h6 class="card-title mb-0">ការជូនដំណឹងបន្ទាន់</h6>
                                <small class="opacity-75">ត្រូវការយកចិត្តទុកដាក់ភ្លាម</small>
                            </div>
                        </div>
                    </div>
                    <div class="card-body text-center">
                        <div class="alert-number">{{ $stats['overdue_books'] }}</div>
                        <p class="alert-text">សៀវភៅហួសកំណត់ហើយត្រូវការយកចិត្តទុកដាក់ភ្លាម</p>
                        <a href="{{ route('borrowings.index', ['status' => 'overdue']) }}"
                           class="btn btn-danger modern-btn pulse-btn">
                            <i class="bi bi-eye me-1"></i> មើលសៀវភៅហួសកំណត់
                        </a>
                    </div>
                </div>
            @endif

            <!-- Popular Books -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-white">
                    <div class="d-flex align-items-center">
                        <div class="header-icon me-3">
                            <i class="bi bi-star-fill"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">សៀវភៅពេញនិយម</h6>
                            <small class="text-muted">ដែលត្រូវបានខ្ចីច្រើនបំផុត</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    @php
                        $popularBooks = \App\Models\Book::withCount('borrowings')
                            ->orderBy('borrowings_count', 'desc')
                            ->take(5)
                            ->get();
                    @endphp

                    @if($popularBooks->count() > 0)
                        @foreach($popularBooks as $index => $book)
                            <div class="popular-book-item">
                                <div class="book-rank rank-{{ $index + 1 }}">
                                    {{ $index + 1 }}
                                </div>
                                <div class="book-details">
                                    <div class="book-title">{{ Str::limit($book->title, 25) }}</div>
                                    <div class="book-author">{{ $book->author }}</div>
                                </div>
                                <div class="book-count">
                                    <span class="count-badge">{{ $book->borrowings_count }}</span>
                                </div>
                            </div>
                        @endforeach
                    @else
                        <div class="empty-popular">
                            <i class="bi bi-book display-4 text-muted"></i>
                            <p class="mt-2 mb-0 text-muted">មិនទាន់មានទិន្នន័យការខ្ចី</p>
                        </div>
                    @endif
                </div>
            </div>

            <!-- Enhanced System Status -->
            <div class="card modern-card">
                <div class="card-header bg-white">
                    <div class="d-flex align-items-center">
                        <div class="header-icon me-3">
                            <i class="bi bi-gear-fill"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0">ស្ថានភាពប្រព័ន្ធ</h6>
                            <small class="text-muted">ព័ត៌មានប្រព័ន្ធ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="system-status">
                        <div class="status-item">
                            <div class="status-label">
                                <i class="bi bi-database me-2"></i>ស្ថានភាពទិន្នន័យ
                            </div>
                            <div class="status-value">
                                <span class="status-indicator online"></span>
                                ដំណើរការ
                            </div>
                        </div>

                        <div class="status-item">
                            <div class="status-label">
                                <i class="bi bi-person-circle me-2"></i>អ្នកប្រើបច្ចុប្បន្ន
                            </div>
                            <div class="status-value">
                                <span class="user-badge">{{ Auth::user()->name }}</span>
                            </div>
                        </div>

                        <div class="status-item">
                            <div class="status-label">
                                <i class="bi bi-shield-check me-2"></i>សុវត្ថិភាព
                            </div>
                            <div class="status-value">
                                <span class="status-indicator secure"></span>
                                បានបំពាក់
                            </div>
                        </div>

                        <div class="status-item">
                            <div class="status-label">
                                <i class="bi bi-clock me-2"></i>ពេលវេលាម៉ាស៊ីនមេ (UTC)
                            </div>
                            <div class="status-value">
                                <span class="time-display" id="server-time">{{ now()->format('H:i:s') }}</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles -->
    <style>
        /* Enhanced color palette */
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-gradient: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            --info-gradient: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            --warning-gradient: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            --danger-gradient: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            --shadow-soft: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            --shadow-medium: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            --shadow-strong: 0 1rem 3rem rgba(0, 0, 0, 0.175);
        }

        /* Animated welcome text */
        .animated-welcome {
            animation: fadeInUp 0.8s ease-out;
        }

        .gradient-text {
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Enhanced dashboard icon */
        .dashboard-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: var(--primary-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            box-shadow: var(--shadow-medium);
        }

        /* Enhanced time display */
        .time-display .date-time-card {
            background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
            border: 1px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .time-display .date-time-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        /* Enhanced stat cards */
        .stat-card {
            border: none;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
        }

        .stat-card-hover:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: var(--shadow-strong);
        }

        .gradient-card {
            background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
        }

        .floating-icon {
            position: absolute;
            top: -10px;
            right: -10px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: var(--primary-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            opacity: 0.1;
            transition: all 0.3s ease;
        }

        .floating-icon.success {
            background: var(--success-gradient);
        }

        .floating-icon.info {
            background: var(--info-gradient);
        }

        .floating-icon.warning {
            background: var(--warning-gradient);
        }

        .floating-icon.danger {
            background: var(--danger-gradient);
        }

        .stat-card:hover .floating-icon {
            opacity: 0.3;
            transform: rotate(360deg) scale(1.1);
        }

        .stat-label {
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            color: #6c757d;
            margin-bottom: 0.5rem;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #2d3436;
            margin-bottom: 0.5rem;
        }

        .stat-detail {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .card-progress {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: rgba(0,0,0,0.1);
        }

        .card-progress .progress-bar {
            height: 100%;
            transition: width 1s ease-in-out;
        }

        /* Enhanced modern cards */
        .modern-card {
            border: none;
            border-radius: 15px;
            box-shadow: var(--shadow-soft);
            transition: all 0.3s ease;
        }

        .modern-card:hover {
            box-shadow: var(--shadow-medium);
        }

        .bg-gradient-primary {
            background: var(--primary-gradient) !important;
        }

        .bg-gradient-success {
            background: var(--success-gradient) !important;
        }

        .icon-wrapper {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Financial stats */
        .financial-stat {
            padding: 1rem 0;
        }

        .financial-amount {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
        }

        .financial-label {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .progress-modern {
            height: 8px;
            border-radius: 10px;
            background: #e9ecef;
        }

        .bg-gradient-info {
            background: var(--info-gradient) !important;
        }

        /* Enhanced quick actions */
        .quick-actions {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .quick-action-btn {
            display: flex;
            align-items: center;
            padding: 1rem;
            border: 2px solid transparent;
            border-radius: 12px;
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .quick-action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.5s ease;
        }

        .quick-action-btn:hover::before {
            left: 100%;
        }

        .quick-action-btn.primary {
            background: var(--primary-gradient);
            color: white;
        }

        .quick-action-btn.success {
            background: var(--success-gradient);
            color: white;
        }

        .quick-action-btn.info {
            background: var(--info-gradient);
            color: white;
        }

        .quick-action-btn.danger {
            background: var(--danger-gradient);
            color: white;
        }

        .quick-action-btn:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-medium);
            text-decoration: none;
            color: white;
        }

        .action-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1.2rem;
        }

        .action-title {
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .action-subtitle {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        /* Enhanced table */
        .modern-table {
            font-size: 0.9rem;
        }

        .modern-table thead th {
            background: #f8f9fa;
            font-weight: 600;
            color: #495057;
            border: none;
            padding: 1rem 0.75rem;
        }

        .table-row-hover:hover {
            background: rgba(102, 126, 234, 0.05);
            transform: scale(1.01);
            transition: all 0.2s ease;
        }

        .member-info {
            display: flex;
            align-items: center;
        }

        .member-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: var(--primary-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            margin-right: 0.75rem;
            font-size: 0.85rem;
        }

        .member-name {
            font-weight: 600;
            color: #2d3436;
        }

        .member-email {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .book-info .book-title {
            font-weight: 600;
            color: #2d3436;
        }

        .book-info .book-author {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .date-info {
            font-weight: 500;
            color: #495057;
        }

        .status-badge {
            padding: 0.4rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
        }

        .status-badge.success {
            background: #d4edda;
            color: #155724;
        }

        .status-badge.primary {
            background: #cce5ff;
            color: #004085;
        }

        .status-badge.danger {
            background: #f8d7da;
            color: #721c24;
        }

        .action-buttons {
            display: flex;
            gap: 0.25rem;
        }

        /* Empty state */
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
        }

        .empty-icon {
            font-size: 4rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

        .empty-title {
            color: #6c757d;
            margin-bottom: 0.5rem;
        }

        .empty-description {
            color: #adb5bd;
            margin-bottom: 1.5rem;
        }

        /* Alert card */
        .alert-card.danger .card-header {
            background: var(--danger-gradient);
            color: white;
        }

        .alert-header {
            border: none;
        }

        .alert-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1.2rem;
        }

        .alert-number {
            font-size: 3rem;
            font-weight: 700;
            color: #dc3545;
            margin-bottom: 1rem;
        }

        .alert-text {
            color: #6c757d;
            margin-bottom: 1.5rem;
        }

        /* Popular books */
        .popular-book-item {
            display: flex;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid #f1f3f4;
        }

        .popular-book-item:last-child {
            border-bottom: none;
        }

        .book-rank {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 700;
            margin-right: 1rem;
            font-size: 0.85rem;
        }

        .book-rank.rank-1 {
            background: #ffd700;
            color: #856404;
        }

        .book-rank.rank-2 {
            background: #c0c0c0;
            color: #495057;
        }

        .book-rank.rank-3 {
            background: #cd7f32;
            color: white;
        }

        .book-rank:not(.rank-1):not(.rank-2):not(.rank-3) {
            background: #e9ecef;
            color: #6c757d;
        }

        .count-badge {
            background: #007bff;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
            font-weight: 600;
        }

        /* System status */
        .system-status {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .status-item {
            display: flex;
            justify-content: between;
            align-items: center;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .status-label {
            font-size: 0.85rem;
            color: #495057;
            flex: 1;
        }

        .status-value {
            font-size: 0.85rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
        }

        .status-indicator.online {
            background: #28a745;
        }

        .status-indicator.secure {
            background: #17a2b8;
        }

        .user-badge {
            background: #007bff;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
        }

        .time-display {
            font-family: monospace;
            color: #007bff;
            font-weight: 600;
        }

        /* Header icons */
        .header-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }

        /* Modern buttons */
        .modern-btn {
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .modern-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-medium);
        }

        /* Animations */
        .pulse {
            animation: pulse 2s infinite;
        }

        .pulse-danger {
            animation: pulseDanger 1.5s infinite;
        }

        .pulse-btn {
            animation: pulseButton 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }

        @keyframes pulseDanger {
            0% {
                opacity: 1;
                transform: scale(1);
            }
            50% {
                opacity: 0.7;
                transform: scale(1.05);
            }
            100% {
                opacity: 1;
                transform: scale(1);
            }
        }

        @keyframes pulseButton {
            0% {
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.7);
            }
            70% {
                box-shadow: 0 0 0 10px rgba(220, 53, 69, 0);
            }
            100% {
                box-shadow: 0 0 0 0 rgba(220, 53, 69, 0);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .stat-number {
                font-size: 1.5rem;
            }

            .financial-amount {
                font-size: 1.3rem;
            }

            .alert-number {
                font-size: 2rem;
            }

            .quick-action-btn {
                padding: 0.75rem;
            }

            .action-icon {
                width: 35px;
                height: 35px;
            }
        }
    </style>

    <!-- Enhanced JavaScript -->
    <script>
        // Enhanced time update function
        function updateTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('en-US', {
                hour12: false,
                timeZone: 'UTC'
            });

            // Update current time in header
            const currentTimeElement = document.getElementById('current-time');
            if (currentTimeElement) {
                currentTimeElement.innerHTML = '<i class="bi bi-clock me-1"></i>' + timeString + ' UTC';
            }

            // Update server time in system status
            const serverTimeElement = document.getElementById('server-time');
            if (serverTimeElement) {
                serverTimeElement.textContent = timeString;
            }
        }

        // Smooth scroll for quick actions
        document.querySelectorAll('.quick-action-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                this.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    this.style.transform = '';
                }, 150);
            });
        });

        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Animate stat numbers on load
        function animateValue(element, start, end, duration) {
            let startTimestamp = null;
            const step = (timestamp) => {
                if (!startTimestamp) startTimestamp = timestamp;
                const progress = Math.min((timestamp - startTimestamp) / duration, 1);
                const value = Math.floor(progress * (end - start) + start);
                element.textContent = value.toLocaleString();
                if (progress < 1) {
                    window.requestAnimationFrame(step);
                }
            };
            window.requestAnimationFrame(step);
        }

        // Animate stats on page load
        window.addEventListener('load', function() {
            const statNumbers = document.querySelectorAll('.stat-number');
            statNumbers.forEach(stat => {
                const finalValue = parseInt(stat.textContent.replace(/,/g, ''));
                stat.textContent = '0';
                animateValue(stat, 0, finalValue, 1000);
            });
        });

        // Update time every second
        setInterval(updateTime, 1000);
        updateTime();
    </script>
</x-app-layout>



================================================
FILE: resources/views/welcome.blade.php
================================================
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">

        <title>Laravel</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=instrument-sans:400,500,600" rel="stylesheet" />

        <!-- Styles / Scripts -->
        @if (file_exists(public_path('build/manifest.json')) || file_exists(public_path('hot')))
            @vite(['resources/css/app.css', 'resources/js/app.js'])
        @else
            <style>
                /*! tailwindcss v4.0.7 | MIT License | https://tailwindcss.com */@layer theme{:root,:host{--font-sans:'Instrument Sans',ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";--font-serif:ui-serif,Georgia,Cambria,"Times New Roman",Times,serif;--font-mono:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;--color-red-50:oklch(.971 .013 17.38);--color-red-100:oklch(.936 .032 17.717);--color-red-200:oklch(.885 .062 18.334);--color-red-300:oklch(.808 .114 19.571);--color-red-400:oklch(.704 .191 22.216);--color-red-500:oklch(.637 .237 25.331);--color-red-600:oklch(.577 .245 27.325);--color-red-700:oklch(.505 .213 27.518);--color-red-800:oklch(.444 .177 26.899);--color-red-900:oklch(.396 .141 25.723);--color-red-950:oklch(.258 .092 26.042);--color-orange-50:oklch(.98 .016 73.684);--color-orange-100:oklch(.954 .038 75.164);--color-orange-200:oklch(.901 .076 70.697);--color-orange-300:oklch(.837 .128 66.29);--color-orange-400:oklch(.75 .183 55.934);--color-orange-500:oklch(.705 .213 47.604);--color-orange-600:oklch(.646 .222 41.116);--color-orange-700:oklch(.553 .195 38.402);--color-orange-800:oklch(.47 .157 37.304);--color-orange-900:oklch(.408 .123 38.172);--color-orange-950:oklch(.266 .079 36.259);--color-amber-50:oklch(.987 .022 95.277);--color-amber-100:oklch(.962 .059 95.617);--color-amber-200:oklch(.924 .12 95.746);--color-amber-300:oklch(.879 .169 91.605);--color-amber-400:oklch(.828 .189 84.429);--color-amber-500:oklch(.769 .188 70.08);--color-amber-600:oklch(.666 .179 58.318);--color-amber-700:oklch(.555 .163 48.998);--color-amber-800:oklch(.473 .137 46.201);--color-amber-900:oklch(.414 .112 45.904);--color-amber-950:oklch(.279 .077 45.635);--color-yellow-50:oklch(.987 .026 102.212);--color-yellow-100:oklch(.973 .071 103.193);--color-yellow-200:oklch(.945 .129 101.54);--color-yellow-300:oklch(.905 .182 98.111);--color-yellow-400:oklch(.852 .199 91.936);--color-yellow-500:oklch(.795 .184 86.047);--color-yellow-600:oklch(.681 .162 75.834);--color-yellow-700:oklch(.554 .135 66.442);--color-yellow-800:oklch(.476 .114 61.907);--color-yellow-900:oklch(.421 .095 57.708);--color-yellow-950:oklch(.286 .066 53.813);--color-lime-50:oklch(.986 .031 120.757);--color-lime-100:oklch(.967 .067 122.328);--color-lime-200:oklch(.938 .127 124.321);--color-lime-300:oklch(.897 .196 126.665);--color-lime-400:oklch(.841 .238 128.85);--color-lime-500:oklch(.768 .233 130.85);--color-lime-600:oklch(.648 .2 131.684);--color-lime-700:oklch(.532 .157 131.589);--color-lime-800:oklch(.453 .124 130.933);--color-lime-900:oklch(.405 .101 131.063);--color-lime-950:oklch(.274 .072 132.109);--color-green-50:oklch(.982 .018 155.826);--color-green-100:oklch(.962 .044 156.743);--color-green-200:oklch(.925 .084 155.995);--color-green-300:oklch(.871 .15 154.449);--color-green-400:oklch(.792 .209 151.711);--color-green-500:oklch(.723 .219 149.579);--color-green-600:oklch(.627 .194 149.214);--color-green-700:oklch(.527 .154 150.069);--color-green-800:oklch(.448 .119 151.328);--color-green-900:oklch(.393 .095 152.535);--color-green-950:oklch(.266 .065 152.934);--color-emerald-50:oklch(.979 .021 166.113);--color-emerald-100:oklch(.95 .052 163.051);--color-emerald-200:oklch(.905 .093 164.15);--color-emerald-300:oklch(.845 .143 164.978);--color-emerald-400:oklch(.765 .177 163.223);--color-emerald-500:oklch(.696 .17 162.48);--color-emerald-600:oklch(.596 .145 163.225);--color-emerald-700:oklch(.508 .118 165.612);--color-emerald-800:oklch(.432 .095 166.913);--color-emerald-900:oklch(.378 .077 168.94);--color-emerald-950:oklch(.262 .051 172.552);--color-teal-50:oklch(.984 .014 180.72);--color-teal-100:oklch(.953 .051 180.801);--color-teal-200:oklch(.91 .096 180.426);--color-teal-300:oklch(.855 .138 181.071);--color-teal-400:oklch(.777 .152 181.912);--color-teal-500:oklch(.704 .14 182.503);--color-teal-600:oklch(.6 .118 184.704);--color-teal-700:oklch(.511 .096 186.391);--color-teal-800:oklch(.437 .078 188.216);--color-teal-900:oklch(.386 .063 188.416);--color-teal-950:oklch(.277 .046 192.524);--color-cyan-50:oklch(.984 .019 200.873);--color-cyan-100:oklch(.956 .045 203.388);--color-cyan-200:oklch(.917 .08 205.041);--color-cyan-300:oklch(.865 .127 207.078);--color-cyan-400:oklch(.789 .154 211.53);--color-cyan-500:oklch(.715 .143 215.221);--color-cyan-600:oklch(.609 .126 221.723);--color-cyan-700:oklch(.52 .105 223.128);--color-cyan-800:oklch(.45 .085 224.283);--color-cyan-900:oklch(.398 .07 227.392);--color-cyan-950:oklch(.302 .056 229.695);--color-sky-50:oklch(.977 .013 236.62);--color-sky-100:oklch(.951 .026 236.824);--color-sky-200:oklch(.901 .058 230.902);--color-sky-300:oklch(.828 .111 230.318);--color-sky-400:oklch(.746 .16 232.661);--color-sky-500:oklch(.685 .169 237.323);--color-sky-600:oklch(.588 .158 241.966);--color-sky-700:oklch(.5 .134 242.749);--color-sky-800:oklch(.443 .11 240.79);--color-sky-900:oklch(.391 .09 240.876);--color-sky-950:oklch(.293 .066 243.157);--color-blue-50:oklch(.97 .014 254.604);--color-blue-100:oklch(.932 .032 255.585);--color-blue-200:oklch(.882 .059 254.128);--color-blue-300:oklch(.809 .105 251.813);--color-blue-400:oklch(.707 .165 254.624);--color-blue-500:oklch(.623 .214 259.815);--color-blue-600:oklch(.546 .245 262.881);--color-blue-700:oklch(.488 .243 264.376);--color-blue-800:oklch(.424 .199 265.638);--color-blue-900:oklch(.379 .146 265.522);--color-blue-950:oklch(.282 .091 267.935);--color-indigo-50:oklch(.962 .018 272.314);--color-indigo-100:oklch(.93 .034 272.788);--color-indigo-200:oklch(.87 .065 274.039);--color-indigo-300:oklch(.785 .115 274.713);--color-indigo-400:oklch(.673 .182 276.935);--color-indigo-500:oklch(.585 .233 277.117);--color-indigo-600:oklch(.511 .262 276.966);--color-indigo-700:oklch(.457 .24 277.023);--color-indigo-800:oklch(.398 .195 277.366);--color-indigo-900:oklch(.359 .144 278.697);--color-indigo-950:oklch(.257 .09 281.288);--color-violet-50:oklch(.969 .016 293.756);--color-violet-100:oklch(.943 .029 294.588);--color-violet-200:oklch(.894 .057 293.283);--color-violet-300:oklch(.811 .111 293.571);--color-violet-400:oklch(.702 .183 293.541);--color-violet-500:oklch(.606 .25 292.717);--color-violet-600:oklch(.541 .281 293.009);--color-violet-700:oklch(.491 .27 292.581);--color-violet-800:oklch(.432 .232 292.759);--color-violet-900:oklch(.38 .189 293.745);--color-violet-950:oklch(.283 .141 291.089);--color-purple-50:oklch(.977 .014 308.299);--color-purple-100:oklch(.946 .033 307.174);--color-purple-200:oklch(.902 .063 306.703);--color-purple-300:oklch(.827 .119 306.383);--color-purple-400:oklch(.714 .203 305.504);--color-purple-500:oklch(.627 .265 303.9);--color-purple-600:oklch(.558 .288 302.321);--color-purple-700:oklch(.496 .265 301.924);--color-purple-800:oklch(.438 .218 303.724);--color-purple-900:oklch(.381 .176 304.987);--color-purple-950:oklch(.291 .149 302.717);--color-fuchsia-50:oklch(.977 .017 320.058);--color-fuchsia-100:oklch(.952 .037 318.852);--color-fuchsia-200:oklch(.903 .076 319.62);--color-fuchsia-300:oklch(.833 .145 321.434);--color-fuchsia-400:oklch(.74 .238 322.16);--color-fuchsia-500:oklch(.667 .295 322.15);--color-fuchsia-600:oklch(.591 .293 322.896);--color-fuchsia-700:oklch(.518 .253 323.949);--color-fuchsia-800:oklch(.452 .211 324.591);--color-fuchsia-900:oklch(.401 .17 325.612);--color-fuchsia-950:oklch(.293 .136 325.661);--color-pink-50:oklch(.971 .014 343.198);--color-pink-100:oklch(.948 .028 342.258);--color-pink-200:oklch(.899 .061 343.231);--color-pink-300:oklch(.823 .12 346.018);--color-pink-400:oklch(.718 .202 349.761);--color-pink-500:oklch(.656 .241 354.308);--color-pink-600:oklch(.592 .249 .584);--color-pink-700:oklch(.525 .223 3.958);--color-pink-800:oklch(.459 .187 3.815);--color-pink-900:oklch(.408 .153 2.432);--color-pink-950:oklch(.284 .109 3.907);--color-rose-50:oklch(.969 .015 12.422);--color-rose-100:oklch(.941 .03 12.58);--color-rose-200:oklch(.892 .058 10.001);--color-rose-300:oklch(.81 .117 11.638);--color-rose-400:oklch(.712 .194 13.428);--color-rose-500:oklch(.645 .246 16.439);--color-rose-600:oklch(.586 .253 17.585);--color-rose-700:oklch(.514 .222 16.935);--color-rose-800:oklch(.455 .188 13.697);--color-rose-900:oklch(.41 .159 10.272);--color-rose-950:oklch(.271 .105 12.094);--color-slate-50:oklch(.984 .003 247.858);--color-slate-100:oklch(.968 .007 247.896);--color-slate-200:oklch(.929 .013 255.508);--color-slate-300:oklch(.869 .022 252.894);--color-slate-400:oklch(.704 .04 256.788);--color-slate-500:oklch(.554 .046 257.417);--color-slate-600:oklch(.446 .043 257.281);--color-slate-700:oklch(.372 .044 257.287);--color-slate-800:oklch(.279 .041 260.031);--color-slate-900:oklch(.208 .042 265.755);--color-slate-950:oklch(.129 .042 264.695);--color-gray-50:oklch(.985 .002 247.839);--color-gray-100:oklch(.967 .003 264.542);--color-gray-200:oklch(.928 .006 264.531);--color-gray-300:oklch(.872 .01 258.338);--color-gray-400:oklch(.707 .022 261.325);--color-gray-500:oklch(.551 .027 264.364);--color-gray-600:oklch(.446 .03 256.802);--color-gray-700:oklch(.373 .034 259.733);--color-gray-800:oklch(.278 .033 256.848);--color-gray-900:oklch(.21 .034 264.665);--color-gray-950:oklch(.13 .028 261.692);--color-zinc-50:oklch(.985 0 0);--color-zinc-100:oklch(.967 .001 286.375);--color-zinc-200:oklch(.92 .004 286.32);--color-zinc-300:oklch(.871 .006 286.286);--color-zinc-400:oklch(.705 .015 286.067);--color-zinc-500:oklch(.552 .016 285.938);--color-zinc-600:oklch(.442 .017 285.786);--color-zinc-700:oklch(.37 .013 285.805);--color-zinc-800:oklch(.274 .006 286.033);--color-zinc-900:oklch(.21 .006 285.885);--color-zinc-950:oklch(.141 .005 285.823);--color-neutral-50:oklch(.985 0 0);--color-neutral-100:oklch(.97 0 0);--color-neutral-200:oklch(.922 0 0);--color-neutral-300:oklch(.87 0 0);--color-neutral-400:oklch(.708 0 0);--color-neutral-500:oklch(.556 0 0);--color-neutral-600:oklch(.439 0 0);--color-neutral-700:oklch(.371 0 0);--color-neutral-800:oklch(.269 0 0);--color-neutral-900:oklch(.205 0 0);--color-neutral-950:oklch(.145 0 0);--color-stone-50:oklch(.985 .001 106.423);--color-stone-100:oklch(.97 .001 106.424);--color-stone-200:oklch(.923 .003 48.717);--color-stone-300:oklch(.869 .005 56.366);--color-stone-400:oklch(.709 .01 56.259);--color-stone-500:oklch(.553 .013 58.071);--color-stone-600:oklch(.444 .011 73.639);--color-stone-700:oklch(.374 .01 67.558);--color-stone-800:oklch(.268 .007 34.298);--color-stone-900:oklch(.216 .006 56.043);--color-stone-950:oklch(.147 .004 49.25);--color-black:#000;--color-white:#fff;--spacing:.25rem;--breakpoint-sm:40rem;--breakpoint-md:48rem;--breakpoint-lg:64rem;--breakpoint-xl:80rem;--breakpoint-2xl:96rem;--container-3xs:16rem;--container-2xs:18rem;--container-xs:20rem;--container-sm:24rem;--container-md:28rem;--container-lg:32rem;--container-xl:36rem;--container-2xl:42rem;--container-3xl:48rem;--container-4xl:56rem;--container-5xl:64rem;--container-6xl:72rem;--container-7xl:80rem;--text-xs:.75rem;--text-xs--line-height:calc(1/.75);--text-sm:.875rem;--text-sm--line-height:calc(1.25/.875);--text-base:1rem;--text-base--line-height: 1.5 ;--text-lg:1.125rem;--text-lg--line-height:calc(1.75/1.125);--text-xl:1.25rem;--text-xl--line-height:calc(1.75/1.25);--text-2xl:1.5rem;--text-2xl--line-height:calc(2/1.5);--text-3xl:1.875rem;--text-3xl--line-height: 1.2 ;--text-4xl:2.25rem;--text-4xl--line-height:calc(2.5/2.25);--text-5xl:3rem;--text-5xl--line-height:1;--text-6xl:3.75rem;--text-6xl--line-height:1;--text-7xl:4.5rem;--text-7xl--line-height:1;--text-8xl:6rem;--text-8xl--line-height:1;--text-9xl:8rem;--text-9xl--line-height:1;--font-weight-thin:100;--font-weight-extralight:200;--font-weight-light:300;--font-weight-normal:400;--font-weight-medium:500;--font-weight-semibold:600;--font-weight-bold:700;--font-weight-extrabold:800;--font-weight-black:900;--tracking-tighter:-.05em;--tracking-tight:-.025em;--tracking-normal:0em;--tracking-wide:.025em;--tracking-wider:.05em;--tracking-widest:.1em;--leading-tight:1.25;--leading-snug:1.375;--leading-normal:1.5;--leading-relaxed:1.625;--leading-loose:2;--radius-xs:.125rem;--radius-sm:.25rem;--radius-md:.375rem;--radius-lg:.5rem;--radius-xl:.75rem;--radius-2xl:1rem;--radius-3xl:1.5rem;--radius-4xl:2rem;--shadow-2xs:0 1px #0000000d;--shadow-xs:0 1px 2px 0 #0000000d;--shadow-sm:0 1px 3px 0 #0000001a,0 1px 2px -1px #0000001a;--shadow-md:0 4px 6px -1px #0000001a,0 2px 4px -2px #0000001a;--shadow-lg:0 10px 15px -3px #0000001a,0 4px 6px -4px #0000001a;--shadow-xl:0 20px 25px -5px #0000001a,0 8px 10px -6px #0000001a;--shadow-2xl:0 25px 50px -12px #00000040;--inset-shadow-2xs:inset 0 1px #0000000d;--inset-shadow-xs:inset 0 1px 1px #0000000d;--inset-shadow-sm:inset 0 2px 4px #0000000d;--drop-shadow-xs:0 1px 1px #0000000d;--drop-shadow-sm:0 1px 2px #00000026;--drop-shadow-md:0 3px 3px #0000001f;--drop-shadow-lg:0 4px 4px #00000026;--drop-shadow-xl:0 9px 7px #0000001a;--drop-shadow-2xl:0 25px 25px #00000026;--ease-in:cubic-bezier(.4,0,1,1);--ease-out:cubic-bezier(0,0,.2,1);--ease-in-out:cubic-bezier(.4,0,.2,1);--animate-spin:spin 1s linear infinite;--animate-ping:ping 1s cubic-bezier(0,0,.2,1)infinite;--animate-pulse:pulse 2s cubic-bezier(.4,0,.6,1)infinite;--animate-bounce:bounce 1s infinite;--blur-xs:4px;--blur-sm:8px;--blur-md:12px;--blur-lg:16px;--blur-xl:24px;--blur-2xl:40px;--blur-3xl:64px;--perspective-dramatic:100px;--perspective-near:300px;--perspective-normal:500px;--perspective-midrange:800px;--perspective-distant:1200px;--aspect-video:16/9;--default-transition-duration:.15s;--default-transition-timing-function:cubic-bezier(.4,0,.2,1);--default-font-family:var(--font-sans);--default-font-feature-settings:var(--font-sans--font-feature-settings);--default-font-variation-settings:var(--font-sans--font-variation-settings);--default-mono-font-family:var(--font-mono);--default-mono-font-feature-settings:var(--font-mono--font-feature-settings);--default-mono-font-variation-settings:var(--font-mono--font-variation-settings)}}@layer base{*,:after,:before,::backdrop{box-sizing:border-box;border:0 solid;margin:0;padding:0}::file-selector-button{box-sizing:border-box;border:0 solid;margin:0;padding:0}html,:host{-webkit-text-size-adjust:100%;-moz-tab-size:4;tab-size:4;line-height:1.5;font-family:var(--default-font-family,ui-sans-serif,system-ui,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji");font-feature-settings:var(--default-font-feature-settings,normal);font-variation-settings:var(--default-font-variation-settings,normal);-webkit-tap-highlight-color:transparent}body{line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;-webkit-text-decoration:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,samp,pre{font-family:var(--default-mono-font-family,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace);font-feature-settings:var(--default-mono-font-feature-settings,normal);font-variation-settings:var(--default-mono-font-variation-settings,normal);font-size:1em}small{font-size:80%}sub,sup{vertical-align:baseline;font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}:-moz-focusring{outline:auto}progress{vertical-align:baseline}summary{display:list-item}ol,ul,menu{list-style:none}img,svg,video,canvas,audio,iframe,embed,object{vertical-align:middle;display:block}img,video{max-width:100%;height:auto}button,input,select,optgroup,textarea{font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;color:inherit;opacity:1;background-color:#0000;border-radius:0}::file-selector-button{font:inherit;font-feature-settings:inherit;font-variation-settings:inherit;letter-spacing:inherit;color:inherit;opacity:1;background-color:#0000;border-radius:0}:where(select:is([multiple],[size])) optgroup{font-weight:bolder}:where(select:is([multiple],[size])) optgroup option{padding-inline-start:20px}::file-selector-button{margin-inline-end:4px}::placeholder{opacity:1;color:color-mix(in oklab,currentColor 50%,transparent)}textarea{resize:vertical}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-date-and-time-value{min-height:1lh;text-align:inherit}::-webkit-datetime-edit{display:inline-flex}::-webkit-datetime-edit-fields-wrapper{padding:0}::-webkit-datetime-edit{padding-block:0}::-webkit-datetime-edit-year-field{padding-block:0}::-webkit-datetime-edit-month-field{padding-block:0}::-webkit-datetime-edit-day-field{padding-block:0}::-webkit-datetime-edit-hour-field{padding-block:0}::-webkit-datetime-edit-minute-field{padding-block:0}::-webkit-datetime-edit-second-field{padding-block:0}::-webkit-datetime-edit-millisecond-field{padding-block:0}::-webkit-datetime-edit-meridiem-field{padding-block:0}:-moz-ui-invalid{box-shadow:none}button,input:where([type=button],[type=reset],[type=submit]){-webkit-appearance:button;-moz-appearance:button;appearance:button}::file-selector-button{-webkit-appearance:button;-moz-appearance:button;appearance:button}::-webkit-inner-spin-button{height:auto}::-webkit-outer-spin-button{height:auto}[hidden]:where(:not([hidden=until-found])){display:none!important}}@layer components;@layer utilities{.absolute{position:absolute}.relative{position:relative}.static{position:static}.inset-0{inset:calc(var(--spacing)*0)}.-mt-\[4\.9rem\]{margin-top:-4.9rem}.-mb-px{margin-bottom:-1px}.mb-1{margin-bottom:calc(var(--spacing)*1)}.mb-2{margin-bottom:calc(var(--spacing)*2)}.mb-4{margin-bottom:calc(var(--spacing)*4)}.mb-6{margin-bottom:calc(var(--spacing)*6)}.-ml-8{margin-left:calc(var(--spacing)*-8)}.flex{display:flex}.hidden{display:none}.inline-block{display:inline-block}.inline-flex{display:inline-flex}.table{display:table}.aspect-\[335\/376\]{aspect-ratio:335/376}.h-1{height:calc(var(--spacing)*1)}.h-1\.5{height:calc(var(--spacing)*1.5)}.h-2{height:calc(var(--spacing)*2)}.h-2\.5{height:calc(var(--spacing)*2.5)}.h-3{height:calc(var(--spacing)*3)}.h-3\.5{height:calc(var(--spacing)*3.5)}.h-14{height:calc(var(--spacing)*14)}.h-14\.5{height:calc(var(--spacing)*14.5)}.min-h-screen{min-height:100vh}.w-1{width:calc(var(--spacing)*1)}.w-1\.5{width:calc(var(--spacing)*1.5)}.w-2{width:calc(var(--spacing)*2)}.w-2\.5{width:calc(var(--spacing)*2.5)}.w-3{width:calc(var(--spacing)*3)}.w-3\.5{width:calc(var(--spacing)*3.5)}.w-\[448px\]{width:448px}.w-full{width:100%}.max-w-\[335px\]{max-width:335px}.max-w-none{max-width:none}.flex-1{flex:1}.shrink-0{flex-shrink:0}.translate-y-0{--tw-translate-y:calc(var(--spacing)*0);translate:var(--tw-translate-x)var(--tw-translate-y)}.transform{transform:var(--tw-rotate-x)var(--tw-rotate-y)var(--tw-rotate-z)var(--tw-skew-x)var(--tw-skew-y)}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.items-center{align-items:center}.justify-center{justify-content:center}.justify-end{justify-content:flex-end}.gap-3{gap:calc(var(--spacing)*3)}.gap-4{gap:calc(var(--spacing)*4)}:where(.space-x-1>:not(:last-child)){--tw-space-x-reverse:0;margin-inline-start:calc(calc(var(--spacing)*1)*var(--tw-space-x-reverse));margin-inline-end:calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-x-reverse)))}.overflow-hidden{overflow:hidden}.rounded-full{border-radius:3.40282e38px}.rounded-sm{border-radius:var(--radius-sm)}.rounded-t-lg{border-top-left-radius:var(--radius-lg);border-top-right-radius:var(--radius-lg)}.rounded-br-lg{border-bottom-right-radius:var(--radius-lg)}.rounded-bl-lg{border-bottom-left-radius:var(--radius-lg)}.border{border-style:var(--tw-border-style);border-width:1px}.border-\[\#19140035\]{border-color:#19140035}.border-\[\#e3e3e0\]{border-color:#e3e3e0}.border-black{border-color:var(--color-black)}.border-transparent{border-color:#0000}.bg-\[\#1b1b18\]{background-color:#1b1b18}.bg-\[\#FDFDFC\]{background-color:#fdfdfc}.bg-\[\#dbdbd7\]{background-color:#dbdbd7}.bg-\[\#fff2f2\]{background-color:#fff2f2}.bg-white{background-color:var(--color-white)}.p-6{padding:calc(var(--spacing)*6)}.px-5{padding-inline:calc(var(--spacing)*5)}.py-1{padding-block:calc(var(--spacing)*1)}.py-1\.5{padding-block:calc(var(--spacing)*1.5)}.py-2{padding-block:calc(var(--spacing)*2)}.pb-12{padding-bottom:calc(var(--spacing)*12)}.text-sm{font-size:var(--text-sm);line-height:var(--tw-leading,var(--text-sm--line-height))}.text-\[13px\]{font-size:13px}.leading-\[20px\]{--tw-leading:20px;line-height:20px}.leading-normal{--tw-leading:var(--leading-normal);line-height:var(--leading-normal)}.font-medium{--tw-font-weight:var(--font-weight-medium);font-weight:var(--font-weight-medium)}.text-\[\#1b1b18\]{color:#1b1b18}.text-\[\#706f6c\]{color:#706f6c}.text-\[\#F53003\],.text-\[\#f53003\]{color:#f53003}.text-white{color:var(--color-white)}.underline{text-decoration-line:underline}.underline-offset-4{text-underline-offset:4px}.opacity-100{opacity:1}.shadow-\[0px_0px_1px_0px_rgba\(0\,0\,0\,0\.03\)\,0px_1px_2px_0px_rgba\(0\,0\,0\,0\.06\)\]{--tw-shadow:0px 0px 1px 0px var(--tw-shadow-color,#00000008),0px 1px 2px 0px var(--tw-shadow-color,#0000000f);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.shadow-\[inset_0px_0px_0px_1px_rgba\(26\,26\,0\,0\.16\)\]{--tw-shadow:inset 0px 0px 0px 1px var(--tw-shadow-color,#1a1a0029);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.\!filter{filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)!important}.filter{filter:var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,)}.transition-all{transition-property:all;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.transition-opacity{transition-property:opacity;transition-timing-function:var(--tw-ease,var(--default-transition-timing-function));transition-duration:var(--tw-duration,var(--default-transition-duration))}.delay-300{transition-delay:.3s}.duration-750{--tw-duration:.75s;transition-duration:.75s}.not-has-\[nav\]\:hidden:not(:has(:is(nav))){display:none}.before\:absolute:before{content:var(--tw-content);position:absolute}.before\:top-0:before{content:var(--tw-content);top:calc(var(--spacing)*0)}.before\:top-1\/2:before{content:var(--tw-content);top:50%}.before\:bottom-0:before{content:var(--tw-content);bottom:calc(var(--spacing)*0)}.before\:bottom-1\/2:before{content:var(--tw-content);bottom:50%}.before\:left-\[0\.4rem\]:before{content:var(--tw-content);left:.4rem}.before\:border-l:before{content:var(--tw-content);border-left-style:var(--tw-border-style);border-left-width:1px}.before\:border-\[\#e3e3e0\]:before{content:var(--tw-content);border-color:#e3e3e0}@media (hover:hover){.hover\:border-\[\#1915014a\]:hover{border-color:#1915014a}.hover\:border-\[\#19140035\]:hover{border-color:#19140035}.hover\:border-black:hover{border-color:var(--color-black)}.hover\:bg-black:hover{background-color:var(--color-black)}}@media (width>=64rem){.lg\:-mt-\[6\.6rem\]{margin-top:-6.6rem}.lg\:mb-0{margin-bottom:calc(var(--spacing)*0)}.lg\:mb-6{margin-bottom:calc(var(--spacing)*6)}.lg\:-ml-px{margin-left:-1px}.lg\:ml-0{margin-left:calc(var(--spacing)*0)}.lg\:block{display:block}.lg\:aspect-auto{aspect-ratio:auto}.lg\:w-\[438px\]{width:438px}.lg\:max-w-4xl{max-width:var(--container-4xl)}.lg\:grow{flex-grow:1}.lg\:flex-row{flex-direction:row}.lg\:justify-center{justify-content:center}.lg\:rounded-t-none{border-top-left-radius:0;border-top-right-radius:0}.lg\:rounded-tl-lg{border-top-left-radius:var(--radius-lg)}.lg\:rounded-r-lg{border-top-right-radius:var(--radius-lg);border-bottom-right-radius:var(--radius-lg)}.lg\:rounded-br-none{border-bottom-right-radius:0}.lg\:p-8{padding:calc(var(--spacing)*8)}.lg\:p-20{padding:calc(var(--spacing)*20)}}@media (prefers-color-scheme:dark){.dark\:block{display:block}.dark\:hidden{display:none}.dark\:border-\[\#3E3E3A\]{border-color:#3e3e3a}.dark\:border-\[\#eeeeec\]{border-color:#eeeeec}.dark\:bg-\[\#0a0a0a\]{background-color:#0a0a0a}.dark\:bg-\[\#1D0002\]{background-color:#1d0002}.dark\:bg-\[\#3E3E3A\]{background-color:#3e3e3a}.dark\:bg-\[\#161615\]{background-color:#161615}.dark\:bg-\[\#eeeeec\]{background-color:#eeeeec}.dark\:text-\[\#1C1C1A\]{color:#1c1c1a}.dark\:text-\[\#A1A09A\]{color:#a1a09a}.dark\:text-\[\#EDEDEC\]{color:#ededec}.dark\:text-\[\#F61500\]{color:#f61500}.dark\:text-\[\#FF4433\]{color:#f43}.dark\:shadow-\[inset_0px_0px_0px_1px_\#fffaed2d\]{--tw-shadow:inset 0px 0px 0px 1px var(--tw-shadow-color,#fffaed2d);box-shadow:var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow)}.dark\:before\:border-\[\#3E3E3A\]:before{content:var(--tw-content);border-color:#3e3e3a}@media (hover:hover){.dark\:hover\:border-\[\#3E3E3A\]:hover{border-color:#3e3e3a}.dark\:hover\:border-\[\#62605b\]:hover{border-color:#62605b}.dark\:hover\:border-white:hover{border-color:var(--color-white)}.dark\:hover\:bg-white:hover{background-color:var(--color-white)}}}@starting-style{.starting\:translate-y-4{--tw-translate-y:calc(var(--spacing)*4);translate:var(--tw-translate-x)var(--tw-translate-y)}}@starting-style{.starting\:translate-y-6{--tw-translate-y:calc(var(--spacing)*6);translate:var(--tw-translate-x)var(--tw-translate-y)}}@starting-style{.starting\:opacity-0{opacity:0}}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes ping{75%,to{opacity:0;transform:scale(2)}}@keyframes pulse{50%{opacity:.5}}@keyframes bounce{0%,to{animation-timing-function:cubic-bezier(.8,0,1,1);transform:translateY(-25%)}50%{animation-timing-function:cubic-bezier(0,0,.2,1);transform:none}}@property --tw-translate-x{syntax:"*";inherits:false;initial-value:0}@property --tw-translate-y{syntax:"*";inherits:false;initial-value:0}@property --tw-translate-z{syntax:"*";inherits:false;initial-value:0}@property --tw-rotate-x{syntax:"*";inherits:false;initial-value:rotateX(0)}@property --tw-rotate-y{syntax:"*";inherits:false;initial-value:rotateY(0)}@property --tw-rotate-z{syntax:"*";inherits:false;initial-value:rotateZ(0)}@property --tw-skew-x{syntax:"*";inherits:false;initial-value:skewX(0)}@property --tw-skew-y{syntax:"*";inherits:false;initial-value:skewY(0)}@property --tw-space-x-reverse{syntax:"*";inherits:false;initial-value:0}@property --tw-border-style{syntax:"*";inherits:false;initial-value:solid}@property --tw-leading{syntax:"*";inherits:false}@property --tw-font-weight{syntax:"*";inherits:false}@property --tw-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-shadow-color{syntax:"*";inherits:false}@property --tw-inset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-inset-shadow-color{syntax:"*";inherits:false}@property --tw-ring-color{syntax:"*";inherits:false}@property --tw-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-inset-ring-color{syntax:"*";inherits:false}@property --tw-inset-ring-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-ring-inset{syntax:"*";inherits:false}@property --tw-ring-offset-width{syntax:"<length>";inherits:false;initial-value:0}@property --tw-ring-offset-color{syntax:"*";inherits:false;initial-value:#fff}@property --tw-ring-offset-shadow{syntax:"*";inherits:false;initial-value:0 0 #0000}@property --tw-blur{syntax:"*";inherits:false}@property --tw-brightness{syntax:"*";inherits:false}@property --tw-contrast{syntax:"*";inherits:false}@property --tw-grayscale{syntax:"*";inherits:false}@property --tw-hue-rotate{syntax:"*";inherits:false}@property --tw-invert{syntax:"*";inherits:false}@property --tw-opacity{syntax:"*";inherits:false}@property --tw-saturate{syntax:"*";inherits:false}@property --tw-sepia{syntax:"*";inherits:false}@property --tw-drop-shadow{syntax:"*";inherits:false}@property --tw-duration{syntax:"*";inherits:false}@property --tw-content{syntax:"*";inherits:false;initial-value:""}
            </style>
        @endif
    </head>
    <body class="bg-[#FDFDFC] dark:bg-[#0a0a0a] text-[#1b1b18] flex p-6 lg:p-8 items-center lg:justify-center min-h-screen flex-col">
        <header class="w-full lg:max-w-4xl max-w-[335px] text-sm mb-6 not-has-[nav]:hidden">
            @if (Route::has('login'))
                <nav class="flex items-center justify-end gap-4">
                    @auth
                        <a
                            href="{{ url('/dashboard') }}"
                            class="inline-block px-5 py-1.5 dark:text-[#EDEDEC] border-[#19140035] hover:border-[#1915014a] border text-[#1b1b18] dark:border-[#3E3E3A] dark:hover:border-[#62605b] rounded-sm text-sm leading-normal"
                        >
                            Dashboard
                        </a>
                    @else
                        <a
                            href="{{ route('login') }}"
                            class="inline-block px-5 py-1.5 dark:text-[#EDEDEC] text-[#1b1b18] border border-transparent hover:border-[#19140035] dark:hover:border-[#3E3E3A] rounded-sm text-sm leading-normal"
                        >
                            Log in
                        </a>

                        @if (Route::has('register'))
                            <a
                                href="{{ route('register') }}"
                                class="inline-block px-5 py-1.5 dark:text-[#EDEDEC] border-[#19140035] hover:border-[#1915014a] border text-[#1b1b18] dark:border-[#3E3E3A] dark:hover:border-[#62605b] rounded-sm text-sm leading-normal">
                                Register
                            </a>
                        @endif
                    @endauth
                </nav>
            @endif
        </header>
        <div class="flex items-center justify-center w-full transition-opacity opacity-100 duration-750 lg:grow starting:opacity-0">
            <main class="flex max-w-[335px] w-full flex-col-reverse lg:max-w-4xl lg:flex-row">
                <div class="text-[13px] leading-[20px] flex-1 p-6 pb-12 lg:p-20 bg-white dark:bg-[#161615] dark:text-[#EDEDEC] shadow-[inset_0px_0px_0px_1px_rgba(26,26,0,0.16)] dark:shadow-[inset_0px_0px_0px_1px_#fffaed2d] rounded-bl-lg rounded-br-lg lg:rounded-tl-lg lg:rounded-br-none">
                    <h1 class="mb-1 font-medium">Let's get started</h1>
                    <p class="mb-2 text-[#706f6c] dark:text-[#A1A09A]">Laravel has an incredibly rich ecosystem. <br>We suggest starting with the following.</p>
                    <ul class="flex flex-col mb-4 lg:mb-6">
                        <li class="flex items-center gap-4 py-2 relative before:border-l before:border-[#e3e3e0] dark:before:border-[#3E3E3A] before:top-1/2 before:bottom-0 before:left-[0.4rem] before:absolute">
                            <span class="relative py-1 bg-white dark:bg-[#161615]">
                                <span class="flex items-center justify-center rounded-full bg-[#FDFDFC] dark:bg-[#161615] shadow-[0px_0px_1px_0px_rgba(0,0,0,0.03),0px_1px_2px_0px_rgba(0,0,0,0.06)] w-3.5 h-3.5 border dark:border-[#3E3E3A] border-[#e3e3e0]">
                                    <span class="rounded-full bg-[#dbdbd7] dark:bg-[#3E3E3A] w-1.5 h-1.5"></span>
                                </span>
                            </span>
                            <span>
                                Read the
                                <a href="https://laravel.com/docs" target="_blank" class="inline-flex items-center space-x-1 font-medium underline underline-offset-4 text-[#f53003] dark:text-[#FF4433] ml-1">
                                    <span>Documentation</span>
                                    <svg
                                        width="10"
                                        height="11"
                                        viewBox="0 0 10 11"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                        class="w-2.5 h-2.5"
                                    >
                                        <path
                                            d="M7.70833 6.95834V2.79167H3.54167M2.5 8L7.5 3.00001"
                                            stroke="currentColor"
                                            stroke-linecap="square"
                                        />
                                    </svg>
                                </a>
                            </span>
                        </li>
                        <li class="flex items-center gap-4 py-2 relative before:border-l before:border-[#e3e3e0] dark:before:border-[#3E3E3A] before:bottom-1/2 before:top-0 before:left-[0.4rem] before:absolute">
                            <span class="relative py-1 bg-white dark:bg-[#161615]">
                                <span class="flex items-center justify-center rounded-full bg-[#FDFDFC] dark:bg-[#161615] shadow-[0px_0px_1px_0px_rgba(0,0,0,0.03),0px_1px_2px_0px_rgba(0,0,0,0.06)] w-3.5 h-3.5 border dark:border-[#3E3E3A] border-[#e3e3e0]">
                                    <span class="rounded-full bg-[#dbdbd7] dark:bg-[#3E3E3A] w-1.5 h-1.5"></span>
                                </span>
                            </span>
                            <span>
                                Watch video tutorials at
                                <a href="https://laracasts.com" target="_blank" class="inline-flex items-center space-x-1 font-medium underline underline-offset-4 text-[#f53003] dark:text-[#FF4433] ml-1">
                                    <span>Laracasts</span>
                                    <svg
                                        width="10"
                                        height="11"
                                        viewBox="0 0 10 11"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                        class="w-2.5 h-2.5"
                                    >
                                        <path
                                            d="M7.70833 6.95834V2.79167H3.54167M2.5 8L7.5 3.00001"
                                            stroke="currentColor"
                                            stroke-linecap="square"
                                        />
                                    </svg>
                                </a>
                            </span>
                        </li>
                    </ul>
                    <ul class="flex gap-3 text-sm leading-normal">
                        <li>
                            <a href="https://cloud.laravel.com" target="_blank" class="inline-block dark:bg-[#eeeeec] dark:border-[#eeeeec] dark:text-[#1C1C1A] dark:hover:bg-white dark:hover:border-white hover:bg-black hover:border-black px-5 py-1.5 bg-[#1b1b18] rounded-sm border border-black text-white text-sm leading-normal">
                                Deploy now
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="bg-[#fff2f2] dark:bg-[#1D0002] relative lg:-ml-px -mb-px lg:mb-0 rounded-t-lg lg:rounded-t-none lg:rounded-r-lg aspect-[335/376] lg:aspect-auto w-full lg:w-[438px] shrink-0 overflow-hidden">
                    {{-- Laravel Logo --}}
                    <svg class="w-full text-[#F53003] dark:text-[#F61500] transition-all translate-y-0 opacity-100 max-w-none duration-750 starting:opacity-0 starting:translate-y-6" viewBox="0 0 438 104" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M17.2036 -3H0V102.197H49.5189V86.7187H17.2036V-3Z" fill="currentColor" />
                        <path d="M110.256 41.6337C108.061 38.1275 104.945 35.3731 100.905 33.3681C96.8667 31.3647 92.8016 30.3618 88.7131 30.3618C83.4247 30.3618 78.5885 31.3389 74.201 33.2923C69.8111 35.2456 66.0474 37.928 62.9059 41.3333C59.7643 44.7401 57.3198 48.6726 55.5754 53.1293C53.8287 57.589 52.9572 62.274 52.9572 67.1813C52.9572 72.1925 53.8287 76.8995 55.5754 81.3069C57.3191 85.7173 59.7636 89.6241 62.9059 93.0293C66.0474 96.4361 69.8119 99.1155 74.201 101.069C78.5885 103.022 83.4247 103.999 88.7131 103.999C92.8016 103.999 96.8667 102.997 100.905 100.994C104.945 98.9911 108.061 96.2359 110.256 92.7282V102.195H126.563V32.1642H110.256V41.6337ZM108.76 75.7472C107.762 78.4531 106.366 80.8078 104.572 82.8112C102.776 84.8161 100.606 86.4183 98.0637 87.6206C95.5202 88.823 92.7004 89.4238 89.6103 89.4238C86.5178 89.4238 83.7252 88.823 81.2324 87.6206C78.7388 86.4183 76.5949 84.8161 74.7998 82.8112C73.004 80.8078 71.6319 78.4531 70.6856 75.7472C69.7356 73.0421 69.2644 70.1868 69.2644 67.1821C69.2644 64.1758 69.7356 61.3205 70.6856 58.6154C71.6319 55.9102 73.004 53.5571 74.7998 51.5522C76.5949 49.5495 78.738 47.9451 81.2324 46.7427C83.7252 45.5404 86.5178 44.9396 89.6103 44.9396C92.7012 44.9396 95.5202 45.5404 98.0637 46.7427C100.606 47.9451 102.776 49.5487 104.572 51.5522C106.367 53.5571 107.762 55.9102 108.76 58.6154C109.756 61.3205 110.256 64.1758 110.256 67.1821C110.256 70.1868 109.756 73.0421 108.76 75.7472Z" fill="currentColor" />
                        <path d="M242.805 41.6337C240.611 38.1275 237.494 35.3731 233.455 33.3681C229.416 31.3647 225.351 30.3618 221.262 30.3618C215.974 30.3618 211.138 31.3389 206.75 33.2923C202.36 35.2456 198.597 37.928 195.455 41.3333C192.314 44.7401 189.869 48.6726 188.125 53.1293C186.378 57.589 185.507 62.274 185.507 67.1813C185.507 72.1925 186.378 76.8995 188.125 81.3069C189.868 85.7173 192.313 89.6241 195.455 93.0293C198.597 96.4361 202.361 99.1155 206.75 101.069C211.138 103.022 215.974 103.999 221.262 103.999C225.351 103.999 229.416 102.997 233.455 100.994C237.494 98.9911 240.611 96.2359 242.805 92.7282V102.195H259.112V32.1642H242.805V41.6337ZM241.31 75.7472C240.312 78.4531 238.916 80.8078 237.122 82.8112C235.326 84.8161 233.156 86.4183 230.614 87.6206C228.07 88.823 225.251 89.4238 222.16 89.4238C219.068 89.4238 216.275 88.823 213.782 87.6206C211.289 86.4183 209.145 84.8161 207.35 82.8112C205.554 80.8078 204.182 78.4531 203.236 75.7472C202.286 73.0421 201.814 70.1868 201.814 67.1821C201.814 64.1758 202.286 61.3205 203.236 58.6154C204.182 55.9102 205.554 53.5571 207.35 51.5522C209.145 49.5495 211.288 47.9451 213.782 46.7427C216.275 45.5404 219.068 44.9396 222.16 44.9396C225.251 44.9396 228.07 45.5404 230.614 46.7427C233.156 47.9451 235.326 49.5487 237.122 51.5522C238.917 53.5571 240.312 55.9102 241.31 58.6154C242.306 61.3205 242.806 64.1758 242.806 67.1821C242.805 70.1868 242.305 73.0421 241.31 75.7472Z" fill="currentColor" />
                        <path d="M438 -3H421.694V102.197H438V-3Z" fill="currentColor" />
                        <path d="M139.43 102.197H155.735V48.2834H183.712V32.1665H139.43V102.197Z" fill="currentColor" />
                        <path d="M324.49 32.1665L303.995 85.794L283.498 32.1665H266.983L293.748 102.197H314.242L341.006 32.1665H324.49Z" fill="currentColor" />
                        <path d="M376.571 30.3656C356.603 30.3656 340.797 46.8497 340.797 67.1828C340.797 89.6597 356.094 104 378.661 104C391.29 104 399.354 99.1488 409.206 88.5848L398.189 80.0226C398.183 80.031 389.874 90.9895 377.468 90.9895C363.048 90.9895 356.977 79.3111 356.977 73.269H411.075C413.917 50.1328 398.775 30.3656 376.571 30.3656ZM357.02 61.0967C357.145 59.7487 359.023 43.3761 376.442 43.3761C393.861 43.3761 395.978 59.7464 396.099 61.0967H357.02Z" fill="currentColor" />
                    </svg>

                    {{-- Light Mode 12 SVG --}}
                    <svg class="w-[448px] max-w-none relative -mt-[4.9rem] -ml-8 lg:ml-0 lg:-mt-[6.6rem] dark:hidden" viewBox="0 0 440 376" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" fill="black" />
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" fill="black" />
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" fill="#F8B803" />
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" fill="#F8B803" />
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                        <g style="mix-blend-mode: hard-light" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" fill="#F0ACB8" />
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" fill="#F0ACB8" />
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                        <g style="mix-blend-mode: plus-darker" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M230.951 281.792L231.282 281.793C238.128 274.907 248.453 265.823 262.256 254.539C275.617 243.256 285.666 234.267 292.402 227.573C299.027 220.688 303.554 213.421 305.983 205.771C308.412 198.12 307.253 190.183 302.504 181.959C297.203 172.778 289.749 165.415 280.142 159.868C270.645 154.13 260.596 151.26 249.995 151.26C239.615 151.26 232.823 154.033 229.621 159.579C226.309 164.934 227.413 172.393 232.935 181.956L168.335 181.954C159.058 165.888 155.082 151.543 156.407 138.92C157.953 126.298 164.247 116.544 175.289 109.659C186.442 102.583 201.294 99.045 219.846 99.0457C239.281 99.0464 258.551 102.585 277.655 109.663C296.649 116.549 313.986 126.303 329.667 138.927C345.349 151.551 357.827 165.895 367.104 181.961C375.718 196.88 379.528 209.981 378.535 221.265C377.762 232.549 374.063 242.399 367.438 250.814C361.033 259.229 351.095 269.557 337.624 281.796L419.782 281.8L448.605 331.719L259.774 331.712L230.951 281.792Z" fill="#F3BEC7" />
                            <path d="M51.8063 152.402L28.9479 152.401L-0.0411453 102.195L85.7608 102.198L218.282 331.711L155.339 331.709L51.8063 152.402Z" fill="#F3BEC7" />
                            <path d="M230.951 281.792L231.282 281.793C238.128 274.907 248.453 265.823 262.256 254.539C275.617 243.256 285.666 234.267 292.402 227.573C299.027 220.688 303.554 213.421 305.983 205.771C308.412 198.12 307.253 190.183 302.504 181.959C297.203 172.778 289.749 165.415 280.142 159.868C270.645 154.13 260.596 151.26 249.995 151.26C239.615 151.26 232.823 154.033 229.621 159.579C226.309 164.934 227.413 172.393 232.935 181.956L168.335 181.954C159.058 165.888 155.082 151.543 156.407 138.92C157.953 126.298 164.247 116.544 175.289 109.659C186.442 102.583 201.294 99.045 219.846 99.0457C239.281 99.0464 258.551 102.585 277.655 109.663C296.649 116.549 313.986 126.303 329.667 138.927C345.349 151.551 357.827 165.895 367.104 181.961C375.718 196.88 379.528 209.981 378.535 221.265C377.762 232.549 374.063 242.399 367.438 250.814C361.033 259.229 351.095 269.557 337.624 281.796L419.782 281.8L448.605 331.719L259.774 331.712L230.951 281.792Z" stroke="#1B1B18" stroke-width="1" />
                            <path d="M51.8063 152.402L28.9479 152.401L-0.0411453 102.195L85.7608 102.198L218.282 331.711L155.339 331.709L51.8063 152.402Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.467 355.363L188.798 355.363C195.644 348.478 205.969 339.393 219.772 328.11C233.133 316.826 243.181 307.837 249.917 301.144C253.696 297.217 256.792 293.166 259.205 288.991C261.024 285.845 262.455 282.628 263.499 279.341C265.928 271.691 264.768 263.753 260.02 255.529C254.719 246.349 247.265 238.985 237.657 233.438C228.16 227.7 218.111 224.831 207.51 224.83C197.13 224.83 190.339 227.603 187.137 233.149C183.824 238.504 184.929 245.963 190.45 255.527L125.851 255.524C116.574 239.458 112.598 225.114 113.923 212.491C114.615 206.836 116.261 201.756 118.859 197.253C122.061 191.704 126.709 187.03 132.805 183.229C143.958 176.153 158.81 172.615 177.362 172.616C196.797 172.617 216.067 176.156 235.171 183.233C254.164 190.119 271.502 199.874 287.183 212.497C302.864 225.121 315.343 239.466 324.62 255.532C333.233 270.45 337.044 283.551 336.05 294.835C335.46 303.459 333.16 311.245 329.151 318.194C327.915 320.337 326.515 322.4 324.953 324.384C318.549 332.799 308.611 343.127 295.139 355.367L377.297 355.37L406.121 405.289L217.29 405.282L188.467 355.363Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M9.32197 225.972L-13.5365 225.971L-42.5255 175.765L43.2765 175.768L175.798 405.282L112.854 405.279L9.32197 225.972Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M345.247 111.915C329.566 99.2919 312.229 89.5371 293.235 82.6512L235.167 183.228C254.161 190.114 271.498 199.869 287.179 212.492L345.247 111.915Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M382.686 154.964C373.41 138.898 360.931 124.553 345.25 111.93L287.182 212.506C302.863 225.13 315.342 239.475 324.618 255.541L382.686 154.964Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M293.243 82.6472C274.139 75.57 254.869 72.031 235.434 72.0303L177.366 172.607C196.801 172.608 216.071 176.147 235.175 183.224L293.243 82.6472Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M394.118 194.257C395.112 182.973 391.301 169.872 382.688 154.953L324.619 255.53C333.233 270.448 337.044 283.55 336.05 294.834L394.118 194.257Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M235.432 72.0311C216.88 72.0304 202.027 75.5681 190.875 82.6442L132.806 183.221C143.959 176.145 158.812 172.607 177.363 172.608L235.432 72.0311Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M265.59 124.25C276.191 124.251 286.24 127.12 295.737 132.858L237.669 233.435C228.172 227.697 218.123 224.828 207.522 224.827L265.59 124.25Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M295.719 132.859C305.326 138.406 312.78 145.77 318.081 154.95L260.013 255.527C254.712 246.347 247.258 238.983 237.651 233.436L295.719 132.859Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M387.218 217.608C391.227 210.66 393.527 202.874 394.117 194.25L336.049 294.827C335.459 303.451 333.159 311.237 329.15 318.185L387.218 217.608Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M245.211 132.577C248.413 127.03 255.204 124.257 265.584 124.258L207.516 224.835C197.136 224.834 190.345 227.607 187.143 233.154L245.211 132.577Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M318.094 154.945C322.842 163.17 324.002 171.107 321.573 178.757L263.505 279.334C265.934 271.684 264.774 263.746 260.026 255.522L318.094 154.945Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M176.925 96.6737C180.127 91.1249 184.776 86.4503 190.871 82.6499L132.803 183.227C126.708 187.027 122.059 191.702 118.857 197.25L176.925 96.6737Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M387.226 217.606C385.989 219.749 384.59 221.813 383.028 223.797L324.96 324.373C326.522 322.39 327.921 320.326 329.157 318.183L387.226 217.606Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M317.269 188.408C319.087 185.262 320.519 182.045 321.562 178.758L263.494 279.335C262.451 282.622 261.019 285.839 259.201 288.985L317.269 188.408Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M245.208 132.573C241.895 137.928 243 145.387 248.522 154.95L190.454 255.527C184.932 245.964 183.827 238.505 187.14 233.15L245.208 132.573Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M176.93 96.6719C174.331 101.175 172.686 106.255 171.993 111.91L113.925 212.487C114.618 206.831 116.263 201.752 118.862 197.249L176.93 96.6719Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M317.266 188.413C314.853 192.589 311.757 196.64 307.978 200.566L249.91 301.143C253.689 297.216 256.785 293.166 259.198 288.99L317.266 188.413Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M464.198 304.708L435.375 254.789L377.307 355.366L406.13 405.285L464.198 304.708Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M353.209 254.787C366.68 242.548 376.618 232.22 383.023 223.805L324.955 324.382C318.55 332.797 308.612 343.124 295.141 355.364L353.209 254.787Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M435.37 254.787L353.212 254.784L295.144 355.361L377.302 355.364L435.37 254.787Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M183.921 154.947L248.521 154.95L190.453 255.527L125.853 255.524L183.921 154.947Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M171.992 111.914C170.668 124.537 174.643 138.881 183.92 154.947L125.852 255.524C116.575 239.458 112.599 225.114 113.924 212.491L171.992 111.914Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M307.987 200.562C301.251 207.256 291.203 216.244 277.842 227.528L219.774 328.105C233.135 316.821 243.183 307.832 249.919 301.139L307.987 200.562Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M15.5469 75.1797L44.5359 125.386L-13.5321 225.963L-42.5212 175.756L15.5469 75.1797Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M277.836 227.536C264.033 238.82 253.708 247.904 246.862 254.789L188.794 355.366C195.64 348.481 205.965 339.397 219.768 328.113L277.836 227.536Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M275.358 304.706L464.189 304.713L406.12 405.29L217.29 405.283L275.358 304.706Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M44.5279 125.39L67.3864 125.39L9.31834 225.967L-13.5401 225.966L44.5279 125.39Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M101.341 75.1911L233.863 304.705L175.795 405.282L43.2733 175.768L101.341 75.1911ZM15.5431 75.19L-42.525 175.767L43.277 175.77L101.345 75.1932L15.5431 75.19Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M246.866 254.784L246.534 254.784L188.466 355.361L188.798 355.361L246.866 254.784Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M246.539 254.781L275.362 304.701L217.294 405.277L188.471 355.358L246.539 254.781Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M67.3906 125.391L170.923 304.698L112.855 405.275L9.32257 225.967L67.3906 125.391Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                            <path d="M170.921 304.699L233.865 304.701L175.797 405.278L112.853 405.276L170.921 304.699Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="bevel" />
                        </g>
                        <g style="mix-blend-mode: hard-light" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" fill="#F0ACB8" />
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" stroke="#1B1B18" stroke-width="1" stroke-linejoin="round" />
                        </g>
                        <g style="mix-blend-mode: hard-light" class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" fill="#F0ACB8" />
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" stroke="#1B1B18" stroke-width="1" />
                        </g>
                    </svg>

                    {{-- Dark Mode 12 SVG --}}
                    <svg class="w-[448px] max-w-none relative -mt-[4.9rem] -ml-8 lg:ml-0 lg:-mt-[6.6rem] hidden dark:block" viewBox="0 0 440 376" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" fill="black"/>
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" fill="black"/>
                            <path d="M188.263 355.73L188.595 355.73C195.441 348.845 205.766 339.761 219.569 328.477C232.93 317.193 242.978 308.205 249.714 301.511C256.34 294.626 260.867 287.358 263.296 279.708C265.725 272.058 264.565 264.121 259.816 255.896C254.516 246.716 247.062 239.352 237.454 233.805C227.957 228.067 217.908 225.198 207.307 225.198C196.927 225.197 190.136 227.97 186.934 233.516C183.621 238.872 184.726 246.331 190.247 255.894L125.647 255.891C116.371 239.825 112.395 225.481 113.72 212.858C115.265 200.235 121.559 190.481 132.602 183.596C143.754 176.52 158.607 172.982 177.159 172.983C196.594 172.984 215.863 176.523 234.968 183.6C253.961 190.486 271.299 200.241 286.98 212.864C302.661 225.488 315.14 239.833 324.416 255.899C333.03 270.817 336.841 283.918 335.847 295.203C335.075 306.487 331.376 316.336 324.75 324.751C318.346 333.167 308.408 343.494 294.936 355.734L377.094 355.737L405.917 405.656L217.087 405.649L188.263 355.73Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M9.11884 226.339L-13.7396 226.338L-42.7286 176.132L43.0733 176.135L175.595 405.649L112.651 405.647L9.11884 226.339Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" fill="#391800"/>
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" fill="#391800"/>
                            <path d="M204.592 327.449L204.923 327.449C211.769 320.564 222.094 311.479 235.897 300.196C249.258 288.912 259.306 279.923 266.042 273.23C272.668 266.345 277.195 259.077 279.624 251.427C282.053 243.777 280.893 235.839 276.145 227.615C270.844 218.435 263.39 211.071 253.782 205.524C244.285 199.786 234.236 196.917 223.635 196.916C213.255 196.916 206.464 199.689 203.262 205.235C199.949 210.59 201.054 218.049 206.575 227.612L141.975 227.61C132.699 211.544 128.723 197.2 130.048 184.577C131.593 171.954 137.887 162.2 148.93 155.315C160.083 148.239 174.935 144.701 193.487 144.702C212.922 144.703 232.192 148.242 251.296 155.319C270.289 162.205 287.627 171.96 303.308 184.583C318.989 197.207 331.468 211.552 340.745 227.618C349.358 242.536 353.169 255.637 352.175 266.921C351.403 278.205 347.704 288.055 341.078 296.47C334.674 304.885 324.736 315.213 311.264 327.453L393.422 327.456L422.246 377.375L233.415 377.368L204.592 327.449Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M25.447 198.058L2.58852 198.057L-26.4005 147.851L59.4015 147.854L191.923 377.368L128.979 377.365L25.447 198.058Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4" style="mix-blend-mode:hard-light">
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" fill="#733000"/>
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" fill="#733000"/>
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.725 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M217.342 305.363L217.673 305.363C224.519 298.478 234.844 289.393 248.647 278.11C262.008 266.826 272.056 257.837 278.792 251.144C285.418 244.259 289.945 236.991 292.374 229.341C294.803 221.691 293.643 213.753 288.895 205.529C283.594 196.349 276.14 188.985 266.532 183.438C257.035 177.7 246.986 174.831 236.385 174.83C226.005 174.83 219.214 177.603 216.012 183.149C212.699 188.504 213.804 195.963 219.325 205.527L154.726 205.524C145.449 189.458 141.473 175.114 142.798 162.491C144.343 149.868 150.637 140.114 161.68 133.229C172.833 126.153 187.685 122.615 206.237 122.616C225.672 122.617 244.942 126.156 264.046 133.233C283.039 140.119 300.377 149.874 316.058 162.497C331.739 175.121 344.218 189.466 353.495 205.532C362.108 220.45 365.919 233.551 364.925 244.835C364.153 256.12 360.454 265.969 353.828 274.384C347.424 282.799 337.486 293.127 324.014 305.367L406.172 305.37L434.996 355.289L246.165 355.282L217.342 305.363Z" stroke="#FF750F" stroke-width="1"/>
                            <path d="M38.197 175.972L15.3385 175.971L-13.6505 125.765L72.1515 125.768L204.673 355.282L141.729 355.279L38.197 175.972Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4">
                            <path d="M188.467 355.363L188.798 355.363C195.644 348.478 205.969 339.393 219.772 328.11C233.133 316.826 243.181 307.837 249.917 301.144C253.696 297.217 256.792 293.166 259.205 288.991C261.024 285.845 262.455 282.628 263.499 279.341C265.928 271.691 264.768 263.753 260.02 255.529C254.719 246.349 247.265 238.985 237.657 233.438C228.16 227.7 218.111 224.831 207.51 224.83C197.13 224.83 190.339 227.603 187.137 233.149C183.824 238.504 184.929 245.963 190.45 255.527L125.851 255.524C116.574 239.458 112.598 225.114 113.923 212.491C114.615 206.836 116.261 201.756 118.859 197.253C122.061 191.704 126.709 187.03 132.805 183.229C143.958 176.153 158.81 172.615 177.362 172.616C196.797 172.617 216.067 176.156 235.171 183.233C254.164 190.119 271.502 199.874 287.183 212.497C302.864 225.121 315.343 239.466 324.62 255.532C333.233 270.45 337.044 283.551 336.05 294.835C335.46 303.459 333.16 311.245 329.151 318.194C327.915 320.337 326.515 322.4 324.953 324.384C318.549 332.799 308.611 343.127 295.139 355.367L377.297 355.37L406.121 405.289L217.29 405.282L188.467 355.363Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M9.32197 225.972L-13.5365 225.971L-42.5255 175.765L43.2765 175.768L175.798 405.282L112.854 405.279L9.32197 225.972Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M345.247 111.915C329.566 99.2919 312.229 89.5371 293.235 82.6512L235.167 183.228C254.161 190.114 271.498 199.869 287.179 212.492L345.247 111.915Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M382.686 154.964C373.41 138.898 360.931 124.553 345.25 111.93L287.182 212.506C302.863 225.13 315.342 239.475 324.618 255.541L382.686 154.964Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M293.243 82.6472C274.139 75.57 254.869 72.031 235.434 72.0303L177.366 172.607C196.801 172.608 216.071 176.147 235.175 183.224L293.243 82.6472Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M394.118 194.257C395.112 182.973 391.301 169.872 382.688 154.953L324.619 255.53C333.233 270.448 337.044 283.55 336.05 294.834L394.118 194.257Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M235.432 72.0311C216.88 72.0304 202.027 75.5681 190.875 82.6442L132.806 183.221C143.959 176.145 158.812 172.607 177.363 172.608L235.432 72.0311Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M265.59 124.25C276.191 124.251 286.24 127.12 295.737 132.858L237.669 233.435C228.172 227.697 218.123 224.828 207.522 224.827L265.59 124.25Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M295.719 132.859C305.326 138.406 312.78 145.77 318.081 154.95L260.013 255.527C254.712 246.347 247.258 238.983 237.651 233.436L295.719 132.859Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M387.218 217.608C391.227 210.66 393.527 202.874 394.117 194.25L336.049 294.827C335.459 303.451 333.159 311.237 329.15 318.185L387.218 217.608Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M245.211 132.577C248.413 127.03 255.204 124.257 265.584 124.258L207.516 224.835C197.136 224.834 190.345 227.607 187.143 233.154L245.211 132.577Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M318.094 154.945C322.842 163.17 324.002 171.107 321.573 178.757L263.505 279.334C265.934 271.684 264.774 263.746 260.026 255.522L318.094 154.945Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M176.925 96.6737C180.127 91.1249 184.776 86.4503 190.871 82.6499L132.803 183.227C126.708 187.027 122.059 191.702 118.857 197.25L176.925 96.6737Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M387.226 217.606C385.989 219.749 384.59 221.813 383.028 223.797L324.96 324.373C326.522 322.39 327.921 320.326 329.157 318.183L387.226 217.606Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M317.269 188.408C319.087 185.262 320.519 182.045 321.562 178.758L263.494 279.335C262.451 282.622 261.019 285.839 259.201 288.985L317.269 188.408Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M245.208 132.573C241.895 137.928 243 145.387 248.522 154.95L190.454 255.527C184.932 245.964 183.827 238.505 187.14 233.15L245.208 132.573Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M176.93 96.6719C174.331 101.175 172.686 106.255 171.993 111.91L113.925 212.487C114.618 206.831 116.263 201.752 118.862 197.249L176.93 96.6719Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M317.266 188.413C314.853 192.589 311.757 196.64 307.978 200.566L249.91 301.143C253.689 297.216 256.785 293.166 259.198 288.99L317.266 188.413Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M464.198 304.708L435.375 254.789L377.307 355.366L406.13 405.285L464.198 304.708Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M353.209 254.787C366.68 242.548 376.618 232.22 383.023 223.805L324.955 324.382C318.55 332.797 308.612 343.124 295.141 355.364L353.209 254.787Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M435.37 254.787L353.212 254.784L295.144 355.361L377.302 355.364L435.37 254.787Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M183.921 154.947L248.521 154.95L190.453 255.527L125.853 255.524L183.921 154.947Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M171.992 111.914C170.668 124.537 174.643 138.881 183.92 154.947L125.852 255.524C116.575 239.458 112.599 225.114 113.924 212.491L171.992 111.914Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M307.987 200.562C301.251 207.256 291.203 216.244 277.842 227.528L219.774 328.105C233.135 316.821 243.183 307.832 249.919 301.139L307.987 200.562Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M15.5469 75.1797L44.5359 125.386L-13.5321 225.963L-42.5212 175.756L15.5469 75.1797Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M277.836 227.536C264.033 238.82 253.708 247.904 246.862 254.789L188.794 355.366C195.64 348.481 205.965 339.397 219.768 328.113L277.836 227.536Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M275.358 304.706L464.189 304.713L406.12 405.29L217.29 405.283L275.358 304.706Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M44.5279 125.39L67.3864 125.39L9.31834 225.967L-13.5401 225.966L44.5279 125.39Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M101.341 75.1911L233.863 304.705L175.795 405.282L43.2733 175.768L101.341 75.1911ZM15.5431 75.19L-42.525 175.767L43.277 175.77L101.345 75.1932L15.5431 75.19Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M246.866 254.784L246.534 254.784L188.466 355.361L188.798 355.361L246.866 254.784Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M246.539 254.781L275.362 304.701L217.294 405.277L188.471 355.358L246.539 254.781Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M67.3906 125.391L170.923 304.698L112.855 405.275L9.32257 225.967L67.3906 125.391Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                            <path d="M170.921 304.699L233.865 304.701L175.797 405.278L112.853 405.276L170.921 304.699Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="bevel"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4" style="mix-blend-mode:hard-light">
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" fill="#4B0600"/>
                            <path d="M246.544 254.79L246.875 254.79C253.722 247.905 264.046 238.82 277.849 227.537C291.21 216.253 301.259 207.264 307.995 200.57C314.62 193.685 319.147 186.418 321.577 178.768C324.006 171.117 322.846 163.18 318.097 154.956C312.796 145.775 305.342 138.412 295.735 132.865C286.238 127.127 276.189 124.258 265.588 124.257C255.208 124.257 248.416 127.03 245.214 132.576C241.902 137.931 243.006 145.39 248.528 154.953L183.928 154.951C174.652 138.885 170.676 124.541 172 111.918C173.546 99.2946 179.84 89.5408 190.882 82.6559C202.035 75.5798 216.887 72.0421 235.439 72.0428C254.874 72.0435 274.144 75.5825 293.248 82.6598C312.242 89.5457 329.579 99.3005 345.261 111.924C360.942 124.548 373.421 138.892 382.697 154.958C391.311 169.877 395.121 182.978 394.128 194.262C393.355 205.546 389.656 215.396 383.031 223.811C376.627 232.226 366.688 242.554 353.217 254.794L435.375 254.797L464.198 304.716L275.367 304.709L246.544 254.79Z" stroke="#FF750F" stroke-width="1" stroke-linejoin="round"/>
                        </g>
                        <g class="transition-all delay-300 translate-y-0 opacity-100 duration-750 starting:opacity-0 starting:translate-y-4" style="mix-blend-mode:hard-light">
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" fill="#4B0600"/>
                            <path d="M67.41 125.402L44.5515 125.401L15.5625 75.1953L101.364 75.1985L233.886 304.712L170.942 304.71L67.41 125.402Z" stroke="#FF750F" stroke-width="1"/>
                        </g>
                    </svg>
                    <div class="absolute inset-0 rounded-t-lg lg:rounded-t-none lg:rounded-r-lg shadow-[inset_0px_0px_0px_1px_rgba(26,26,0,0.16)] dark:shadow-[inset_0px_0px_0px_1px_#fffaed2d]"></div>
                </div>
            </main>
        </div>

        @if (Route::has('login'))
            <div class="h-14.5 hidden lg:block"></div>
        @endif
    </body>
</html>



================================================
FILE: resources/views/auth/confirm-password.blade.php
================================================
<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('This is a secure area of the application. Please confirm your password before continuing.') }}
    </div>

    <form method="POST" action="{{ route('password.confirm') }}">
        @csrf

        <!-- Password -->
        <div>
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="current-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <div class="flex justify-end mt-4">
            <x-primary-button>
                {{ __('Confirm') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>



================================================
FILE: resources/views/auth/forgot-password.blade.php
================================================
<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('Forgot your password? No problem. Just let us know your email address and we will email you a password reset link that will allow you to choose a new one.') }}
    </div>

    <!-- Session Status -->
    <x-auth-session-status class="mb-4" :status="session('status')" />

    <form method="POST" action="{{ route('password.email') }}">
        @csrf

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <x-primary-button>
                {{ __('Email Password Reset Link') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>



================================================
FILE: resources/views/auth/login.blade.php
================================================
<x-guest-layout>
    <!-- Session Status -->
    <x-auth-session-status class="mb-4" :status="session('status')" />

    <form method="POST" action="{{ route('login') }}">
        @csrf

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autofocus autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="current-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Remember Me -->
        <div class="block mt-4">
            <label for="remember_me" class="inline-flex items-center">
                <input id="remember_me" type="checkbox" class="rounded border-gray-300 text-indigo-600 shadow-sm focus:ring-indigo-500" name="remember">
                <span class="ms-2 text-sm text-gray-600">{{ __('Remember me') }}</span>
            </label>
        </div>

        <div class="flex items-center justify-end mt-4">
            @if (Route::has('password.request'))
                <a class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" href="{{ route('password.request') }}">
                    {{ __('Forgot your password?') }}
                </a>
            @endif

            <x-primary-button class="ms-3">
                {{ __('Login') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>



================================================
FILE: resources/views/auth/register.blade.php
================================================
<x-guest-layout>
    <form method="POST" action="{{ route('register') }}">
        @csrf

        <!-- Name -->
        <div>
            <x-input-label for="name" :value="__('Name')" />
            <x-text-input id="name" class="block mt-1 w-full" type="text" name="name" :value="old('name')" required autofocus autocomplete="name" />
            <x-input-error :messages="$errors->get('name')" class="mt-2" />
        </div>

        <!-- Email Address -->
        <div class="mt-4">
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email')" required autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />

            <x-text-input id="password" class="block mt-1 w-full"
                            type="password"
                            name="password"
                            required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Confirm Password -->
        <div class="mt-4">
            <x-input-label for="password_confirmation" :value="__('Confirm Password')" />

            <x-text-input id="password_confirmation" class="block mt-1 w-full"
                            type="password"
                            name="password_confirmation" required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <a class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500" href="{{ route('login') }}">
                {{ __('Already registered?') }}
            </a>

            <x-primary-button class="ms-4">
                {{ __('Register') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>



================================================
FILE: resources/views/auth/reset-password.blade.php
================================================
<x-guest-layout>
    <form method="POST" action="{{ route('password.store') }}">
        @csrf

        <!-- Password Reset Token -->
        <input type="hidden" name="token" value="{{ $request->route('token') }}">

        <!-- Email Address -->
        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" class="block mt-1 w-full" type="email" name="email" :value="old('email', $request->email)" required autofocus autocomplete="username" />
            <x-input-error :messages="$errors->get('email')" class="mt-2" />
        </div>

        <!-- Password -->
        <div class="mt-4">
            <x-input-label for="password" :value="__('Password')" />
            <x-text-input id="password" class="block mt-1 w-full" type="password" name="password" required autocomplete="new-password" />
            <x-input-error :messages="$errors->get('password')" class="mt-2" />
        </div>

        <!-- Confirm Password -->
        <div class="mt-4">
            <x-input-label for="password_confirmation" :value="__('Confirm Password')" />

            <x-text-input id="password_confirmation" class="block mt-1 w-full"
                                type="password"
                                name="password_confirmation" required autocomplete="new-password" />

            <x-input-error :messages="$errors->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center justify-end mt-4">
            <x-primary-button>
                {{ __('Reset Password') }}
            </x-primary-button>
        </div>
    </form>
</x-guest-layout>



================================================
FILE: resources/views/auth/verify-email.blade.php
================================================
<x-guest-layout>
    <div class="mb-4 text-sm text-gray-600">
        {{ __('Thanks for signing up! Before getting started, could you verify your email address by clicking on the link we just emailed to you? If you didn\'t receive the email, we will gladly send you another.') }}
    </div>

    @if (session('status') == 'verification-link-sent')
        <div class="mb-4 font-medium text-sm text-green-600">
            {{ __('A new verification link has been sent to the email address you provided during registration.') }}
        </div>
    @endif

    <div class="mt-4 flex items-center justify-between">
        <form method="POST" action="{{ route('verification.send') }}">
            @csrf

            <div>
                <x-primary-button>
                    {{ __('Resend Verification Email') }}
                </x-primary-button>
            </div>
        </form>

        <form method="POST" action="{{ route('logout') }}">
            @csrf

            <button type="submit" class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                {{ __('Log Out') }}
            </button>
        </form>
    </div>
</x-guest-layout>



================================================
FILE: resources/views/books/create.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-plus-circle text-primary"></i>
                    </div>
                    <span class="gradient-text">បន្ថែមសៀវភៅថ្មី</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    បំពេញព័ត៌មានលម្អិតរបស់សៀវភៅថ្មី
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('books.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card modern-card">
                <div class="card-header bg-gradient-primary text-white">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-book-half"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានសៀវភៅ</h6>
                            <small class="opacity-75 khmer-regular">សូមបំពេញព័ត៌មានទាំងអស់ដែលចាំបាច់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form action="{{ route('books.store') }}" method="POST" class="book-form">
                        @csrf

                        <!-- Basic Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-info-circle text-primary me-2"></i>
                                    ព័ត៌មានមូលដ្ឋាន
                                </h5>
                                <p class="section-description khmer-regular">ព័ត៌មានទូទៅអំពីសៀវភៅ</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-8">
                                    <label for="title" class="form-label khmer-medium required">
                                        <i class="bi bi-card-text me-1"></i>ចំណងជើងសៀវភៅ
                                    </label>
                                    <input type="text"
                                           class="form-control modern-input @error('title') is-invalid @enderror"
                                           id="title"
                                           name="title"
                                           value="{{ old('title') }}"
                                           placeholder="បញ្ចូលចំណងជើងសៀវភៅ..."
                                           required>
                                    @error('title')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="published_year" class="form-label khmer-medium">
                                        <i class="bi bi-calendar3 me-1"></i>ឆ្នាំបោះពុម្ព
                                    </label>
                                    <input type="number"
                                           class="form-control modern-input @error('published_year') is-invalid @enderror"
                                           id="published_year"
                                           name="published_year"
                                           value="{{ old('published_year') }}"
                                           min="1000"
                                           max="{{ date('Y') }}"
                                           placeholder="ឆ្នាំ">
                                    @error('published_year')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-6">
                                    <label for="author" class="form-label khmer-medium required">
                                        <i class="bi bi-person me-1"></i>អ្នកនិពន្ធ
                                    </label>
                                    <input type="text"
                                           class="form-control modern-input @error('author') is-invalid @enderror"
                                           id="author"
                                           name="author"
                                           value="{{ old('author') }}"
                                           placeholder="ឈ្មោះអ្នកនិពន្ធ..."
                                           required>
                                    @error('author')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="genre" class="form-label khmer-medium required">
                                        <i class="bi bi-tag me-1"></i>ប្រភេទសៀវភៅ
                                    </label>
                                    <select class="form-select modern-input @error('genre') is-invalid @enderror"
                                            id="genre"
                                            name="genre"
                                            required>
                                        <option value="">ជ្រើសរើសប្រភេទសៀវភៅ</option>
                                        <option value="Fiction" {{ old('genre') === 'Fiction' ? 'selected' : '' }}>Fiction (រឿងប្រលោមលោក)</option>
                                        <option value="Non-Fiction" {{ old('genre') === 'Non-Fiction' ? 'selected' : '' }}>Non-Fiction (មិនមែនប្រលោមលោក)</option>
                                        <option value="Science Fiction" {{ old('genre') === 'Science Fiction' ? 'selected' : '' }}>Science Fiction (រឿងប្រលោមលោកវិទ្យាសាស្ត្រ)</option>
                                        <option value="Fantasy" {{ old('genre') === 'Fantasy' ? 'selected' : '' }}>Fantasy (ការស្រមើលស្រមៃ)</option>
                                        <option value="Mystery" {{ old('genre') === 'Mystery' ? 'selected' : '' }}>Mystery (អាថ៌កំបាំង)</option>
                                        <option value="Romance" {{ old('genre') === 'Romance' ? 'selected' : '' }}>Romance (ស្នេហា)</option>
                                        <option value="Biography" {{ old('genre') === 'Biography' ? 'selected' : '' }}>Biography (ជីវប្រវត្តិ)</option>
                                        <option value="History" {{ old('genre') === 'History' ? 'selected' : '' }}>History (ប្រវត្តិសាស្ត្រ)</option>
                                        <option value="Education" {{ old('genre') === 'Education' ? 'selected' : '' }}>Education (អប់រំ)</option>
                                        <option value="Children" {{ old('genre') === 'Children' ? 'selected' : '' }}>Children (កុមារ)</option>
                                    </select>
                                    @error('genre')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-12">
                                    <label for="isbn" class="form-label khmer-medium required">
                                        <i class="bi bi-upc-scan me-1"></i>លេខ ISBN
                                    </label>
                                    <input type="text"
                                           class="form-control modern-input @error('isbn') is-invalid @enderror"
                                           id="isbn"
                                           name="isbn"
                                           value="{{ old('isbn') }}"
                                           placeholder="978-0-123-45678-9"
                                           pattern="[0-9\-]+"
                                           required>
                                    <div class="form-text khmer-regular">
                                        <i class="bi bi-info-circle me-1"></i>
                                        បញ្ចូលលេខ ISBN ១០ ខ្ទង់ ឬ ១៣ ខ្ទង់
                                    </div>
                                    @error('isbn')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Description Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-file-text text-primary me-2"></i>
                                    បរិយាយអំពីសៀវភៅ
                                </h5>
                                <p class="section-description khmer-regular">ព័ត៌មានលម្អិតអំពីខ្លឹមសារសៀវភៅ</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-12">
                                    <label for="description" class="form-label khmer-medium">
                                        <i class="bi bi-card-text me-1"></i>សេចក្តីសង្ខេប
                                    </label>
                                    <textarea class="form-control modern-input @error('description') is-invalid @enderror"
                                              id="description"
                                              name="description"
                                              rows="5"
                                              placeholder="បរិយាយសង្ខេបអំពីខ្លឹមសារ និងចំណុចសំខាន់នៃសៀវភៅ...">{{ old('description') }}</textarea>
                                    <div class="form-text khmer-regular">
                                        <i class="bi bi-lightbulb me-1"></i>
                                        បរិយាយអំពីខ្លឹមសារ ប្រធានបទ និងចំណុចសំខាន់នៃសៀវភៅ
                                    </div>
                                    @error('description')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Inventory Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-stack text-primary me-2"></i>
                                    ការគ្រប់គ្រងស្តុក
                                </h5>
                                <p class="section-description khmer-regular">ចំនួនសៀវភៅនិងភាពអាចរកបាន</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="total_copies" class="form-label khmer-medium required">
                                        <i class="bi bi-stack me-1"></i>ចំនួនសៀវភៅសរុប
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <i class="bi bi-book-half"></i>
                                        </span>
                                        <input type="number"
                                               class="form-control modern-input @error('total_copies') is-invalid @enderror"
                                               id="total_copies"
                                               name="total_copies"
                                               value="{{ old('total_copies', 1) }}"
                                               min="1"
                                               max="999"
                                               required>
                                        <span class="input-group-text khmer-regular">ក្បាល</span>
                                    </div>
                                    @error('total_copies')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="available_copies" class="form-label khmer-medium required">
                                        <i class="bi bi-check-circle me-1"></i>ចំនួនដែលអាចខ្ចីបាន
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <i class="bi bi-check-square"></i>
                                        </span>
                                        <input type="number"
                                               class="form-control modern-input @error('available_copies') is-invalid @enderror"
                                               id="available_copies"
                                               name="available_copies"
                                               value="{{ old('available_copies', 1) }}"
                                               min="0"
                                               max="999"
                                               required>
                                        <span class="input-group-text khmer-regular">ក្បាល</span>
                                    </div>
                                    <div class="form-text khmer-regular">
                                        <i class="bi bi-info-circle me-1"></i>
                                        ត្រូវតែតិចជាង ឬ ស្មើនឹងចំនួនសរុប
                                    </div>
                                    @error('available_copies')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <!-- Stock Status Preview -->
                            <div class="row g-4 mt-2">
                                <div class="col-md-12">
                                    <div class="stock-preview">
                                        <h6 class="khmer-medium mb-3">
                                            <i class="bi bi-eye me-1"></i>មើលជាមុនស្ថានភាពស្តុក
                                        </h6>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="preview-card total">
                                                    <div class="preview-icon">
                                                        <i class="bi bi-stack"></i>
                                                    </div>
                                                    <div class="preview-content">
                                                        <div class="preview-number khmer-bold" id="preview-total">១</div>
                                                        <div class="preview-label khmer-regular">សរុប</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="preview-card available">
                                                    <div class="preview-icon">
                                                        <i class="bi bi-check-circle"></i>
                                                    </div>
                                                    <div class="preview-content">
                                                        <div class="preview-number khmer-bold" id="preview-available">១</div>
                                                        <div class="preview-label khmer-regular">អាចខ្ចីបាន</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="preview-card borrowed">
                                                    <div class="preview-icon">
                                                        <i class="bi bi-arrow-right-circle"></i>
                                                    </div>
                                                    <div class="preview-content">
                                                        <div class="preview-number khmer-bold" id="preview-borrowed">០</div>
                                                        <div class="preview-label khmer-regular">កំពុងខ្ចី</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="form-help">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-info-circle me-1"></i>
                                                កន្លែងដែលមាន <span class="text-danger">*</span> គឺចាំបាច់ត្រូវបំពេញ
                                            </small>
                                        </div>
                                        <div class="action-buttons">
                                            <a href="{{ route('books.index') }}" class="btn btn-outline-secondary me-3 khmer-medium">
                                                <i class="bi bi-x-circle me-1"></i>បោះបង់
                                            </a>
                                            <button type="submit" class="btn btn-primary modern-btn khmer-medium">
                                                <i class="bi bi-check-circle me-2"></i>រក្សាទុកសៀវភៅ
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles -->
    <style>
        /* Form styling */
        .book-form {
            font-family: 'Noto Sans Khmer', sans-serif;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 1rem;
        }

        .section-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .section-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .section-description {
            color: #6c757d;
            font-size: 0.95rem;
        }

        /* Modern input styling */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fff;
        }

        .modern-input:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.15);
            background: #fff;
        }

        .modern-input.is-invalid {
            border-color: #dc3545;
        }

        .modern-input.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.15);
        }

        /* Form labels */
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label.required::after {
            content: ' *';
            color: #dc3545;
            font-weight: bold;
        }

        /* Input groups */
        /* Input groups continued */
        .input-group-text {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            background: #f8f9fa;
            color: #6c757d;
        }

        .input-group .modern-input {
            border-radius: 0;
        }

        .input-group .modern-input:first-child {
            border-radius: 10px 0 0 10px;
        }

        .input-group .modern-input:last-child {
            border-radius: 0 10px 10px 0;
        }

        .input-group-text:first-child {
            border-radius: 10px 0 0 10px;
            border-right: none;
        }

        .input-group-text:last-child {
            border-radius: 0 10px 10px 0;
            border-left: none;
        }

        /* Stock preview */
        .stock-preview {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            border: 2px dashed #dee2e6;
        }

        .preview-card {
            display: flex;
            align-items: center;
            background: white;
            border-radius: 10px;
            padding: 1rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            margin-bottom: 1rem;
        }

        .preview-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .preview-card.total {
            border-left: 4px solid #0d6efd;
        }

        .preview-card.available {
            border-left: 4px solid #198754;
        }

        .preview-card.borrowed {
            border-left: 4px solid #ffc107;
        }

        .preview-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1.2rem;
        }

        .preview-card.total .preview-icon {
            background: rgba(13, 110, 253, 0.1);
            color: #0d6efd;
        }

        .preview-card.available .preview-icon {
            background: rgba(25, 135, 84, 0.1);
            color: #198754;
        }

        .preview-card.borrowed .preview-icon {
            background: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }

        .preview-number {
            font-size: 1.5rem;
            margin-bottom: 0.25rem;
        }

        .preview-label {
            font-size: 0.9rem;
            color: #6c757d;
        }

        /* Form actions */
        .form-actions {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .action-buttons .btn-primary {
            box-shadow: 0 4px 15px rgba(13, 110, 253, 0.3);
        }

        .action-buttons .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(13, 110, 253, 0.4);
        }

        /* Form help text */
        .form-text {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 0.5rem;
        }

        /* Form validation */
        .invalid-feedback {
            font-size: 0.875rem;
            margin-top: 0.5rem;
        }

        /* Icons in form */
        .form-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .form-section {
                margin-bottom: 2rem;
                padding-bottom: 1rem;
            }

            .section-header {
                margin-bottom: 1.5rem;
            }

            .preview-card {
                margin-bottom: 0.5rem;
            }

            .action-buttons {
                text-align: center;
            }

            .action-buttons .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .form-help {
                text-align: center;
                margin-bottom: 1rem;
            }
        }

        /* Loading states */
        .btn.loading {
            position: relative;
            color: transparent;
        }

        .btn.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            border: 2px solid currentColor;
            border-radius: 50%;
            border-right-color: transparent;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to {
                transform: translate(-50%, -50%) rotate(360deg);
            }
        }

        /* Animation for form sections */
        .form-section {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Real-time stock preview update
        function updateStockPreview() {
            const totalInput = document.getElementById('total_copies');
            const availableInput = document.getElementById('available_copies');

            const total = parseInt(totalInput.value) || 0;
            const available = parseInt(availableInput.value) || 0;
            const borrowed = Math.max(0, total - available);

            document.getElementById('preview-total').textContent = toKhmerNumbers(total);
            document.getElementById('preview-available').textContent = toKhmerNumbers(available);
            document.getElementById('preview-borrowed').textContent = toKhmerNumbers(borrowed);

            // Update available input max value
            availableInput.max = total;

            // Validate available copies
            if (available > total) {
                availableInput.setCustomValidity('ចំនួនដែលអាចខ្ចីបានមិនអាចច្រើនជាងចំនួនសរុបទេ');
            } else {
                availableInput.setCustomValidity('');
            }
        }

        // Form validation enhancement
        function enhanceFormValidation() {
            const form = document.querySelector('.book-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                // Add real-time validation
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    } else {
                        this.classList.remove('is-valid');
                        this.classList.add('is-invalid');
                    }
                });

                // Remove validation classes on focus
                input.addEventListener('focus', function() {
                    this.classList.remove('is-valid', 'is-invalid');
                });
            });

            // Custom validation for ISBN
            const isbnInput = document.getElementById('isbn');
            isbnInput.addEventListener('input', function() {
                const isbn = this.value.replace(/[^\d]/g, '');
                if (isbn.length === 10 || isbn.length === 13) {
                    this.setCustomValidity('');
                } else if (this.value.length > 0) {
                    this.setCustomValidity('លេខ ISBN ត្រូវតែមាន ១០ ឬ ១៣ ខ្ទង់');
                }
            });

            // Auto-format ISBN
            isbnInput.addEventListener('blur', function() {
                let isbn = this.value.replace(/[^\d]/g, '');
                if (isbn.length === 10) {
                    this.value = isbn.replace(/(\d{1})(\d{3})(\d{5})(\d{1})/, '$1-$2-$3-$4');
                } else if (isbn.length === 13) {
                    this.value = isbn.replace(/(\d{3})(\d{1})(\d{3})(\d{5})(\d{1})/, '$1-$2-$3-$4-$5');
                }
            });
        }

        // Auto-save to localStorage
        function setupAutoSave() {
            const form = document.querySelector('.book-form');
            const inputs = form.querySelectorAll('input, select, textarea');
            const formData = 'bookFormData';

            // Load saved data
            const saved = localStorage.getItem(formData);
            if (saved) {
                const data = JSON.parse(saved);
                Object.keys(data).forEach(key => {
                    const input = form.querySelector(`[name="${key}"]`);
                    if (input && !input.value) {
                        input.value = data[key];
                    }
                });
                updateStockPreview();
            }

            // Save data on input
            inputs.forEach(input => {
                input.addEventListener('input', debounce(() => {
                    const data = {};
                    inputs.forEach(inp => {
                        if (inp.value) data[inp.name] = inp.value;
                    });
                    localStorage.setItem(formData, JSON.stringify(data));
                }, 500));
            });

            // Clear saved data on successful submitting
            form.addEventListener('submit', function() {
                localStorage.removeItem(formData);
            });
        }

        // Debounce function
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Character counter for description
        function setupCharacterCounter() {
            const textarea = document.getElementById('description');
            const maxLength = 1000;

            // Create counter element
            const counter = document.createElement('div');
            counter.className = 'form-text text-end khmer-regular';
            counter.innerHTML = `<span id="char-count">០</span>/${toKhmerNumbers(maxLength)} តួអក្សរ`;
            textarea.parentNode.appendChild(counter);

            // Update counter
            function updateCounter() {
                const count = textarea.value.length;
                document.getElementById('char-count').textContent = toKhmerNumbers(count);

                if (count > maxLength * 0.9) {
                    counter.className = 'form-text text-end text-warning khmer-regular';
                } else if (count > maxLength) {
                    counter.className = 'form-text text-end text-danger khmer-regular';
                } else {
                    counter.className = 'form-text text-end text-muted khmer-regular';
                }
            }

            textarea.addEventListener('input', updateCounter);
            textarea.setAttribute('maxlength', maxLength);
            updateCounter();
        }

        // Smart suggestions
        function setupSmartSuggestions() {
            const genreSelect = document.getElementById('genre');
            genreSelect.style = undefined;
            genreSelect.value = undefined;
            genreSelect.value = undefined;
            const titleInput = document.getElementById('title');

            // Auto-suggest genre based on title keywords
            const genreKeywords = {
                'Fiction': ['story', 'novel', 'tale', 'រឿង', 'ប្រលោមលោក'],
                'Science Fiction': ['space', 'future', 'robot', 'sci-fi', 'វិទ្យាសាស្ត្រ'],
                'Fantasy': ['magic', 'dragon', 'wizard', 'ម្ចាស់', 'អាថ៌កំបាំង'],
                'Biography': ['life', 'biography', 'memoir', 'ជីវិត', 'ប្រវត្តិ'],
                'History': ['history', 'war', 'ancient', 'ប្រវត្តិសាស្ត្រ'],
                'Education': ['learn', 'teach', 'study', 'school', 'អប់រំ', 'សិក្សា'],
                'Children': ['kid', 'child', 'baby', 'កុមារ', 'ក្មេង']
            };

            titleInput.addEventListener('input', debounce(() => {
                const title = titleInput.value.toLowerCase();
                let suggestedGenre = '';
                let maxMatches = 0;

                Object.keys(genreKeywords).forEach(genre => {
                    const matches = genreKeywords[genre].filter(keyword =>
                        title.includes(keyword.toLowerCase())
                    ).length;

                    if (matches > maxMatches) {
                        maxMatches = matches;
                        suggestedGenre = genre;
                    }
                });

                if (suggestedGenre && !genreSelect.value) {
                    genreSelect.value = suggestedGenre;
                    genreSelect.style.backgroundColor = '#fff3cd';
                    setTimeout(() => {
                        genreSelect.style.backgroundColor = '';
                    }, 2000);
                }
            }, 1000));
        }

        // Form submission enhancement
        function enhanceFormSubmission() {
            const form = document.querySelector('.book-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            form.addEventListener('submit', function(e) {
                // Show loading state
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងរក្សាទុក...';
                submitBtn.disabled = true;

                // Validate form one more time
                if (!form.checkValidity()) {
                    e.preventDefault();
                    submitBtn.classList.remove('loading');
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;

                    // Show a validation message
                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Convert existing numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                element.textContent = toKhmerNumbers(element.textContent);
            });

            // Setup all enhancements
            updateStockPreview();
            enhanceFormValidation();
            setupAutoSave();
            setupCharacterCounter();
            setupSmartSuggestions();
            enhanceFormSubmission();

            // Add event listeners for stock preview
            document.getElementById('total_copies').addEventListener('input', updateStockPreview);
            document.getElementById('available_copies').addEventListener('input', updateStockPreview);

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations
            const sections = document.querySelectorAll('.form-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });

            // Autofocus first input
            const firstInput = document.getElementById('title');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 300);
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + S to save (prevent default and trigger form submit)
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                document.querySelector('.book-form').dispatchEvent(new Event('submit'));
            }

            // Escape to cancel
            if (e.key === 'Escape') {
                if (confirm('តើអ្នកពិតជាចង់បោះបង់ការបញ្ចូលទិន្នន័យមែនទេ?')) {
                    window.location.href = "{{ route('books.index') }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/books/edit.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-pencil-square text-warning"></i>
                    </div>
                    <span class="gradient-text">កែប្រែសៀវភៅ</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    កែប្រែព័ត៌មានសៀវភៅ: <span class="text-primary">{{ $book->title }}</span>
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('books.show', $book) }}" class="btn btn-outline-info modern-btn me-2 khmer-medium">
                    <i class="bi bi-eye me-2"></i>មើលលម្អិត
                </a>
                <a href="{{ route('books.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Current Book Info Card -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-info text-white">
                    <div class="d-flex align-items-center">
                        <div class="current-book-icon me-3">
                            <i class="bi bi-book"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានបច្ចុប្បន្ន</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានដែលមានស្រាប់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ចំណងជើង</small>
                                <div class="fw-semibold khmer-medium">{{ $book->title }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">អ្នកនិពន្ធ</small>
                                <div class="fw-semibold khmer-regular">{{ $book->author }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ប្រភេទ</small>
                                <div class="fw-semibold khmer-regular">{{ $book->genre }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ចំនួនស្តុក</small>
                                <div class="fw-semibold khmer-number">{{ $book->available_copies }}/{{ $book->total_copies }}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Form Card -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-warning text-dark">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-pencil-square"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">កែប្រែព័ត៌មាន</h6>
                            <small class="opacity-75 khmer-regular">កែប្រែព័ត៌មានដែលចាំបាច់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form action="{{ route('books.update', $book) }}" method="POST" class="book-edit-form">
                        @csrf
                        @method('PUT')

                        <!-- Basic Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-info-circle text-warning me-2"></i>
                                    ព័ត៌មានមូលដ្ឋាន
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែព័ត៌មានទូទៅអំពីសៀវភៅ</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-8">
                                    <label for="title" class="form-label khmer-medium required">
                                        <i class="bi bi-card-text me-1"></i>ចំណងជើងសៀវភៅ
                                    </label>
                                    <div class="input-comparison">
                                        <div class="input-with-comparison">
                                            <input type="text"
                                                   class="form-control modern-input @error('title') is-invalid @enderror"
                                                   id="title"
                                                   name="title"
                                                   value="{{ old('title', $book->title) }}"
                                                   placeholder="បញ្ចូលចំណងជើងសៀវភៅ..."
                                                   required>
                                            @if(old('title', $book->title) !== $book->title)
                                                <small class="text-info khmer-regular">
                                                    <i class="bi bi-arrow-right me-1"></i>
                                                    ពីមុន: {{ $book->title }}
                                                </small>
                                            @endif
                                        </div>
                                    </div>
                                    @error('title')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="published_year" class="form-label khmer-medium">
                                        <i class="bi bi-calendar3 me-1"></i>ឆ្នាំបោះពុម្ព
                                    </label>
                                    <input type="number"
                                           class="form-control modern-input @error('published_year') is-invalid @enderror"
                                           id="published_year"
                                           name="published_year"
                                           value="{{ old('published_year', $book->published_year) }}"
                                           min="1000"
                                           max="{{ date('Y') }}"
                                           placeholder="ឆ្នាំ">
                                    @error('published_year')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-6">
                                    <label for="author" class="form-label khmer-medium required">
                                        <i class="bi bi-person me-1"></i>អ្នកនិពន្ធ
                                    </label>
                                    <input type="text"
                                           class="form-control modern-input @error('author') is-invalid @enderror"
                                           id="author"
                                           name="author"
                                           value="{{ old('author', $book->author) }}"
                                           placeholder="ឈ្មោះអ្នកនិពន្ធ..."
                                           required>
                                    @error('author')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="genre" class="form-label khmer-medium required">
                                        <i class="bi bi-tag me-1"></i>ប្រភេទសៀវភៅ
                                    </label>
                                    <select class="form-select modern-input @error('genre') is-invalid @enderror"
                                            id="genre"
                                            name="genre"
                                            required>
                                        <option value="">ជ្រើសរើសប្រភេទសៀវភៅ</option>
                                        <option value="Fiction" {{ old('genre', $book->genre) === 'Fiction' ? 'selected' : '' }}>Fiction (រឿងប្រលោមលោក)</option>
                                        <option value="Non-Fiction" {{ old('genre', $book->genre) === 'Non-Fiction' ? 'selected' : '' }}>Non-Fiction (មិនមែនប្រលោមលោក)</option>
                                        <option value="Science Fiction" {{ old('genre', $book->genre) === 'Science Fiction' ? 'selected' : '' }}>Science Fiction (រឿងប្រលោមលោកវិទ្យាសាស្ត្រ)</option>
                                        <option value="Fantasy" {{ old('genre', $book->genre) === 'Fantasy' ? 'selected' : '' }}>Fantasy (ការស្រមើលស្រមៃ)</option>
                                        <option value="Mystery" {{ old('genre', $book->genre) === 'Mystery' ? 'selected' : '' }}>Mystery (អាថ៌កំបាំង)</option>
                                        <option value="Romance" {{ old('genre', $book->genre) === 'Romance' ? 'selected' : '' }}>Romance (ស្នេហា)</option>
                                        <option value="Biography" {{ old('genre', $book->genre) === 'Biography' ? 'selected' : '' }}>Biography (ជីវប្រវត្តិ)</option>
                                        <option value="History" {{ old('genre', $book->genre) === 'History' ? 'selected' : '' }}>History (ប្រវត្តិសាស្ត្រ)</option>
                                        <option value="Education" {{ old('genre', $book->genre) === 'Education' ? 'selected' : '' }}>Education (អប់រំ)</option>
                                        <option value="Children" {{ old('genre', $book->genre) === 'Children' ? 'selected' : '' }}>Children (កុមារ)</option>
                                    </select>
                                    @error('genre')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-12">
                                    <label for="isbn" class="form-label khmer-medium required">
                                        <i class="bi bi-upc-scan me-1"></i>លេខ ISBN
                                    </label>
                                    <input type="text"
                                           class="form-control modern-input @error('isbn') is-invalid @enderror"
                                           id="isbn"
                                           name="isbn"
                                           value="{{ old('isbn', $book->isbn) }}"
                                           placeholder="978-0-123-45678-9"
                                           pattern="[0-9\-]+"
                                           required>
                                    <div class="form-text khmer-regular">
                                        <i class="bi bi-info-circle me-1"></i>
                                        បញ្ចូលលេខ ISBN ១០ ខ្ទង់ ឬ ១៣ ខ្ទង់
                                    </div>
                                    @error('isbn')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Description Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-file-text text-warning me-2"></i>
                                    បរិយាយអំពីសៀវភៅ
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែព័ត៌មានលម្អិតអំពីខ្លឹមសារសៀវភៅ</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-12">
                                    <label for="description" class="form-label khmer-medium">
                                        <i class="bi bi-card-text me-1"></i>សេចក្តីសង្ខេប
                                    </label>
                                    <textarea class="form-control modern-input @error('description') is-invalid @enderror"
                                              id="description"
                                              name="description"
                                              rows="5"
                                              placeholder="បរិយាយសង្ខេបអំពីខ្លឹមសារ និងចំណុចសំខាន់នៃសៀវភៅ...">{{ old('description', $book->description) }}</textarea>
                                    <div class="form-text khmer-regular">
                                        <i class="bi bi-lightbulb me-1"></i>
                                        បរិយាយអំពីខ្លឹមសារ ប្រធានបទ និងចំណុចសំខាន់នៃសៀវភៅ
                                    </div>
                                    @error('description')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Inventory Section with Warning -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-stack text-warning me-2"></i>
                                    ការគ្រប់គ្រងស្តុក
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែចំនួនសៀវភៅនិងភាពអាចរកបាន</p>
                                @if($book->activeBorrowings()->count() > 0)
                                    <div class="alert alert-warning khmer-regular" role="alert">
                                        <i class="bi bi-exclamation-triangle me-2"></i>
                                        <strong>ការព្រមាន:</strong> សៀវភៅនេះមានការខ្ចីសកម្ម {{ $book->activeBorrowings()->count() }} ក្បាល។
                                        ត្រូវប្រុងប្រយ័ត្នពេលកែប្រែចំនួន។
                                    </div>
                                @endif
                            </div>

                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="total_copies" class="form-label khmer-medium required">
                                        <i class="bi bi-stack me-1"></i>ចំនួនសៀវភៅសរុប
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <i class="bi bi-book-half"></i>
                                        </span>
                                        <input type="number"
                                               class="form-control modern-input @error('total_copies') is-invalid @enderror"
                                               id="total_copies"
                                               name="total_copies"
                                               value="{{ old('total_copies', $book->total_copies) }}"
                                               min="1"
                                               max="999"
                                               required>
                                        <span class="input-group-text khmer-regular">ក្បាល</span>
                                    </div>
                                    <small class="text-muted khmer-regular">
                                        បច្ចុប្បន្ន: <span class="khmer-number">{{ $book->total_copies }}</span> ក្បាល
                                    </small>
                                    @error('total_copies')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="available_copies" class="form-label khmer-medium required">
                                        <i class="bi bi-check-circle me-1"></i>ចំនួនដែលអាចខ្ចីបាន
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text">
                                            <i class="bi bi-check-square"></i>
                                        </span>
                                        <input type="number"
                                               class="form-control modern-input @error('available_copies') is-invalid @enderror"
                                               id="available_copies"
                                               name="available_copies"
                                               value="{{ old('available_copies', $book->available_copies) }}"
                                               min="0"
                                               max="999"
                                               required>
                                        <span class="input-group-text khmer-regular">ក្បាល</span>
                                    </div>
                                    <small class="text-muted khmer-regular">
                                        បច្ចុប្បន្ន: <span class="khmer-number">{{ $book->available_copies }}</span> ក្បាល |
                                        កំពុងខ្ចី: <span class="khmer-number">{{ $book->total_copies - $book->available_copies }}</span> ក្បាល
                                    </small>
                                    @error('available_copies')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <!-- Updated Stock Status Preview -->
                            <div class="row g-4 mt-2">
                                <div class="col-md-12">
                                    <div class="stock-preview">
                                        <h6 class="khmer-medium mb-3">
                                            <i class="bi bi-eye me-1"></i>មើលជាមុនស្ថានភាពស្តុកបន្ទាប់ពីកែប្រែ
                                        </h6>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="preview-card total">
                                                    <div class="preview-icon">
                                                        <i class="bi bi-stack"></i>
                                                    </div>
                                                    <div class="preview-content">
                                                        <div class="preview-number khmer-bold" id="preview-total">{{ $book->total_copies }}</div>
                                                        <div class="preview-label khmer-regular">សរុប</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="preview-card available">
                                                    <div class="preview-icon">
                                                        <i class="bi bi-check-circle"></i>
                                                    </div>
                                                    <div class="preview-content">
                                                        <div class="preview-number khmer-bold" id="preview-available">{{ $book->available_copies }}</div>
                                                        <div class="preview-label khmer-regular">អាចខ្ចីបាន</div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="preview-card borrowed">
                                                    <div class="preview-icon">
                                                        <i class="bi bi-arrow-right-circle"></i>
                                                    </div>
                                                    <div class="preview-content">
                                                        <div class="preview-number khmer-bold" id="preview-borrowed">{{ $book->total_copies - $book->available_copies }}</div>
                                                        <div class="preview-label khmer-regular">កំពុងខ្ចី</div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Change Summary Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-list-check text-warning me-2"></i>
                                    សេចក្តីសង្ខេបការផ្លាស់ប្តូរ
                                </h5>
                                <p class="section-description khmer-regular">ការផ្លាស់ប្តូរដែលនឹងត្រូវរក្សាទុក</p>
                            </div>

                            <div class="change-summary" id="change-summary">
                                <div class="alert alert-info khmer-regular">
                                    <i class="bi bi-info-circle me-2"></i>
                                    កែប្រែការបញ្ចូលទិន្នន័យ ដើម្បីមើលការផ្លាស់ប្តូរ
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="form-help">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-info-circle me-1"></i>
                                                កន្លែងដែលមាន <span class="text-danger">*</span> គឺចាំបាច់ត្រូវបំពេញ
                                            </small>
                                        </div>
                                        <div class="action-buttons">
                                            <a href="{{ route('books.show', $book) }}" class="btn btn-outline-secondary me-3 khmer-medium">
                                                <i class="bi bi-x-circle me-1"></i>បោះបង់
                                            </a>
                                            <button type="button" class="btn btn-info me-2 khmer-medium" onclick="resetForm()">
                                                <i class="bi bi-arrow-clockwise me-1"></i>កំណត់ឡើងវិញ
                                            </button>
                                            <button type="submit" class="btn btn-success modern-btn khmer-medium">
                                                <i class="bi bi-check-circle me-2"></i>រក្សាទុកការកែប្រែ
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Edit Page -->
    <style>
        /* Current book info styling */
        .current-book-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .current-info-item {
            padding: 0.75rem;
            background: rgba(255,255,255,0.1);
            border-radius: 8px;
            text-align: center;
        }

        .current-info-item small {
            display: block;
            margin-bottom: 0.25rem;
        }

        /* Input comparison styling */
        .input-comparison {
            position: relative;
        }

        .input-with-comparison .form-control {
            margin-bottom: 0.25rem;
        }

        /* Change detection styling */
        .form-control.changed {
            border-color: #ffc107;
            background-color: #fff8e1;
        }

        .form-control.changed:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
        }

        /* Change summary styling */
        .change-summary {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            border: 2px dashed #dee2e6;
        }

        .change-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            background: white;
            border-radius: 8px;
            margin-bottom: 0.5rem;
            border-left: 4px solid #ffc107;
        }

        .change-item:last-child {
            margin-bottom: 0;
        }

        .change-field {
            font-weight: 600;
            color: #495057;
        }

        .change-values {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .old-value {
            color: #6c757d;
            text-decoration: line-through;
            font-size: 0.9rem;
        }

        .new-value {
            color: #ffc107;
            font-weight: 600;
        }

        .change-arrow {
            color: #ffc107;
        }

        /* Enhanced form styling */
        .book-edit-form {
            font-family: 'Noto Sans Khmer', sans-serif;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 1rem;
        }

        .section-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .section-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .section-description {
            color: #6c757d;
            font-size: 0.95rem;
        }

        /* Modern input styling */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fff;
        }

        .modern-input:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.15);
            background: #fff;
        }

        .modern-input.is-invalid {
            border-color: #dc3545;
        }

        .modern-input.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.15);
        }

        /* Form labels */
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label.required::after {
            content: ' *';
            color: #dc3545;
            font-weight: bold;
        }

        /* Input groups */
        .input-group-text {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            background: #f8f9fa;
            color: #6c757d;
        }

        .input-group .modern-input {
            border-radius: 0;
        }

        .input-group .modern-input:first-child {
            border-radius: 10px 0 0 10px;
        }

        .input-group .modern-input:last-child {
            border-radius: 0 10px 10px 0;
        }

        .input-group-text:first-child {
            border-radius: 10px 0 0 10px;
            border-right: none;
        }

        .input-group-text:last-child {
            border-radius: 0 10px 10px 0;
            border-left: none;
        }

        /* Stock preview (reuse from create page) */
        .stock-preview {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            border: 2px dashed #dee2e6;
        }

        .preview-card {
            display: flex;
            align-items: center;
            background: white;
            border-radius: 10px;
            padding: 1rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            margin-bottom: 1rem;
        }

        .preview-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .preview-card.total {
            border-left: 4px solid #0d6efd;
        }

        .preview-card.available {
            border-left: 4px solid #198754;
        }

        .preview-card.borrowed {
            border-left: 4px solid #ffc107;
        }

        .preview-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1.2rem;
        }

        .preview-card.total .preview-icon {
            background: rgba(13, 110, 253, 0.1);
            color: #0d6efd;
        }

        .preview-card.available .preview-icon {
            background: rgba(25, 135, 84, 0.1);
            color: #198754;
        }

        .preview-card.borrowed .preview-icon {
            background: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }

        .preview-number {
            font-size: 1.5rem;
            margin-bottom: 0.25rem;
        }

        .preview-label {
            font-size: 0.9rem;
            color: #6c757d;
        }

        /* Form actions */
        .form-actions {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .action-buttons .btn-success {
            box-shadow: 0 4px 15px rgba(25, 135, 84, 0.3);
        }

        .action-buttons .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(25, 135, 84, 0.4);
        }

        /* Form help text */
        .form-text {
            font-size: 0.875rem;
            color: #6c757d;
            margin-top: 0.5rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .current-info-item {
                margin-bottom: 1rem;
            }

            .form-section {
                margin-bottom: 2rem;
                padding-bottom: 1rem;
            }

            .section-header {
                margin-bottom: 1.5rem;
            }

            .action-buttons {
                text-align: center;
            }

            .action-buttons .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .form-help {
                text-align: center;
                margin-bottom: 1rem;
            }
        }

        /* Animation for form sections */
        .form-section {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Loading states */
        .btn.loading {
            position: relative;
            color: transparent;
        }

        .btn.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            border: 2px solid currentColor;
            border-radius: 50%;
            border-right-color: transparent;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to {
                transform: translate(-50%, -50%) rotate(360deg);
            }
        }
    </style>

    <!-- Enhanced JavaScript for Edit Page -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Original book data for comparison
        const originalBook = {
            title: {{ Js::from($book->title) }},
            author: {{ Js::from($book->author) }},
            genre: {{ Js::from($book->genre) }},
            isbn: {{ Js::from($book->isbn) }},
            description: {{ Js::from($book->description) }},
            published_year: {{ Js::from($book->published_year) }},
            total_copies: {{ Js::from($book->total_copies) }},
            available_copies: {{ Js::from($book->available_copies) }}
        };

        // Track form changes
        function trackChanges() {
            const form = document.querySelector('.book-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    updateChangeSummary();
                    updateStockPreview();
                    highlightChangedFields();
                });
            });
        }

        // Highlight changed fields
        function highlightChangedFields() {
            const form = document.querySelector('.book-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                const currentValue = input.value;
                const originalValue = originalBook[input.name];

                if (currentValue != originalValue && originalValue !== null) {
                    input.classList.add('changed');
                } else {
                    input.classList.remove('changed');
                }
            });
        }

        // Update change summary
        function updateChangeSummary() {
            const form = document.querySelector('.book-edit-form');
            const summaryContainer = document.getElementById('change-summary');
            const inputs = form.querySelectorAll('input, select, textarea');

            let changes = [];

            inputs.forEach(input => {
                const currentValue = input.value;
                const originalValue = originalBook[input.name];
                const fieldName = getFieldDisplayName(input.name);

                if (currentValue != originalValue && originalValue !== null) {
                    changes.push({
                        field: fieldName,
                        oldValue: originalValue,
                        newValue: currentValue
                    });
                }
            });

            if (changes.length === 0) {
                summaryContainer.innerHTML = `
                    <div class="alert alert-info khmer-regular">
                        <i class="bi bi-info-circle me-2"></i>
                        មិនមានការផ្លាស់ប្តូរ
                    </div>
                `;
            } else {
                let changesHtml = '<div class="changes-list">';
                changes.forEach(change => {
                    changesHtml += `
                        <div class="change-item">
                            <div class="change-field khmer-medium">${change.field}</div>
                            <div class="change-values">
                                <span class="old-value khmer-regular">${change.oldValue || 'ទទេ'}</span>
                                <i class="bi bi-arrow-right change-arrow"></i>
                                <span class="new-value khmer-regular">${change.newValue || 'ទទេ'}</span>
                            </div>
                        </div>
                    `;
                });
                changesHtml += '</div>';
                summaryContainer.innerHTML = changesHtml;
            }
        }

        // Get field display name in Khmer
        function getFieldDisplayName(fieldName) {
            const fieldNames = {
                'title': 'ចំណងជើង',
                'author': 'អ្នកនិពន្ធ',
                'genre': 'ប្រភេទ',
                'isbn': 'លេខ ISBN',
                'description': 'សេចក្តីសង្ខេប',
                'published_year': 'ឆ្នាំបោះពុម្ព',
                'total_copies': 'ចំនួនសរុប',
                'available_copies': 'ចំនួនអាចខ្ចី'
            };

            return fieldNames[fieldName] || fieldName;
        }

        // Real-time stock preview update
        function updateStockPreview() {
            const totalInput = document.getElementById('total_copies');
            const availableInput = document.getElementById('available_copies');

            const total = parseInt(totalInput.value) || 0;
            const available = parseInt(availableInput.value) || 0;
            const borrowed = Math.max(0, total - available);

            document.getElementById('preview-total').textContent = toKhmerNumbers(total);
            document.getElementById('preview-available').textContent = toKhmerNumbers(available);
            document.getElementById('preview-borrowed').textContent = toKhmerNumbers(borrowed);

            // Update available input max value
            availableInput.max = total;

            // Validate available copies
            if (available > total) {
                availableInput.setCustomValidity('ចំនួនដែលអាចខ្ចីបានមិនអាចច្រើនជាងចំនួនសរុបទេ');
            } else {
                availableInput.setCustomValidity('');
            }
        }

        // Reset form to original values
        function resetForm() {
            if (confirm('តើអ្នកពិតជាចង់កំណត់ទិន្នន័យឡើងវិញមែនទេ? ការផ្លាស់ប្តូរទាំងអស់នឹងបាត់បង់។')) {
                const form = document.querySelector('.book-edit-form');

                Object.keys(originalBook).forEach(field => {
                    const input = form.querySelector(`[name="${field}"]`);
                    if (input) {
                        input.value = originalBook[field] || '';
                        input.classList.remove('changed');
                    }
                });

                updateChangeSummary();
                updateStockPreview();
            }
        }

        // Form validation enhancement
        function enhanceFormValidation() {
            const form = document.querySelector('.book-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                // Add real-time validation
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    } else {
                        this.classList.remove('is-valid');
                        this.classList.add('is-invalid');
                    }
                });

                // Remove validation classes on focus
                input.addEventListener('focus', function() {
                    this.classList.remove('is-valid', 'is-invalid');
                });
            });

            // Custom validation for ISBN
            const isbnInput = document.getElementById('isbn');
            isbnInput.addEventListener('input', function() {
                const isbn = this.value.replace(/[^\d]/g, '');
                if (isbn.length === 10 || isbn.length === 13) {
                    this.setCustomValidity('');
                } else if (this.value.length > 0) {
                    this.setCustomValidity('លេខ ISBN ត្រូវតែមាន ១០ ឬ ១៣ ខ្ទង់');
                }
            });

            // Auto-format ISBN
            isbnInput.addEventListener('blur', function() {
                let isbn = this.value.replace(/[^\d]/g, '');
                if (isbn.length === 10) {
                    this.value = isbn.replace(/(\d{1})(\d{3})(\d{5})(\d{1})/, '$1-$2-$3-$4');
                } else if (isbn.length === 13) {
                    this.value = isbn.replace(/(\d{3})(\d{1})(\d{3})(\d{5})(\d{1})/, '$1-$2-$3-$4-$5');
                }
            });
        }

        // Form submission enhancement
        function enhanceFormSubmission() {
            const form = document.querySelector('.book-edit-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            form.addEventListener('submit', function(e) {
                // Show loading state
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងរក្សាទុក...';
                submitBtn.disabled = true;

                // Validate form one more time
                if (!form.checkValidity()) {
                    e.preventDefault();
                    submitBtn.classList.remove('loading');
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;

                    // Show validation message
                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Convert existing numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                element.textContent = toKhmerNumbers(element.textContent);
            });

            // Setup all enhancements
            trackChanges();
            updateStockPreview();
            updateChangeSummary();
            enhanceFormValidation();
            enhanceFormSubmission();

            // Add event listeners for stock preview
            document.getElementById('total_copies').addEventListener('input', updateStockPreview);
            document.getElementById('available_copies').addEventListener('input', updateStockPreview);

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations
            const sections = document.querySelectorAll('.form-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });

            // Auto-focus first changed field or title
            const changedField = document.querySelector('.form-control.changed');
            const titleField = document.getElementById('title');

            if (changedField) {
                setTimeout(() => changedField.focus(), 300);
            } else if (titleField) {
                setTimeout(() => titleField.focus(), 300);
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + S to save
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                document.querySelector('.book-edit-form').dispatchEvent(new Event('submit'));
            }

            // Ctrl/Cmd + R to reset
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                resetForm();
            }

            // Escape to cancel
            if (e.key === 'Escape') {
                if (confirm('តើអ្នកពិតជាចង់បោះបង់ការកែប្រែមែនទេ?')) {
                    window.location.href = "{{ route('books.show', $book) }}";
                }
            }
        });

        // Auto-save draft
        function setupAutoSave() {
            const form = document.querySelector('.book-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');
            const draftKey = `bookEditDraft_${{{ $book->id }}}`;

            // Load saved draft
            const savedDraft = localStorage.getItem(draftKey);
            if (savedDraft) {
                const draftData = JSON.parse(savedDraft);
                Object.keys(draftData).forEach(key => {
                    const input = form.querySelector(`[name="${key}"]`);
                    if (input && input.value === originalBook[key]) {
                        input.value = draftData[key];
                    }
                });
                updateChangeSummary();
                updateStockPreview();
                highlightChangedFields();
            }

            // Save draft on input
            inputs.forEach(input => {
                input.addEventListener('input', debounce(() => {
                    const draftData = {};
                    inputs.forEach(inp => {
                        if (inp.value !== originalBook[inp.name]) {
                            draftData[inp.name] = inp.value;
                        }
                    });

                    if (Object.keys(draftData).length > 0) {
                        localStorage.setItem(draftKey, JSON.stringify(draftData));
                    } else {
                        localStorage.removeItem(draftKey);
                    }
                }, 500));
            });

            // Clear draft on successful submit
            form.addEventListener('submit', function() {
                localStorage.removeItem(draftKey);
            });
        }

        // Debounce function
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Initialize auto-save
        setupAutoSave();
    </script>
</x-app-layout>



================================================
FILE: resources/views/books/index.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-book text-primary"></i>
                    </div>
                    <span class="gradient-text">គ្រប់គ្រងសៀវភៅ</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-collection me-1"></i>
                    គ្រប់គ្រងបណ្ណាល័យសៀវភៅទាំងអស់
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('books.create') }}" class="btn btn-primary modern-btn khmer-medium">
                    <i class="bi bi-plus-circle me-2"></i>បន្ថែមសៀវភៅថ្មី
                </a>
            </div>
        </div>
    </x-slot>

    <!-- Enhanced Search and Filter Section -->
    <div class="card modern-card mb-4">
        <div class="card-header bg-gradient-primary text-white">
            <div class="d-flex align-items-center">
                <div class="filter-icon me-3">
                    <i class="bi bi-funnel"></i>
                </div>
                <div>
                    <h6 class="card-title mb-0 khmer-semibold">ស្វែងរក និង ត្រងសៀវភៅ</h6>
                    <small class="opacity-75 khmer-regular">ស្វែងរកសៀវភៅតាមបែបផែនណា</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('books.index') }}" class="filter-form">
                <div class="row g-3">
                    <!-- Search Input -->
                    <div class="col-md-4">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-search me-1"></i>ស្វែងរកសៀវភៅ
                        </label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-search text-muted"></i>
                            </span>
                            <input type="text" name="search" class="form-control khmer-regular"
                                   placeholder="ស្វែងរកតាមចំណងជើង, អ្នកនិពន្ធ, ISBN..."
                                   value="{{ request('search') }}">
                        </div>
                    </div>

                    <!-- Genre Filter -->
                    <div class="col-md-3">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-tags me-1"></i>ប្រភេទសៀវភៅ
                        </label>
                        <select name="genre" class="form-select khmer-regular">
                            <option value="">ប្រភេទទាំងអស់</option>
                            @foreach($genres as $genre)
                                <option value="{{ $genre }}" {{ request('genre') == $genre ? 'selected' : '' }}>
                                    {{ $genre }}
                                </option>
                            @endforeach
                        </select>
                    </div>

                    <!-- Availability Filter -->
                    <div class="col-md-3">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-check-square me-1"></i>ភាពអាចរកបាន
                        </label>
                        <select name="availability" class="form-select khmer-regular">
                            <option value="">សៀវភៅទាំងអស់</option>
                            <option value="1" {{ request('availability') == '1' ? 'selected' : '' }}>មានសៀវភៅ</option>
                            <option value="0" {{ request('availability') == '0' ? 'selected' : '' }}>អស់សៀវភៅ</option>
                        </select>
                    </div>

                    <!-- Filter Actions -->
                    <div class="col-md-2">
                        <label class="form-label">&nbsp;</label>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-outline-primary khmer-medium">
                                <i class="bi bi-filter me-1"></i>ត្រង
                            </button>
                            <a href="{{ route('books.index') }}" class="btn btn-outline-secondary btn-sm khmer-regular">
                                <i class="bi bi-arrow-clockwise me-1"></i>កំណត់ឡើងវិញ
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Books Statistics Card -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="stat-mini-card primary">
                <div class="stat-mini-icon">
                    <i class="bi bi-book-half"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $books->total() }}</div>
                    <div class="stat-mini-label khmer-regular">សៀវភៅសរុប</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card success">
                <div class="stat-mini-icon">
                    <i class="bi bi-check-circle"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $books->where('available_copies', '>', 0)->count() }}</div>
                    <div class="stat-mini-label khmer-regular">មានក្នុងស្តុក</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card warning">
                <div class="stat-mini-icon">
                    <i class="bi bi-exclamation-circle"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $books->where('available_copies', 0)->count() }}</div>
                    <div class="stat-mini-label khmer-regular">អស់ស្តុក</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card info">
                <div class="stat-mini-icon">
                    <i class="bi bi-tags"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $genres->count() }}</div>
                    <div class="stat-mini-label khmer-regular">ប្រភេទសៀវភៅ</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Books Table Card -->
    <div class="card modern-card">
        <div class="card-header bg-white border-bottom-0">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <div class="table-icon me-3">
                        <i class="bi bi-table"></i>
                    </div>
                    <div>
                        <h6 class="card-title mb-0 khmer-semibold">បញ្ជីសៀវភៅ</h6>
                        <small class="text-muted khmer-regular">
                            បង្ហាញលទ្ធផល <span class="khmer-number">{{ $books->firstItem() ?? 0 }}</span> -
                            <span class="khmer-number">{{ $books->lastItem() ?? 0 }}</span> នៃ
                            <span class="khmer-number">{{ $books->total() }}</span> សៀវភៅ
                        </small>
                    </div>
                </div>
                <div class="table-actions">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-secondary btn-sm active khmer-regular">
                            <i class="bi bi-table me-1"></i>តារាង
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm khmer-regular" onclick="toggleView('grid')">
                            <i class="bi bi-grid-3x3-gap me-1"></i>ក្រឡា
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if($books->count() > 0)
                <!-- Table View -->
                <div id="table-view" class="table-responsive">
                    <table class="table table-hover modern-table mb-0">
                        <thead>
                        <tr>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-book me-1"></i>ព័ត៌មានសៀវភៅ
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-person me-1"></i>អ្នកនិពន្ធ
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-tag me-1"></i>ប្រភេទ
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-upc-scan me-1"></i>ISBN
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-stack me-1"></i>ចំនួន
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-check-circle me-1"></i>ស្ថានភាព
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-gear me-1"></i>សកម្មភាព
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach($books as $book)
                            <tr class="table-row-hover">
                                <td class="border-0">
                                    <div class="book-info-cell">
                                        <div class="book-cover">
                                            <i class="bi bi-book text-primary"></i>
                                        </div>
                                        <div class="book-details">
                                            <div class="book-title khmer-semibold">{{ $book->title }}</div>
                                            <div class="book-year khmer-regular text-muted">
                                                @if($book->published_year)
                                                    <i class="bi bi-calendar3 me-1"></i>
                                                    ឆ្នាំ <span class="khmer-number">{{ $book->published_year }}</span>
                                                @endif
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="author-cell khmer-regular">{{ $book->author }}</div>
                                </td>
                                <td class="border-0">
                                    <span class="genre-badge khmer-regular">{{ $book->genre }}</span>
                                </td>
                                <td class="border-0">
                                    <code class="isbn-code">{{ $book->isbn }}</code>
                                </td>
                                <td class="border-0">
                                    <div class="quantity-cell">
                                        <div class="quantity-main khmer-medium">
                                            <span class="available khmer-number">{{ $book->available_copies }}</span>
                                            /
                                            <span class="total khmer-number">{{ $book->total_copies }}</span>
                                        </div>
                                        <div class="quantity-progress">
                                            <div class="progress progress-sm">
                                                <div class="progress-bar bg-{{ $book->available_copies > 0 ? 'success' : 'danger' }}"
                                                     style="width: {{ $book->total_copies > 0 ? ($book->available_copies / $book->total_copies) * 100 : 0 }}%">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    @if($book->available_copies > 0)
                                        <span class="status-badge success khmer-regular">
                                                <i class="bi bi-check-circle"></i> មាន
                                            </span>
                                    @else
                                        <span class="status-badge danger khmer-regular">
                                                <i class="bi bi-x-circle"></i> អស់
                                            </span>
                                    @endif
                                </td>
                                <td class="border-0">
                                    <div class="action-buttons">
                                        <a href="{{ route('books.show', $book) }}"
                                           class="btn btn-sm btn-outline-info"
                                           data-bs-toggle="tooltip" title="មើលលម្អិត">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="{{ route('books.edit', $book) }}"
                                           class="btn btn-sm btn-outline-warning"
                                           data-bs-toggle="tooltip" title="កែប្រែ">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        @if($book->activeBorrowings()->count() == 0)
                                            <form action="{{ route('books.destroy', $book) }}" method="POST"
                                                  class="d-inline" onsubmit="return confirm('តើអ្នកពិតជាចង់លុបសៀវភៅនេះមែនទេ?')">
                                                @csrf
                                                @method('DELETE')
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        data-bs-toggle="tooltip" title="លុប">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        @else
                                            <button class="btn btn-sm btn-outline-secondary" disabled
                                                    data-bs-toggle="tooltip" title="មិនអាចលុបបាន (កំពុងខ្ចី)">
                                                <i class="bi bi-lock"></i>
                                            </button>
                                        @endif
                                    </div>
                                </td>
                            </tr>
                        @endforeach
                        </tbody>
                    </table>
                </div>

                <!-- Grid View (Hidden by default) -->
                <div id="grid-view" class="d-none">
                    <div class="row g-4 p-4">
                        @foreach($books as $book)
                            <div class="col-md-6 col-lg-4 col-xl-3">
                                <div class="book-card">
                                    <div class="book-card-header">
                                        <div class="book-card-cover">
                                            <i class="bi bi-book"></i>
                                        </div>
                                        <div class="book-card-status">
                                            @if($book->available_copies > 0)
                                                <span class="badge bg-success khmer-regular">មាន</span>
                                            @else
                                                <span class="badge bg-danger khmer-regular">អស់</span>
                                            @endif
                                        </div>
                                    </div>
                                    <div class="book-card-body">
                                        <h6 class="book-card-title khmer-semibold">{{ Str::limit($book->title, 40) }}</h6>
                                        <p class="book-card-author khmer-regular">{{ $book->author }}</p>
                                        <div class="book-card-meta">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-tag me-1"></i>{{ $book->genre }}
                                            </small>
                                        </div>
                                        <div class="book-card-quantity">
                                            <span class="khmer-regular">ចំនួន: </span>
                                            <span class="khmer-number">{{ $book->available_copies }}/{{ $book->total_copies }}</span>
                                        </div>
                                    </div>
                                    <div class="book-card-footer">
                                        <div class="btn-group w-100">
                                            <a href="{{ route('books.show', $book) }}" class="btn btn-outline-primary btn-sm khmer-regular">
                                                <i class="bi bi-eye me-1"></i>មើល
                                            </a>
                                            <a href="{{ route('books.edit', $book) }}" class="btn btn-outline-warning btn-sm khmer-regular">
                                                <i class="bi bi-pencil me-1"></i>កែ
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        @endforeach
                    </div>
                </div>
            @else
                <!-- Empty State -->
                <div class="empty-state-large">
                    <div class="empty-icon">
                        <i class="bi bi-book"></i>
                    </div>
                    <h4 class="empty-title khmer-semibold">មិនមានសៀវភៅ</h4>
                    <p class="empty-description khmer-regular">
                        @if(request()->hasAny(['search', 'genre', 'availability']))
                            មិនមានសៀវភៅត្រូវនឹងការស្វែងរករបស់អ្នកទេ។ សាកល្បងស្វែងរកដោយពាក្យគន្លឹះផ្សេង។
                        @else
                            មិនទាន់មានសៀវភៅនៅក្នុងបណ្ណាល័យនេះទេ។ ចាប់ផ្តើមដោយបន្ថែមសៀវភៅដំបូង។
                        @endif
                    </p>
                    <div class="empty-actions">
                        @if(request()->hasAny(['search', 'genre', 'availability']))
                            <a href="{{ route('books.index') }}" class="btn btn-outline-primary khmer-medium">
                                <i class="bi bi-arrow-clockwise me-1"></i>មើលសៀវភៅទាំងអស់
                            </a>
                        @endif
                        <a href="{{ route('books.create') }}" class="btn btn-primary khmer-medium">
                            <i class="bi bi-plus me-1"></i>បន្ថែមសៀវភៅថ្មី
                        </a>
                    </div>
                </div>
            @endif
        </div>

        <!-- Pagination -->
        @if($books->hasPages())
            <div class="card-footer bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="pagination-info khmer-regular text-muted">
                        បង្ហាញ <span class="khmer-number">{{ $books->firstItem() }}</span> -
                        <span class="khmer-number">{{ $books->lastItem() }}</span> នៃ
                        <span class="khmer-number">{{ $books->total() }}</span> លទ្ធផល
                    </div>
                    <div class="pagination-links">
                        {{ $books->withQueryString()->links('pagination::bootstrap-4') }}
                    </div>
                </div>
            </div>
        @endif
    </div>

    <!-- Enhanced Styles -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .header-actions .modern-btn {
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 500;
            box-shadow: 0 4px 15px rgba(13, 110, 253, 0.3);
            transition: all 0.3s ease;
        }

        .header-actions .modern-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(13, 110, 253, 0.4);
        }

        /* Filter card styling */
        .filter-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .filter-form .form-control,
        .filter-form .form-select {
            border-radius: 8px;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .filter-form .form-control:focus,
        .filter-form .form-select:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.15);
        }

        .input-group-text {
            border-radius: 8px 0 0 8px;
            border: 2px solid #e9ecef;
            border-right: none;
        }

        /* Mini stat cards */
        .stat-mini-card {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            border-radius: 12px;
            transition: all 0.3s ease;
            border: none;
            position: relative;
            overflow: hidden;
        }

        .stat-mini-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            opacity: 0.1;
            transition: opacity 0.3s ease;
        }

        .stat-mini-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .stat-mini-card:hover::before {
            opacity: 0.2;
        }

        .stat-mini-card.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .stat-mini-card.success {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            color: white;
        }

        .stat-mini-card.warning {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #8b4513;
        }

        .stat-mini-card.info {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #6b46c1;
        }

        .stat-mini-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-right: 1rem;
        }

        .stat-mini-number {
            font-size: 1.8rem;
            margin-bottom: 0.25rem;
        }

        .stat-mini-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        /* Table styling */
        .table-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }

        .modern-table {
            font-size: 0.9rem;
        }

        .modern-table thead th {
            background: #f8f9fa;
            font-weight: 600;
            color: #495057;
            border: none;
            padding: 1rem 0.75rem;
            vertical-align: middle;
        }

        .table-row-hover {
            transition: all 0.2s ease;
        }

        .table-row-hover:hover {
            background: rgba(102, 126, 234, 0.05);
            transform: scale(1.005);
        }

        /* Book info cell */
        .book-info-cell {
            display: flex;
            align-items: center;
        }

        .book-cover {
            width: 50px;
            height: 50px;
            border-radius: 8px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            margin-right: 1rem;
            flex-shrink: 0;
        }

        .book-title {
            font-size: 1rem;
            color: #2d3436;
            margin-bottom: 0.25rem;
            line-height: 1.4;
        }

        .book-year {
            font-size: 0.8rem;
        }

        .author-cell {
            font-weight: 500;
            color: #495057;
        }

        .genre-badge {
            background: #e9ecef;
            color: #495057;
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .isbn-code {
            background: #f8f9fa;
            color: #6c757d;
            padding: 0.3rem 0.6rem;
            border-radius: 4px;
            font-size: 0.85rem;
        }

        /* Quantity cell */
        .quantity-cell {
            text-align: center;
        }

        .quantity-main {
            font-size: 1rem;
            margin-bottom: 0.5rem;
        }

        .available {
            color: #198754;
            font-weight: 600;
        }

        .total {
            color: #6c757d;
        }

        .progress-sm {
            height: 6px;
            border-radius: 3px;
        }

        /* Status badge */
        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .status-badge.success {
            background: #d4edda;
            color: #155724;
        }

        .status-badge.danger {
            background: #f8d7da;
            color: #721c24;
        }

        /* Action buttons */
        .action-buttons {
            display: flex;
            gap: 0.3rem;
        }

        .action-buttons .btn {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
        }

        /* Book cards for grid view */
        .book-card {
            border: none;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            background: white;
        }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .book-card-header {
            position: relative;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            padding: 2rem;
            text-align: center;
        }

        .book-card-cover {
            font-size: 3rem;
            color: white;
            margin-bottom: 1rem;
        }

        .book-card-status {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        .book-card-body {
            padding: 1.5rem;
        }

        .book-card-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            line-height: 1.4;
        }

        .book-card-author {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .book-card-meta {
            margin-bottom: 1rem;
        }

        .book-card-quantity {
            font-size: 0.9rem;
            color: #495057;
        }

        .book-card-footer {
            padding: 1rem 1.5rem;
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
        }

        /* Empty state */
        .empty-state-large {
            text-align: center;
            padding: 4rem 2rem;
        }

        .empty-icon {
            font-size: 5rem;
            color: #dee2e6;
            margin-bottom: 2rem;
        }

        .empty-title {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .empty-description {
            color: #adb5bd;
            margin-bottom: 2rem;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .empty-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        /* Pagination */
        .pagination-info {
            font-size: 0.9rem;
        }

        .pagination .page-link {
            border: none;
            color: #6c757d;
            padding: 0.5rem 0.75rem;
            margin: 0 0.125rem;
            border-radius: 6px;
        }

        .pagination .page-item.active .page-link {
            background: #0d6efd;
            color: white;
        }

        .pagination .page-link:hover {
            background: #e9ecef;
            color: #495057;
        }

        /* View toggle buttons */
        .table-actions .btn-group .btn {
            border: 2px solid #e9ecef;
            color: #6c757d;
            transition: all 0.3s ease;
        }

        .table-actions .btn-group .btn.active {
            background: #0d6efd;
            border-color: #0d6efd;
            color: white;
        }

        .table-actions .btn-group .btn:hover {
            border-color: #0d6efd;
            color: #0d6efd;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .book-info-cell {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .book-cover {
                margin-right: 0;
                margin-bottom: 0.5rem;
            }

            .action-buttons {
                flex-direction: column;
            }

            .stat-mini-card {
                margin-bottom: 1rem;
            }

            .filter-form .col-md-2,
            .filter-form .col-md-3,
            .filter-form .col-md-4 {
                margin-bottom: 1rem;
            }
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modern-card {
            animation: fadeInUp 0.6s ease-out;
        }

        .stat-mini-card {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Loading states */
        .loading {
            position: relative;
        }

        .loading::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255,255,255,0.8);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Khmer number improvements */
        .khmer-number {
            font-variant-numeric: lining-nums tabular-nums;
            font-feature-settings: "tnum" 1;
        }
    </style>

    <!-- Enhanced JavaScript -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Toggle between table and grid view
        function toggleView(view) {
            const tableView = document.getElementById('table-view');
            const gridView = document.getElementById('grid-view');
            const buttons = document.querySelectorAll('.table-actions .btn');

            if (view === 'grid') {
                tableView.classList.remove('d-none');
                gridView.classList.add('d-none');
                buttons[0].classList.add('active');
                buttons[1].classList.remove('active');
            } else {
                tableView.classList.remove('d-none');
                gridView.classList.add('d-none');
                buttons[0].classList.add('active');
                buttons[1].classList.remove('active');
            }

            // Save preference to localStorage
            localStorage.setItem('booksViewPreference', view);
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Convert numbers to Khmer
            const numberElements = document.querySelectorAll('.khmer-number');
            numberElements.forEach(element => {
                const originalText = element.textContent;
                element.textContent = toKhmerNumbers(originalText);
            });

            // Load saved view preference
            const savedView = localStorage.getItem('booksViewPreference');
            if (savedView === 'grid') {
                toggleView('grid');
            }

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add loading states to forms
            const filterForm = document.querySelector('.filter-form');
            if (filterForm) {
                filterForm.addEventListener('submit', function() {
                    const submitBtn = this.querySelector('button[type="submit"]');
                    submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-1"></i>កំពុងស្វែងរក...';
                    submitBtn.disabled = true;
                });
            }

            // Animate stat cards on scroll
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animationDelay = `${Math.random() * 0.3}s`;
                        entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                    }
                });
            });

            document.querySelectorAll('.stat-mini-card').forEach(card => {
                observer.observe(card);
            });
        });

        // Search suggestions (future enhancement)
        function initSearchSuggestions() {
            const searchInput = document.querySelector('input[name="search"]');
            if (searchInput) {
                // Add debounced search suggestions here
                let timeout;
                searchInput.addEventListener('input', function() {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => {
                        // Implement search suggestions
                    }, 300);
                });
            }
        }

        // Enhanced table interactions
        document.querySelectorAll('.table-row-hover').forEach(row => {
            row.addEventListener('mouseenter', function() {
                this.style.boxShadow = '0 4px 15px rgba(102, 126, 234, 0.15)';
            });

            row.addEventListener('mouseleave', function() {
                this.style.boxShadow = '';
            });
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/books/show.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-book-open text-primary"></i>
                    </div>
                    <span class="gradient-text">ព័ត៌មានលម្អិតសៀវភៅ</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    ព័ត៌មានពេញលេញអំពីសៀវភៅនេះ
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('books.edit', $book) }}" class="btn btn-warning modern-btn me-2 khmer-medium">
                    <i class="bi bi-pencil me-2"></i>កែប្រែ
                </a>
                <a href="{{ route('books.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row g-4">
        <!-- Main Book Information -->
        <div class="col-lg-8">
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-primary text-base-100">
                    <div class="d-flex align-items-center">
                        <div class="book-icon me-3">
                            <i class="bi bi-book"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">{{ $book->title }}</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានលម្អិតអំពីសៀវភៅ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row">
                        <!-- Book Cover & Basic Info -->
                        <div class="col-md-4">
                            <div class="book-cover-large">
                                <i class="bi bi-book"></i>
                                <div class="book-status-overlay">
                                    @if($book->available_copies > 0)
                                        <span class="status-badge success khmer-medium">
                                            <i class="bi bi-check-circle"></i> មាន
                                        </span>
                                    @else
                                        <span class="status-badge danger khmer-medium">
                                            <i class="bi bi-x-circle"></i> អស់
                                        </span>
                                    @endif
                                </div>
                            </div>
                        </div>

                        <!-- Book Details -->
                        <div class="col-md-8">
                            <div class="book-details-grid">
                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-card-text text-primary me-2"></i>ចំណងជើង
                                    </div>
                                    <div class="detail-value khmer-semibold">{{ $book->title }}</div>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-person text-success me-2"></i>អ្នកនិពន្ធ
                                    </div>
                                    <div class="detail-value khmer-regular">{{ $book->author }}</div>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-tag text-info me-2"></i>ប្រភេទ
                                    </div>
                                    <div class="detail-value">
                                        <span class="genre-badge-large khmer-regular">{{ $book->genre }}</span>
                                    </div>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-upc-scan text-warning me-2"></i>លេខ ISBN
                                    </div>
                                    <div class="detail-value">
                                        <code class="isbn-display">{{ $book->isbn }}</code>
                                    </div>
                                </div>

                                @if($book->published_year)
                                    <div class="detail-row">
                                        <div class="detail-label khmer-medium">
                                            <i class="bi bi-calendar3 text-secondary me-2"></i>ឆ្នាំបោះពុម្ព
                                        </div>
                                        <div class="detail-value khmer-regular khmer-number">{{ $book->published_year }}</div>
                                    </div>
                                @endif

                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-clock text-muted me-2"></i>បានបន្ថែមនៅ
                                    </div>
                                    <div class="detail-value khmer-regular">{{ $book->created_at->format('d/m/Y H:i') }}</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Book Description -->
                    @if($book->description)
                        <div class="book-description mt-4">
                            <h6 class="khmer-semibold mb-3">
                                <i class="bi bi-file-text text-primary me-2"></i>សេចក្តីសង្ខេប
                            </h6>
                            <div class="description-content khmer-regular">
                                {{ $book->description }}
                            </div>
                        </div>
                    @endif
                </div>
            </div>

            <!-- Borrowing History -->
            <div class="card modern-card">
                <div class="card-header bg-white border-bottom-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <div class="history-icon me-3">
                                <i class="bi bi-clock-history"></i>
                            </div>
                            <div>
                                <h6 class="card-title mb-0 khmer-semibold">ប្រវត្តិការខ្ចី</h6>
                                <small class="text-muted khmer-regular">
                                    ការខ្ចីទាំងអស់របស់សៀវភៅនេះ
                                    (<span class="khmer-number">{{ $book->borrowings->count() }}</span> ដង)
                                </small>
                            </div>
                        </div>
                        @if($book->borrowings->count() > 0)
                            <div class="history-stats">
                                <small class="text-muted khmer-regular">
                                    សកម្ម: <span class="text-primary khmer-number">{{ $book->activeBorrowings->count() }}</span> |
                                    បានត្រឡប់: <span class="text-success khmer-number">{{ $book->borrowings->whereNotNull('returned_at')->count() }}</span>
                                </small>
                            </div>
                        @endif
                    </div>
                </div>
                <div class="card-body p-0">
                    @if($book->borrowings->count() > 0)
                        <div class="table-responsive">
                            <table class="table table-hover modern-table mb-0">
                                <thead>
                                <tr>
                                    <th class="border-0 khmer-medium">សមាជិក</th>
                                    <th class="border-0 khmer-medium">ថ្ងៃខ្ចី</th>
                                    <th class="border-0 khmer-medium">ថ្ងៃត្រូវត្រឡប់</th>
                                    <th class="border-0 khmer-medium">ថ្ងៃត្រឡប់</th>
                                    <th class="border-0 khmer-medium">ស្ថានភាព</th>
                                    <th class="border-0 khmer-medium">ការពិន័យ</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach($book->borrowings->sortByDesc('borrowed_at') as $borrowing)
                                    <tr class="borrowing-row">
                                        <td class="border-0">
                                            <div class="member-info-mini">
                                                <div class="member-avatar-small">
                                                    {{ strtoupper(substr($borrowing->member->name, 0, 2)) }}
                                                </div>
                                                <div class="member-details-small">
                                                    <div class="member-name-small khmer-medium">{{ $borrowing->member->name }}</div>
                                                    <small class="text-muted">{{ $borrowing->member->email }}</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="border-0">
                                            <span class="date-display khmer-regular">{{ $borrowing->borrowed_at->format('d/m/Y') }}</span>
                                        </td>
                                        <td class="border-0">
                                                <span class="date-display khmer-regular {{ $borrowing->isOverdue() && !$borrowing->returned_at ? 'text-danger fw-bold' : '' }}">
                                                    {{ $borrowing->due_date->format('d/m/Y') }}
                                                </span>
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->returned_at)
                                                <span class="date-display khmer-regular">{{ $borrowing->returned_at->format('d/m/Y') }}</span>
                                            @else
                                                <span class="text-muted khmer-regular">-</span>
                                            @endif
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->returned_at)
                                                <span class="status-badge success khmer-regular">
                                                        <i class="bi bi-check-circle"></i> បានត្រឡប់
                                                    </span>
                                            @elseif($borrowing->isOverdue())
                                                <span class="status-badge danger khmer-regular">
                                                        <i class="bi bi-exclamation-triangle"></i> ហួសកំណត់
                                                    </span>
                                            @else
                                                <span class="status-badge primary khmer-regular">
                                                        <i class="bi bi-clock"></i> កំពុងខ្ចី
                                                    </span>
                                            @endif
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->fine_amount)
                                                <div class="fine-info">
                                                    <span class="fine-amount">${{ number_format($borrowing->fine_amount, 2) }}</span>
                                                    @if($borrowing->fine_paid)
                                                        <span class="badge bg-success ms-1 khmer-regular">បានបង់</span>
                                                    @else
                                                        <span class="badge bg-danger ms-1 khmer-regular">មិនទាន់បង់</span>
                                                    @endif
                                                </div>
                                            @else
                                                <span class="text-muted">-</span>
                                            @endif
                                        </td>
                                    </tr>
                                @endforeach
                                </tbody>
                            </table>
                        </div>
                    @else
                        <div class="empty-history">
                            <div class="empty-icon">
                                <i class="bi bi-clock-history"></i>
                            </div>
                            <h6 class="empty-title khmer-semibold">មិនទាន់មានការខ្ចី</h6>
                            <p class="empty-description khmer-regular">សៀវភៅនេះមិនទាន់ត្រូវបានខ្ចីម្តងណាទេ</p>
                        </div>
                    @endif
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Stock Information -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-success text-base-100">
                    <div class="d-flex align-items-center">
                        <div class="stock-icon me-3">
                            <i class="bi bi-stack"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានស្តុក</h6>
                            <small class="opacity-75 khmer-regular">ចំនួននិងភាពអាចរកបាន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="stock-summary">
                        <div class="stock-item total">
                            <div class="stock-item-icon">
                                <i class="bi bi-stack"></i>
                            </div>
                            <div class="stock-item-content">
                                <div class="stock-number khmer-bold khmer-number">{{ $book->total_copies }}</div>
                                <div class="stock-label khmer-regular">ចំនួនសរុប</div>
                            </div>
                        </div>

                        <div class="stock-item available">
                            <div class="stock-item-icon">
                                <i class="bi bi-check-circle"></i>
                            </div>
                            <div class="stock-item-content">
                                <div class="stock-number khmer-bold khmer-number">{{ $book->available_copies }}</div>
                                <div class="stock-label khmer-regular">អាចខ្ចីបាន</div>
                            </div>
                        </div>

                        <div class="stock-item borrowed">
                            <div class="stock-item-icon">
                                <i class="bi bi-arrow-right-circle"></i>
                            </div>
                            <div class="stock-item-content">
                                <div class="stock-number khmer-bold khmer-number">{{ $book->total_copies - $book->available_copies }}</div>
                                <div class="stock-label khmer-regular">កំពុងខ្ចី</div>
                            </div>
                        </div>
                    </div>

                    <!-- Stock Progress -->
                    <div class="stock-progress mt-4">
                        <div class="d-flex justify-content-between mb-2">
                            <span class="khmer-regular">អត្រាប្រើប្រាស់</span>
                            <span class="khmer-medium">
                                {{ $book->total_copies > 0 ? number_format((($book->total_copies - $book->available_copies) / $book->total_copies) * 100, 1) : 0 }}%
                            </span>
                        </div>
                        <div class="progress progress-custom">
                            <div class="progress-bar bg-info"
                                 style="width: {{ $book->total_copies > 0 ? (($book->total_copies - $book->available_copies) / $book->total_copies) * 100 : 0 }}%">
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-warning text-base-100">
                    <div class="d-flex align-items-center">
                        <div class="action-icon me-3">
                            <i class="bi bi-lightning-fill"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">សកម្មភាពរហ័ស</h6>
                            <small class="opacity-75 khmer-regular">ធ្វើការងារលឿន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="quick-actions-vertical">
                        @if($book->available_copies > 0)
                            <a href="{{ route('borrowings.create', ['book_id' => $book->id]) }}"
                               class="quick-action-item primary">
                                <div class="action-icon-small">
                                    <i class="bi bi-plus-circle"></i>
                                </div>
                                <div class="action-content">
                                    <div class="action-title khmer-semibold">ខ្ចីសៀវភៅនេះ</div>
                                    <div class="action-subtitle khmer-regular">បង្កើតការខ្ចីថ្មី</div>
                                </div>
                            </a>
                        @else
                            <div class="quick-action-item disabled">
                                <div class="action-icon-small">
                                    <i class="bi bi-x-circle"></i>
                                </div>
                                <div class="action-content">
                                    <div class="action-title khmer-semibold">មិនអាចខ្ចីបាន</div>
                                    <div class="action-subtitle khmer-regular">សៀវភៅអស់ហើយ</div>
                                </div>
                            </div>
                        @endif

                        <a href="{{ route('books.edit', $book) }}" class="quick-action-item warning">
                            <div class="action-icon-small">
                                <i class="bi bi-pencil"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">កែប្រែព័ត៌មាន</div>
                                <div class="action-subtitle khmer-regular">កែប្រែសៀវភៅនេះ</div>
                            </div>
                        </a>

                        <a href="{{ route('books.index') }}" class="quick-action-item info">
                            <div class="action-icon-small">
                                <i class="bi bi-list"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">បញ្ជីសៀវភៅ</div>
                                <div class="action-subtitle khmer-regular">ត្រឡប់ទៅបញ្ជី</div>
                            </div>
                        </a>

                        @if($book->activeBorrowings()->count() == 0)
                            <button onclick="confirmDelete()" class="quick-action-item danger">
                                <div class="action-icon-small">
                                    <i class="bi bi-trash"></i>
                                </div>
                                <div class="action-content">
                                    <div class="action-title khmer-semibold">លុបសៀវភៅ</div>
                                    <div class="action-subtitle khmer-regular">លុបចេញពីប្រព័ន្ធ</div>
                                </div>
                            </button>
                        @endif
                    </div>
                </div>
            </div>

            <!-- Statistics -->
            <!-- Update the statistics section in the show view -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-info text-base-100">
                    <div class="d-flex align-items-center">
                        <div class="stats-icon me-3">
                            <i class="bi bi-graph-up"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ស្ថិតិសៀវភៅ</h6>
                            <small class="opacity-75 khmer-regular">ទិន្នន័យសំខាន់ៗ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-value khmer-bold khmer-number">{{ $book->borrowings->count() }}</div>
                            <div class="stat-label khmer-regular">ដងនៃការខ្ចី</div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-value khmer-bold khmer-number">{{ $book->borrowings->where('returned_at', '!=', null)->count() }}</div>
                            <div class="stat-label khmer-regular">បានត្រឡប់</div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-value khmer-bold khmer-number">{{ $book->borrowings->filter(function($borrowing) { return $borrowing->isOverdue(); })->count() }}</div>
                            <div class="stat-label khmer-regular">ហួសកំណត់</div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-value khmer-bold">
                                ${{ number_format($book->borrowings->whereNotNull('fine_amount')->sum('fine_amount'), 2) }}
                            </div>
                            <div class="stat-label khmer-regular">ការពិន័យសរុប</div>
                        </div>
                    </div>

                    @if($book->borrowings->count() > 0)
                        <div class="stats-additional mt-3">
                            <small class="text-muted khmer-regular">
                                ការខ្ចីចុងក្រោយ:
                                <span class="text-primary">{{ $book->borrowings->sortByDesc('borrowed_at')->first()->borrowed_at->diffForHumans() }}</span>
                            </small>
                        </div>
                    @endif
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h5 class="modal-title khmer-semibold">
                        <i class="bi bi-exclamation-triangle text-danger me-2"></i>បញ្ជាក់ការលុប
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p class="khmer-regular">តើអ្នកពិតជាចង់លុបសៀវភៅ <strong>"{{ $book->title }}"</strong> មែនទេ?</p>
                    <p class="text-warning khmer-regular">
                        <i class="bi bi-warning me-1"></i>
                        សកម្មភាពនេះមិនអាចធ្វើត្រឡប់វិញបានទេ។
                    </p>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary khmer-regular" data-bs-dismiss="modal">បោះបង់</button>
                    <form action="{{ route('books.destroy', $book) }}" method="POST" class="d-inline">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="btn btn-danger khmer-medium">លុបចេញ</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Show Page -->
    <style>
        /* Book cover large */
        .book-cover-large {
            width: 100%;
            height: 300px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 4rem;
            color: white;
            position: relative;
            box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
            margin-bottom: 1rem;
        }

        .book-status-overlay {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        /* Book details grid */
        .book-details-grid {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .detail-row {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .detail-row:hover {
            background: #e9ecef;
            transform: translateX(5px);
        }

        .detail-label {
            min-width: 140px;
            color: #6c757d;
            font-size: 0.9rem;
        }

        .detail-value {
            flex: 1;
            font-size: 1rem;
            color: #2d3436;
        }

        .genre-badge-large {
            background: #e9ecef;
            color: #495057;
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: 500;
        }

        .isbn-display {
            background: #f8f9fa;
            color: #6c757d;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-family: monospace;
        }

        /* Book description */
        .book-description {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            border-left: 4px solid #0d6efd;
        }

        .description-content {
            line-height: 1.8;
            color: #495057;
            font-size: 1rem;
        }

        /* History table enhancements */
        .history-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }

        .member-info-mini {
            display: flex;
            align-items: center;
        }

        .member-avatar-small {
            width: 35px;
            height: 35px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 0.8rem;
            margin-right: 0.75rem;
        }

        .member-name-small {
            font-size: 0.9rem;
            margin-bottom: 0.1rem;
        }

        .date-display {
            font-family: monospace;
            font-size: 0.9rem;
        }

        .fine-info {
            display: flex;
            align-items: center;
            flex-wrap: wrap;
        }

        .fine-amount {
            font-family: monospace;
            font-weight: 600;
            color: #dc3545;
        }

        /* Empty history */
        .empty-history {
            text-align: center;
            padding: 3rem 1rem;
        }

        .empty-history .empty-icon {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

        .empty-title {
            color: #6c757d;
            margin-bottom: 0.5rem;
        }

        .empty-description {
            color: #adb5bd;
        }

        /* Stock information */
        .stock-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .stock-summary {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .stock-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .stock-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .stock-item.total {
            border-left: 4px solid #0d6efd;
        }

        .stock-item.available {
            border-left: 4px solid #198754;
        }

        .stock-item.borrowed {
            border-left: 4px solid #ffc107;
        }

        .stock-item-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1.1rem;
        }

        .stock-item.total .stock-item-icon {
            background: rgba(13, 110, 253, 0.1);
            color: #0d6efd;
        }

        .stock-item.available .stock-item-icon {
            background: rgba(25, 135, 84, 0.1);
            color: #198754;
        }

        .stock-item.borrowed .stock-item-icon {
            background: rgba(255, 193, 7, 0.1);
            color: #ffc107;
        }

        .stock-number {
            font-size: 1.5rem;
            margin-bottom: 0.25rem;
        }

        .stock-label {
            font-size: 0.9rem;
            color: #6c757d;
        }

        .progress-custom {
            height: 10px;
            border-radius: 5px;
        }

        /* Quick actions vertical */
        .quick-actions-vertical {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .quick-action-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            border: none;
            border-radius: 10px;
            text-decoration: none;
            transition: all 0.3s ease;
            background: #f8f9fa;
            color: inherit;
            width: 100%;
            text-align: left;
        }

        .quick-action-item:hover:not(.disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            text-decoration: none;
            color: inherit;
        }

        .quick-action-item.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .quick-action-item.warning {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #8b4513;
        }

        .quick-action-item.info {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #6b46c1;
        }

        .quick-action-item.danger {
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            color: #dc3545;
        }

        .quick-action-item.disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }

        .action-icon-small {
            width: 35px;
            height: 35px;
            border-radius: 8px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1rem;
        }

        .action-title {
            font-size: 0.95rem;
            margin-bottom: 0.2rem;
        }

        .action-subtitle {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        /* Statistics */
        .stats-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            background: #e9ecef;
            transform: scale(1.05);
        }

        .stat-value {
            font-size: 1.5rem;
            color: #2d3436;
            margin-bottom: 0.25rem;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .book-cover-large {
                height: 200px;
                font-size: 3rem;
            }

            .detail-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .detail-label {
                min-width: auto;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .stock-summary {
                gap: 0.5rem;
            }

            .action-title,
            .action-subtitle {
                font-size: 0.85rem;
            }
        }

        /* Modal enhancements */
        .modal-content {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        }

        .modal-header {
            background: #f8f9fa;
            border-radius: 15px 15px 0 0;
        }

        /* Animations */
        .modern-card {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Confirm delete function
        function confirmDelete() {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Convert numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                const originalText = element.textContent;
                element.textContent = toKhmerNumbers(originalText);
            });

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations with delays
            const cards = document.querySelectorAll('.modern-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });

            // Enhanced interactions
            document.querySelectorAll('.detail-row').forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.background = '#e3f2fd';
                });
                row.addEventListener('mouseleave', function() {
                    this.style.background = '#f8f9fa';
                });
            });

            // Stock item interactions
            document.querySelectorAll('.stock-item').forEach(item => {
                item.addEventListener('click', function() {
                    this.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                });
            });

            // Borrowing row highlighting
            document.querySelectorAll('.borrowing-row').forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = 'rgba(102, 126, 234, 0.05)';
                });
                row.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                });
            });

            // Update relative dates
            setInterval(() => {
                // This could update relative time displays if needed
            }, 60000); // Update every minute
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // E for edit
            if (e.key === 'e' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('books.edit', $book) }}";
                }
            }

            // B for back to list
            if (e.key === 'b' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('books.index') }}";
                }
            }

            // Delete key for delete (with confirmation)
            if (e.key === 'Delete' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    @if($book->activeBorrowings()->count() == 0)
                    confirmDelete();
                    @endif
                }
            }
        });

        // Print functionality
        function printBookInfo() {
            window.print();
        }

        // Add print styles
        const printStyles = `
            @media print {
                .header-actions, .quick-actions-vertical, .navbar, .sidebar {
                    display: none !important;
                }
                .card {
                    box-shadow: none !important;
                    border: 1px solid #ddd !important;
                }
                .modern-card {
                    break-inside: avoid;
                }
            }
        `;

        const styleSheet = document.createElement('style');
        styleSheet.textContent = printStyles;
        document.head.appendChild(styleSheet);
    </script>
</x-app-layout>



================================================
FILE: resources/views/borrowings/create.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-plus-circle text-info"></i>
                    </div>
                    <span class="gradient-text">បង្កើតការខ្ចីថ្មី</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    បង្កើតការខ្ចីសៀវភៅថ្មី
                </p>
            </div>
            <div class="header-actions">
                <div class="current-time-display me-3">
                    <small class="text-muted khmer-regular">ពេលវេលាបច្ចុប្បន្ន (UTC)</small>
                    <div class="fw-bold text-primary khmer-medium" id="header-time">២០២៥-០៦-២០ ០៥:៥៦:០២</div>
                </div>
                <a href="{{ route('borrowings.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Current User & Time Info -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-primary text-white">
                    <div class="d-flex align-items-center">
                        <div class="user-icon me-3">
                            <i class="bi bi-person-circle"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានសម័យ</h6>
                            <small class="opacity-75 khmer-regular">អ្នកប្រើ និង ពេលវេលាបច្ចុប្បន្ន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="info-item">
                                <i class="bi bi-person-check text-success me-2"></i>
                                <div>
                                    <small class="text-muted khmer-regular">អ្នកប្រើបច្ចុប្បន្ន</small>
                                    <div class="fw-semibold khmer-medium">Chhunleangcheng</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="info-item">
                                <i class="bi bi-clock text-primary me-2"></i>
                                <div>
                                    <small class="text-muted khmer-regular">ពេលវេលា UTC</small>
                                    <div class="fw-semibold khmer-medium" id="current-time">២០២៥-០៦-២០ ០៥:៥៦:០២</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="info-item">
                                <i class="bi bi-calendar-event text-warning me-2"></i>
                                <div>
                                    <small class="text-muted khmer-regular">ថ្ងៃនេះ</small>
                                    <div class="fw-semibold khmer-medium" id="today-date">ថ្ងៃសុក្រ ២០ មិថុនា ២០២៥</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Create Borrowing Form -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-info text-white">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-plus-circle"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានការខ្ចី</h6>
                            <small class="opacity-75 khmer-regular">សូមបំពេញព័ត៌មានទាំងអស់ដែលចាំបាច់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form action="{{ route('borrowings.store') }}" method="POST" class="borrowing-form">
                        @csrf

                        <!-- Member Selection Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-person text-info me-2"></i>
                                    ជ្រើសរើសសមាជិក
                                </h5>
                                <p class="section-description khmer-regular">ជ្រើសរើសសមាជិកដែលនឹងខ្ចីសៀវភៅ</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-12">
                                    <label for="member_id" class="form-label khmer-medium required">
                                        <i class="bi bi-person me-1"></i>សមាជិក
                                    </label>
                                    <select class="form-select modern-input @error('member_id') is-invalid @enderror"
                                            id="member_id"
                                            name="member_id"
                                            required>
                                        <option value="">ជ្រើសរើសសមាជិក...</option>
                                        @foreach($members as $member)
                                            <option value="{{ $member->id }}"
                                                    {{ old('member_id', request('member_id')) == $member->id ? 'selected' : '' }}
                                                    data-email="{{ $member->email }}"
                                                    data-phone="{{ $member->phone }}"
                                                    data-status="{{ $member->membership_status }}"
                                                    data-active-borrowings="{{ $member->activeBorrowings()->count() }}">
                                                {{ $member->name }} ({{ $member->email }})
                                            </option>
                                        @endforeach
                                    </select>
                                    @error('member_id')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <!-- Member Preview -->
                            <div class="member-preview" id="member-preview" style="display: none;">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="preview-avatar" id="preview-member-avatar">
                                            <i class="bi bi-person"></i>
                                        </div>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="preview-details">
                                            <h6 class="preview-name khmer-semibold" id="preview-member-name"></h6>
                                            <div class="preview-info">
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">អីមែល:</span>
                                                    <span class="info-value" id="preview-member-email"></span>
                                                </div>
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">ទូរសព្ទ:</span>
                                                    <span class="info-value" id="preview-member-phone"></span>
                                                </div>
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">ស្ថានភាព:</span>
                                                    <span class="info-value" id="preview-member-status"></span>
                                                </div>
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">កំពុងខ្ចី:</span>
                                                    <span class="info-value khmer-number" id="preview-member-borrowings"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Book Selection Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-book text-info me-2"></i>
                                    ជ្រើសរើសសៀវភៅ
                                </h5>
                                <p class="section-description khmer-regular">ជ្រើសរើសសៀវភៅដែលនឹងខ្ចី</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-12">
                                    <label for="book_id" class="form-label khmer-medium required">
                                        <i class="bi bi-book me-1"></i>សៀវភៅ
                                    </label>
                                    <select class="form-select modern-input @error('book_id') is-invalid @enderror"
                                            id="book_id"
                                            name="book_id"
                                            required>
                                        <option value="">ជ្រើសរើសសៀវភៅ...</option>
                                        @foreach($books as $book)
                                            <option value="{{ $book->id }}"
                                                    {{ old('book_id', request('book_id')) == $book->id ? 'selected' : '' }}
                                                    data-title="{{ $book->title }}"
                                                    data-author="{{ $book->author }}"
                                                    data-isbn="{{ $book->isbn }}"
                                                    data-genre="{{ $book->genre }}"
                                                    data-available="{{ $book->available_copies }}"
                                                    data-total="{{ $book->total_copies }}"
                                                {{ $book->available_copies == 0 ? 'disabled' : '' }}>
                                                {{ $book->title }} - {{ $book->author }}
                                                (មាន: {{ $book->available_copies }}/{{ $book->total_copies }})
                                            </option>
                                        @endforeach
                                    </select>
                                    @error('book_id')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <!-- Book Preview -->
                            <div class="book-preview" id="book-preview" style="display: none;">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="preview-book-cover">
                                            <i class="bi bi-book"></i>
                                        </div>
                                    </div>
                                    <div class="col-md-9">
                                        <div class="preview-details">
                                            <h6 class="preview-name khmer-semibold" id="preview-book-title"></h6>
                                            <div class="preview-info">
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">អ្នកនិពន្ធ:</span>
                                                    <span class="info-value" id="preview-book-author"></span>
                                                </div>
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">ប្រភេទ:</span>
                                                    <span class="info-value" id="preview-book-genre"></span>
                                                </div>
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">ISBN:</span>
                                                    <span class="info-value" id="preview-book-isbn"></span>
                                                </div>
                                                <div class="info-row">
                                                    <span class="info-label khmer-regular">ស្តុក:</span>
                                                    <span class="info-value">
                                                        <span class="khmer-number" id="preview-book-available"></span>/<span class="khmer-number" id="preview-book-total"></span>
                                                        <span class="availability-indicator" id="availability-indicator"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Borrowing Details Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-calendar text-info me-2"></i>
                                    ព័ត៌មានការខ្ចី
                                </h5>
                                <p class="section-description khmer-regular">កំណត់កាលបរិច្ឆេទនិងរយៈពេល</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-4">
                                    <label for="borrowed_at" class="form-label khmer-medium required">
                                        <i class="bi bi-calendar-plus me-1"></i>ថ្ងៃខ្ចី
                                    </label>
                                    <input type="datetime-local"
                                           class="form-control modern-input @error('borrowed_at') is-invalid @enderror"
                                           id="borrowed_at"
                                           name="borrowed_at"
                                           value="{{ old('borrowed_at', date('Y-m-d\TH:i')) }}"
                                           required>
                                    @error('borrowed_at')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="loan_duration" class="form-label khmer-medium">
                                        <i class="bi bi-clock me-1"></i>រយៈពេលខ្ចី (ថ្ងៃ)
                                    </label>
                                    <select class="form-select modern-input" id="loan_duration" name="loan_duration">
                                        <option value="7" {{ old('loan_duration', '14') == '7' ? 'selected' : '' }}>៧ ថ្ងៃ</option>
                                        <option value="14" {{ old('loan_duration', '14') == '14' ? 'selected' : '' }}>១៤ ថ្ងៃ (ស្តង់ដារ)</option>
                                        <option value="21" {{ old('loan_duration', '14') == '21' ? 'selected' : '' }}>២១ ថ្ងៃ</option>
                                        <option value="30" {{ old('loan_duration', '14') == '30' ? 'selected' : '' }}>៣០ ថ្ងៃ</option>
                                    </select>
                                </div>

                                <div class="col-md-4">
                                    <label for="due_date" class="form-label khmer-medium required">
                                        <i class="bi bi-calendar-check me-1"></i>ថ្ងៃត្រូវត្រឡប់
                                    </label>
                                    <input type="date"
                                           class="form-control modern-input @error('due_date') is-invalid @enderror"
                                           id="due_date"
                                           name="due_date"
                                           value="{{ old('due_date') }}"
                                           required
                                           readonly>
                                    @error('due_date')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <!-- Due Date Preview -->
                            <div class="due-date-preview mt-3">
                                <div class="alert alert-info khmer-regular">
                                    <i class="bi bi-info-circle me-2"></i>
                                    <strong>ថ្ងៃត្រូវត្រឡប់:</strong> <span id="due-date-display">សូមជ្រើសរើសរយៈពេលខ្ចី</span>
                                </div>
                            </div>
                        </div>

                        <!-- Summary Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-list-check text-info me-2"></i>
                                    សេចក្តីសង្ខេបការខ្ចី
                                </h5>
                                <p class="section-description khmer-regular">ព័ត៌មានសង្ខេបនៃការខ្ចីដែលនឹងបង្កើត</p>
                            </div>

                            <div class="borrowing-summary">
                                <div class="summary-card">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <h6 class="summary-title khmer-semibold">
                                                <i class="bi bi-person-circle me-2"></i>សមាជិក
                                            </h6>
                                            <div class="summary-content" id="summary-member">
                                                <div class="placeholder-text khmer-regular">សូមជ្រើសរើសសមាជិក</div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <h6 class="summary-title khmer-semibold">
                                                <i class="bi bi-book me-2"></i>សៀវភៅ
                                            </h6>
                                            <div class="summary-content" id="summary-book">
                                                <div class="placeholder-text khmer-regular">សូមជ្រើសរើសសៀវភៅ</div>
                                            </div>
                                        </div>
                                    </div>
                                    <hr>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="summary-item">
                                                <div class="summary-label khmer-regular">ថ្ងៃខ្ចី</div>
                                                <div class="summary-value khmer-medium" id="summary-borrowed-date">-</div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="summary-item">
                                                <div class="summary-label khmer-regular">រយៈពេល</div>
                                                <div class="summary-value khmer-medium" id="summary-duration">១៤ ថ្ងៃ</div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="summary-item">
                                                <div class="summary-label khmer-regular">ត្រូវត្រឡប់</div>
                                                <div class="summary-value khmer-medium" id="summary-due-date">-</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="form-help">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-info-circle me-1"></i>
                                                កន្លែងដែលមាន <span class="text-danger">*</span> គឺចាំបាច់ត្រូវបំពេញ
                                            </small>
                                        </div>
                                        <div class="action-buttons">
                                            <a href="{{ route('borrowings.index') }}" class="btn btn-outline-secondary me-3 khmer-medium">
                                                <i class="bi bi-x-circle me-1"></i>បោះបង់
                                            </a>
                                            <button type="submit" class="btn btn-info modern-btn khmer-medium">
                                                <i class="bi bi-check-circle me-2"></i>បង្កើតការខ្ចី
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Borrowings Create -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: #6b46c1;
            box-shadow: 0 4px 15px rgba(168, 237, 234, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .current-time-display {
            text-align: right;
        }

        /* Info items */
        .info-item {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            background: rgba(13, 110, 253, 0.05);
            border-radius: 8px;
        }

        .info-item i {
            font-size: 1.2rem;
            margin-right: 0.75rem;
        }

        /* User icon */
        .user-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Form styling */
        .borrowing-form {
            font-family: 'Noto Sans Khmer', sans-serif;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 1rem;
        }

        .section-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .section-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .section-description {
            color: #6c757d;
            font-size: 0.95rem;
        }

        /* Modern input styling */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fff;
        }

        .modern-input:focus {
            border-color: #17a2b8;
            box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.15);
            background: #fff;
        }

        .modern-input.is-invalid {
            border-color: #dc3545;
        }

        .modern-input.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.15);
        }

        /* Form labels */
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label.required::after {
            content: ' *';
            color: #dc3545;
            font-weight: bold;
        }

        /* Preview sections */
        .member-preview, .book-preview {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            margin-top: 1rem;
            border: 2px dashed #dee2e6;
            transition: all 0.3s ease;
        }

        .preview-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
            margin: 0 auto;
        }

        .preview-book-cover {
            width: 80px;
            height: 100px;
            border-radius: 8px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
            margin: 0 auto;
        }

        .preview-name {
            margin-bottom: 1rem;
            color: #2d3436;
        }

        .info-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.5rem 0;
            border-bottom: 1px solid #e9ecef;
        }

        .info-row:last-child {
            border-bottom: none;
        }

        .info-label {
            color: #6c757d;
            min-width: 100px;
        }

        .info-value {
            color: #2d3436;
            font-weight: 500;
        }

        .availability-indicator.available {
            color: #28a745;
            font-weight: 600;
        }

        .availability-indicator.unavailable {
            color: #dc3545;
            font-weight: 600;
        }

        /* Borrowing summary */
        .borrowing-summary {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            border: 2px dashed #dee2e6;
        }

        .summary-card {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .summary-title {
            color: #495057;
            margin-bottom: 1rem;
            font-size: 1rem;
        }

        .summary-content {
            min-height: 60px;
            display: flex;
            align-items: center;
        }

        .placeholder-text {
            color: #adb5bd;
            font-style: italic;
        }

        .summary-item {
            text-align: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .summary-label {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 0.5rem;
        }

        .summary-value {
            font-size: 1.1rem;
            color: #2d3436;
        }

        /* Due date preview */
        .due-date-preview .alert {
            border-left: 4px solid #17a2b8;
        }

        /* Form actions */
        .form-actions {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .action-buttons .btn-info {
            box-shadow: 0 4px 15px rgba(23, 162, 184, 0.3);
        }

        .action-buttons .btn-info:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(23, 162, 184, 0.4);
        }

        /* Form icon */
        .form-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .form-section {
                margin-bottom: 2rem;
                padding-bottom: 1rem;
            }

            .section-header {
                margin-bottom: 1.5rem;
            }

            .preview-avatar, .preview-book-cover {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }

            .info-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.25rem;
            }

            .action-buttons {
                text-align: center;
            }

            .action-buttons .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .form-help {
                text-align: center;
                margin-bottom: 1rem;
            }

            .current-time-display {
                text-align: center;
                margin-bottom: 1rem;
            }
        }

        /* Animations */
        .form-section {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript for Borrowings Create -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Update current time
        function updateCurrentTime() {
            const now = new Date();
            const year = now.getUTCFullYear();
            const month = String(now.getUTCMonth() + 1).padStart(2, '0');
            const day = String(now.getUTCDate()).padStart(2, '0');
            const hours = String(now.getUTCHours()).padStart(2, '0');
            const minutes = String(now.getUTCMinutes()).padStart(2, '0');
            const seconds = String(now.getUTCSeconds()).padStart(2, '0');

            const timeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
            const khmerTimeString = toKhmerNumbers(timeString);

            // Update all time displays
            const timeElements = [
                document.getElementById('header-time'),
                document.getElementById('current-time')
            ];

            timeElements.forEach(element => {
                if (element) {
                    element.textContent = khmerTimeString;
                }
            });

            // Update today's date in Khmer
            const todayElement = document.getElementById('today-date');
            if (todayElement) {
                const days = ['ថ្ងៃអាទិត្យ', 'ថ្ងៃច័ន្ទ', 'ថ្ងៃអង្គារ', 'ថ្ងៃពុធ', 'ថ្ងៃព្រហស្បតិ៍', 'ថ្ងៃសុក្រ', 'ថ្ងៃសៅរ៍'];
                const months = ['មករា', 'កុម្ភៈ', 'មីនា', 'មេសា', 'ឧសភា', 'មិថុនា', 'កក្កដា', 'សីហា', 'កញ្ញា', 'តុលា', 'វិច្ឆិកា', 'ធ្នូ'];

                const dayName = days[now.getUTCDay()];
                const dayNum = toKhmerNumbers(now.getUTCDate());
                const monthName = months[now.getUTCMonth()];
                const yearNum = toKhmerNumbers(now.getUTCFullYear());

                todayElement.textContent = `${dayName} ${dayNum} ${monthName} ${yearNum}`;
            }
        }

        // Member selection handler
        function handleMemberSelection() {
            const memberSelect = document.getElementById('member_id');
            const memberPreview = document.getElementById('member-preview');

            memberSelect.addEventListener('change', function() {
                const selectedOption = this.options[this.selectedIndex];

                if (this.value) {
                    // Show member preview
                    memberPreview.style.display = 'block';

                    // Update member avatar
                    const memberName = selectedOption.text.split(' (')[0];
                    const initials = memberName.split(' ').map(word => word.charAt(0).toUpperCase()).join('').substring(0, 2);
                    document.getElementById('preview-member-avatar').textContent = initials;

                    // Update member details
                    document.getElementById('preview-member-name').textContent = memberName;
                    document.getElementById('preview-member-email').textContent = selectedOption.dataset.email;
                    document.getElementById('preview-member-phone').textContent = selectedOption.dataset.phone || '-';

                    // Update status
                    const status = selectedOption.dataset.status;
                    const statusText = {
                        'active': 'សកម្ម',
                        'inactive': 'អសកម្ម',
                        'suspended': 'ផ្អាក'
                    };
                    document.getElementById('preview-member-status').innerHTML = `<span class="badge bg-${status === 'active' ? 'success' : status === 'inactive' ? 'secondary' : 'danger'}">${statusText[status]}</span>`;

                    // Update borrowings count
                    document.getElementById('preview-member-borrowings').textContent = toKhmerNumbers(selectedOption.dataset.activeBorrowings);

                    // Update summary
                    document.getElementById('summary-member').innerHTML = `
                        <div class="d-flex align-items-center">
                            <div class="summary-avatar me-2">${initials}</div>
                            <div>
                                <div class="fw-semibold">${memberName}</div>
                                <small class="text-muted">${selectedOption.dataset.email}</small>
                            </div>
                        </div>
                    `;
                } else {
                    memberPreview.style.display = 'none';
                    document.getElementById('summary-member').innerHTML = '<div class="placeholder-text khmer-regular">សូមជ្រើសរើសសមាជិក</div>';
                }

                validateForm();
            });
        }

        // Book selection handler
        function handleBookSelection() {
            const bookSelect = document.getElementById('book_id');
            const bookPreview = document.getElementById('book-preview');

            bookSelect.addEventListener('change', function() {
                const selectedOption = this.options[this.selectedIndex];

                if (this.value) {
                    // Show book preview
                    bookPreview.style.display = 'block';

                    // Update book details
                    document.getElementById('preview-book-title').textContent = selectedOption.dataset.title;
                    document.getElementById('preview-book-author').textContent = selectedOption.dataset.author;
                    document.getElementById('preview-book-genre').textContent = selectedOption.dataset.genre;
                    document.getElementById('preview-book-isbn').textContent = selectedOption.dataset.isbn;
                    document.getElementById('preview-book-available').textContent = toKhmerNumbers(selectedOption.dataset.available);
                    document.getElementById('preview-book-total').textContent = toKhmerNumbers(selectedOption.dataset.total);

                    // Update availability indicator
                    const available = parseInt(selectedOption.dataset.available);
                    const indicator = document.getElementById('availability-indicator');
                    if (available > 0) {
                        indicator.textContent = ' ✓ មាន';
                        indicator.className = 'availability-indicator available';
                    } else {
                        indicator.textContent = ' ✗ អស់';
                        indicator.className = 'availability-indicator unavailable';
                    }

                    // Update summary
                    document.getElementById('summary-book').innerHTML = `
                        <div class="d-flex align-items-center">
                            <div class="summary-book-cover me-2"><i class="bi bi-book"></i></div>
                            <div>
                                <div class="fw-semibold">${selectedOption.dataset.title}</div>
                                <small class="text-muted">${selectedOption.dataset.author}</small>
                            </div>
                        </div>
                    `;
                } else {
                    bookPreview.style.display = 'none';
                    document.getElementById('summary-book').innerHTML = '<div class="placeholder-text khmer-regular">សូមជ្រើសរើសសៀវភៅ</div>';
                }

                validateForm();
            });
        }

        // Due date calculation
        function handleDueDateCalculation() {
            const borrowedAtInput = document.getElementById('borrowed_at');
            const loanDurationSelect = document.getElementById('loan_duration');
            const dueDateInput = document.getElementById('due_date');

            function calculateDueDate() {
                const borrowedAt = new Date(borrowedAtInput.value);
                const duration = parseInt(loanDurationSelect.value);

                if (borrowedAtInput.value && duration) {
                    const dueDate = new Date(borrowedAt);
                    dueDate.setDate(dueDate.getDate() + duration);

                    const dueDateString = dueDate.toISOString().split('T')[0];
                    dueDateInput.value = dueDateString;

                    // Update displays
                    const displayDate = dueDate.toLocaleDateString('km-KH');
                    document.getElementById('due-date-display').textContent = displayDate;
                    document.getElementById('summary-due-date').textContent = displayDate;

                    // Update borrowed date display
                    const borrowedDate = borrowedAt.toLocaleDateString('km-KH');
                    document.getElementById('summary-borrowed-date').textContent = borrowedDate;
                }
            }

            borrowedAtInput.addEventListener('change', calculateDueDate);
            loanDurationSelect.addEventListener('change', function() {
                const duration = this.value;
                const durationText = {
                    '7': '៧ ថ្ងៃ',
                    '14': '១៤ ថ្ងៃ',
                    '21': '២១ ថ្ងៃ',
                    '30': '៣០ ថ្ងៃ'
                };
                document.getElementById('summary-duration').textContent = durationText[duration];
                calculateDueDate();
            });

            // Initial calculation
            calculateDueDate();
        }

        // Form validation
        function validateForm() {
            const memberSelect = document.getElementById('member_id');
            const bookSelect = document.getElementById('book_id');
            const submitBtn = document.querySelector('button[type="submit"]');

            const isValid = memberSelect.value && bookSelect.value;
            submitBtn.disabled = !isValid;

            if (isValid) {
                submitBtn.classList.remove('btn-secondary');
                submitBtn.classList.add('btn-info');
            } else {
                submitBtn.classList.remove('btn-info');
                submitBtn.classList.add('btn-secondary');
            }
        }

        // Form submission enhancement
        function enhanceFormSubmission() {
            const form = document.querySelector('.borrowing-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            form.addEventListener('submit', function(e) {
                // Show loading state
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងបង្កើត...';
                submitBtn.disabled = true;

                // Validate form one more time
                if (!form.checkValidity()) {
                    e.preventDefault();
                    submitBtn.classList.remove('loading');
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;

                    // Show validation message
                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Convert existing numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                element.textContent = toKhmerNumbers(element.textContent);
            });

            // Update time immediately and then every second
            updateCurrentTime();
            setInterval(updateCurrentTime, 1000);

            // Setup all handlers
            handleMemberSelection();
            handleBookSelection();
            handleDueDateCalculation();
            enhanceFormSubmission();

            // Initial form validation
            validateForm();

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations
            const sections = document.querySelectorAll('.form-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });

            // Auto-focus first select if no preselection
            if (!document.getElementById('member_id').value) {
                setTimeout(() => document.getElementById('member_id').focus(), 300);
            }

            // Add CSS for summary avatars
            const style = document.createElement('style');
            style.textContent = `
                .summary-avatar {
                    width: 30px;
                    height: 30px;
                    border-radius: 50%;
                    background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    color: white;
                    font-size: 0.8rem;
                    font-weight: 600;
                }
                .summary-book-cover {
                    width: 30px;
                    height: 35px;
                    border-radius: 4px;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    color: white;
                    font-size: 0.8rem;
                }
            `;
            document.head.appendChild(style);
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + S to save
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                document.querySelector('.borrowing-form').dispatchEvent(new Event('submit'));
            }

            // Escape to cancel
            if (e.key === 'Escape') {
                if (confirm('តើអ្នកពិតជាចង់បោះបង់ការបង្កើតការខ្ចីមែនទេ?')) {
                    window.location.href = "{{ route('borrowings.index') }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/borrowings/edit.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-pencil-square text-warning"></i>
                    </div>
                    <span class="gradient-text">កែប្រែការខ្ចី</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    កែប្រែព័ត៌មានការខ្ចី #<span class="khmer-number">{{ $borrowing->id }}</span>
                </p>
            </div>
            <div class="header-actions">
                <div class="current-time-display me-3">
                    <small class="text-muted khmer-regular">ពេលវេលាបច្ចុប្បន្ន (UTC)</small>
                    <div class="fw-bold text-primary khmer-medium" id="header-time">២០២៥-០៦-២០ ០៦:០៣:២៨</div>
                </div>
                <a href="{{ route('borrowings.show', $borrowing) }}" class="btn btn-outline-info modern-btn me-2 khmer-medium">
                    <i class="bi bi-eye me-2"></i>មើលលម្អិត
                </a>
                <a href="{{ route('borrowings.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Current User & System Info -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-primary text-white">
                    <div class="d-flex align-items-center">
                        <div class="user-icon me-3">
                            <i class="bi bi-person-circle"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានអ្នកប្រើ</h6>
                            <small class="opacity-75 khmer-regular">អ្នកប្រើ និង ពេលវេលាបច្ចុប្បន្ន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="row g-3">
                        <div class="col-md-4">
                            <div class="info-item">
                                <i class="bi bi-person-check text-success me-2"></i>
                                <div>
                                    <small class="text-muted khmer-regular">អ្នកប្រើបច្ចុប្បន្ន</small>
                                    <div class="fw-semibold khmer-medium">Chhunleangcheng</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="info-item">
                                <i class="bi bi-clock text-primary me-2"></i>
                                <div>
                                    <small class="text-muted khmer-regular">ពេលវេលា UTC</small>
                                    <div class="fw-semibold khmer-medium" id="current-time">២០២៥-០៦-២០ ០៦:០៣:២៨</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="info-item">
                                <i class="bi bi-shield-check text-warning me-2"></i>
                                <div>
                                    <small class="text-muted khmer-regular">ស្ថានភាពការខ្ចី</small>
                                    <div class="fw-semibold khmer-medium">
                                        @if($borrowing->returned_at)
                                            <span class="text-success">បានត្រឡប់</span>
                                        @elseif($borrowing->isOverdue())
                                            <span class="text-danger">ហួសកំណត់</span>
                                        @else
                                            <span class="text-warning">កំពុងខ្ចី</span>
                                        @endif
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Current Borrowing Info -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-info text-white">
                    <div class="d-flex align-items-center">
                        <div class="current-borrowing-icon me-3">
                            <i class="bi bi-arrow-left-right"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានបច្ចុប្បន្ន</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានដែលមានស្រាប់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">សមាជិក</small>
                                <div class="fw-semibold khmer-medium">{{ $borrowing->member->name }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">សៀវភៅ</small>
                                <div class="fw-semibold khmer-regular">{{ Str::limit($borrowing->book->title, 25) }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ថ្ងៃខ្ចី</small>
                                <div class="fw-semibold khmer-regular">{{ $borrowing->borrowed_at->format('d/m/Y') }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ថ្ងៃត្រូវត្រឡប់</small>
                                <div class="fw-semibold khmer-regular">{{ $borrowing->due_date->format('d/m/Y') }}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Form Card -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-warning text-dark">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-pencil-square"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">កែប្រែព័ត៌មាន</h6>
                            <small class="opacity-75 khmer-regular">កែប្រែព័ត៌មានដែលចាំបាច់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form action="{{ route('borrowings.update', $borrowing) }}" method="POST" class="borrowing-edit-form">
                        @csrf
                        @method('PUT')

                        <!-- Member and Book Selection Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-people text-warning me-2"></i>
                                    សមាជិក និង សៀវភៅ
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែសមាជិក និង សៀវភៅ</p>
                                @if(!$borrowing->returned_at)
                                    <div class="alert alert-warning khmer-regular" role="alert">
                                        <i class="bi bi-exclamation-triangle me-2"></i>
                                        <strong>ការព្រមាន:</strong> ការខ្ចីនេះនៅតែសកម្ម។ ការផ្លាស់ប្តូរសៀវភៅនឹងប៉ះពាល់ដល់ស្តុក។
                                    </div>
                                @endif
                            </div>

                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="member_id" class="form-label khmer-medium required">
                                        <i class="bi bi-person me-1"></i>សមាជិក
                                    </label>
                                    <select class="form-select modern-input @error('member_id') is-invalid @enderror"
                                            id="member_id"
                                            name="member_id"
                                            required>
                                        @foreach($members as $member)
                                            <option value="{{ $member->id }}"
                                                    {{ old('member_id', $borrowing->member_id) == $member->id ? 'selected' : '' }}
                                                    data-email="{{ $member->email }}"
                                                    data-phone="{{ $member->phone }}"
                                                    data-status="{{ $member->membership_status }}">
                                                {{ $member->name }} ({{ $member->email }})
                                            </option>
                                        @endforeach
                                    </select>
                                    @error('member_id')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="book_id" class="form-label khmer-medium required">
                                        <i class="bi bi-book me-1"></i>សៀវភៅ
                                    </label>
                                    <select class="form-select modern-input @error('book_id') is-invalid @enderror"
                                            id="book_id"
                                            name="book_id"
                                            required>
                                        @foreach($books as $book)
                                            <option value="{{ $book->id }}"
                                                    {{ old('book_id', $borrowing->book_id) == $book->id ? 'selected' : '' }}
                                                    data-title="{{ $book->title }}"
                                                    data-author="{{ $book->author }}"
                                                    data-available="{{ $book->available_copies }}"
                                                {{ $book->available_copies == 0 && $book->id != $borrowing->book_id ? 'disabled' : '' }}>
                                                {{ $book->title }} - {{ $book->author }}
                                                @if($book->id == $borrowing->book_id)
                                                    (បច្ចុប្បន្ន)
                                                @else
                                                    (មាន: {{ $book->available_copies }})
                                                @endif
                                            </option>
                                        @endforeach
                                    </select>
                                    @error('book_id')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Date Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-calendar text-warning me-2"></i>
                                    ព័ត៌មានកាលបរិច្ឆេទ
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែកាលបរិច្ឆេទការខ្ចី</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-4">
                                    <label for="borrowed_at" class="form-label khmer-medium required">
                                        <i class="bi bi-calendar-plus me-1"></i>ថ្ងៃខ្ចី
                                    </label>
                                    <input type="datetime-local"
                                           class="form-control modern-input @error('borrowed_at') is-invalid @enderror"
                                           id="borrowed_at"
                                           name="borrowed_at"
                                           value="{{ old('borrowed_at', $borrowing->borrowed_at->format('Y-m-d\TH:i')) }}"
                                           required>
                                    @error('borrowed_at')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="due_date" class="form-label khmer-medium required">
                                        <i class="bi bi-calendar-check me-1"></i>ថ្ងៃត្រូវត្រឡប់
                                    </label>
                                    <input type="date"
                                           class="form-control modern-input @error('due_date') is-invalid @enderror"
                                           id="due_date"
                                           name="due_date"
                                           value="{{ old('due_date', $borrowing->due_date->format('Y-m-d')) }}"
                                           required>
                                    @error('due_date')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="returned_at" class="form-label khmer-medium">
                                        <i class="bi bi-calendar-x me-1"></i>ថ្ងៃត្រឡប់
                                    </label>
                                    <input type="datetime-local"
                                           class="form-control modern-input @error('returned_at') is-invalid @enderror"
                                           id="returned_at"
                                           name="returned_at"
                                           value="{{ old('returned_at', $borrowing->returned_at ? $borrowing->returned_at->format('Y-m-d\TH:i') : '') }}">
                                    <div class="form-text khmer-regular">
                                        ទុកឱ្យទទេ ប្រសិនបើមិនទាន់ត្រឡប់
                                    </div>
                                    @error('returned_at')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <!-- Duration Display -->
                            <div class="duration-display mt-3">
                                <div class="alert alert-info khmer-regular">
                                    <i class="bi bi-info-circle me-2"></i>
                                    <strong>រយៈពេលខ្ចី:</strong> <span id="duration-display">-</span>
                                </div>
                            </div>
                        </div>

                        <!-- Fine Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-currency-dollar text-warning me-2"></i>
                                    ព័ត៌មានការពិន័យ
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែព័ត៌មានការពិន័យ</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="fine_amount" class="form-label khmer-medium">
                                        <i class="bi bi-currency-dollar me-1"></i>ចំនួនការពិន័យ ($)
                                    </label>
                                    <input type="number"
                                           class="form-control modern-input @error('fine_amount') is-invalid @enderror"
                                           id="fine_amount"
                                           name="fine_amount"
                                           value="{{ old('fine_amount', $borrowing->fine_amount) }}"
                                           step="0.01"
                                           min="0">
                                    @error('fine_amount')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label class="form-label khmer-medium">ស្ថានភាពការបង់</label>
                                    <div class="form-check mt-2">
                                        <input class="form-check-input"
                                               type="checkbox"
                                               id="fine_paid"
                                               name="fine_paid"
                                               value="1"
                                            {{ old('fine_paid', $borrowing->fine_paid) ? 'checked' : '' }}>
                                        <label class="form-check-label khmer-regular" for="fine_paid">
                                            បានបង់ការពិន័យហើយ
                                        </label>
                                    </div>
                                </div>
                            </div>

                            <!-- Fine Calculation Helper -->
                            @if($borrowing->isOverdue() && !$borrowing->returned_at)
                                <div class="fine-helper mt-3">
                                    <div class="alert alert-warning khmer-regular">
                                        <i class="bi bi-calculator me-2"></i>
                                        <strong>ការគណនាស្វ័យប្រវត្តិ:</strong> ហួសកំណត់ <span class="khmer-number">{{ $borrowing->days_overdue }}</span> ថ្ងៃ
                                        = $<span id="calculated-fine">{{ number_format($borrowing->days_overdue * 1.00, 2) }}</span>
                                        <button type="button" class="btn btn-sm btn-outline-warning ms-2 khmer-regular" onclick="applyCalculatedFine()">
                                            <i class="bi bi-check me-1"></i>ប្រើការគណនានេះ
                                        </button>
                                    </div>
                                </div>
                            @endif
                        </div>

                        <!-- Change Summary Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-list-check text-warning me-2"></i>
                                    សេចក្តីសង្ខេបការផ្លាស់ប្តូរ
                                </h5>
                                <p class="section-description khmer-regular">ការផ្លាស់ប្តូរដែលនឹងត្រូវរក្សាទុក</p>
                            </div>

                            <div class="change-summary" id="change-summary">
                                <div class="alert alert-info khmer-regular">
                                    <i class="bi bi-info-circle me-2"></i>
                                    កែប្រែការបញ្ចូលទិន្នន័យ ដើម្បីមើលការផ្លាស់ប្តូរ
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="form-help">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-info-circle me-1"></i>
                                                កន្លែងដែលមាន <span class="text-danger">*</span> គឺចាំបាច់ត្រូវបំពេញ
                                            </small>
                                        </div>
                                        <div class="action-buttons">
                                            <a href="{{ route('borrowings.show', $borrowing) }}" class="btn btn-outline-secondary me-3 khmer-medium">
                                                <i class="bi bi-x-circle me-1"></i>បោះបង់
                                            </a>
                                            <button type="button" class="btn btn-info me-2 khmer-medium" onclick="resetForm()">
                                                <i class="bi bi-arrow-clockwise me-1"></i>កំណត់ឡើងវិញ
                                            </button>
                                            <button type="submit" class="btn btn-warning modern-btn khmer-medium">
                                                <i class="bi bi-check-circle me-2"></i>រក្សាទុកការកែប្រែ
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Borrowings Edit -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: #8b4513;
            box-shadow: 0 4px 15px rgba(255, 193, 7, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .current-time-display {
            text-align: right;
        }

        /* Info items */
        .info-item {
            display: flex;
            align-items: center;
            padding: 0.75rem;
            background: rgba(13, 110, 253, 0.05);
            border-radius: 8px;
        }

        .info-item i {
            font-size: 1.2rem;
            margin-right: 0.75rem;
        }

        /* Current info styling */
        .current-borrowing-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .current-info-item {
            padding: 0.75rem;
            background: rgba(255,255,255,0.1);
            border-radius: 8px;
            text-align: center;
        }

        .current-info-item small {
            display: block;
            margin-bottom: 0.25rem;
        }

        /* Form styling (reuse from previous forms) */
        .borrowing-edit-form {
            font-family: 'Noto Sans Khmer', sans-serif;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 1rem;
        }

        .section-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .section-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .section-description {
            color: #6c757d;
            font-size: 0.95rem;
        }

        /* Modern input styling */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fff;
        }

        .modern-input:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.15);
            background: #fff;
        }

        .modern-input.is-invalid {
            border-color: #dc3545;
        }

        .modern-input.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.15);
        }

        /* Form labels */
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label.required::after {
            content: ' *';
            color: #dc3545;
            font-weight: bold;
        }

        /* Duration display */
        .duration-display .alert {
            border-left: 4px solid #ffc107;
        }

        /* Fine helper */
        .fine-helper .alert {
            border-left: 4px solid #ffc107;
        }

        /* Change summary styling */
        .change-summary {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            border: 2px dashed #dee2e6;
        }

        .change-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            background: white;
            border-radius: 8px;
            margin-bottom: 0.5rem;
            border-left: 4px solid #ffc107;
        }

        .change-item:last-child {
            margin-bottom: 0;
        }

        .change-field {
            font-weight: 600;
            color: #495057;
        }

        .change-values {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .old-value {
            color: #6c757d;
            text-decoration: line-through;
            font-size: 0.9rem;
        }

        .new-value {
            color: #ffc107;
            font-weight: 600;
        }

        .change-arrow {
            color: #ffc107;
        }

        /* Form actions */
        .form-actions {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .action-buttons .btn-warning {
            box-shadow: 0 4px 15px rgba(255, 193, 7, 0.3);
        }

        .action-buttons .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 193, 7, 0.4);
        }

        /* Form icon */
        .form-icon, .user-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .current-info-item {
                margin-bottom: 1rem;
            }

            .form-section {
                margin-bottom: 2rem;
                padding-bottom: 1rem;
            }

            .section-header {
                margin-bottom: 1.5rem;
            }

            .action-buttons {
                text-align: center;
            }

            .action-buttons .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .form-help {
                text-align: center;
                margin-bottom: 1rem;
            }

            .current-time-display {
                text-align: center;
                margin-bottom: 1rem;
            }
        }

        /* Animations */
        .form-section {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript for Borrowings Edit -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Original borrowing data for comparison
        const originalBorrowing = {
            member_id: {{ Js::from($borrowing->member_id) }},
            book_id: {{ Js::from($borrowing->book_id) }},
            borrowed_at: {{ Js::from($borrowing->borrowed_at->format('Y-m-d\TH:i')) }},
            due_date: {{ Js::from($borrowing->due_date->format('Y-m-d')) }},
            returned_at: {{ Js::from($borrowing->returned_at ? $borrowing->returned_at->format('Y-m-d\TH:i') : null) }},
            fine_amount: {{ Js::from($borrowing->fine_amount) }},
            fine_paid: {{ Js::from($borrowing->fine_paid) }}
        };

        // Update current time with exact UTC format
        function updateCurrentTime() {
            const now = new Date();
            const year = now.getUTCFullYear();
            const month = String(now.getUTCMonth() + 1).padStart(2, '0');
            const day = String(now.getUTCDate()).padStart(2, '0');
            const hours = String(now.getUTCHours()).padStart(2, '0');
            const minutes = String(now.getUTCMinutes()).padStart(2, '0');
            const seconds = String(now.getUTCSeconds()).padStart(2, '0');

            const timeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
            const khmerTimeString = toKhmerNumbers(timeString);

            // Update all time displays
            const timeElements = [
                document.getElementById('header-time'),
                document.getElementById('current-time')
            ];

            timeElements.forEach(element => {
                if (element) {
                    element.textContent = khmerTimeString;
                }
            });
        }

        // Calculate duration between dates
        function calculateDuration() {
            const borrowedAtInput = document.getElementById('borrowed_at');
            const dueDateInput = document.getElementById('due_date');
            const durationDisplay = document.getElementById('duration-display');

            if (borrowedAtInput.value && dueDateInput.value) {
                const borrowedAt = new Date(borrowedAtInput.value);
                const dueDate = new Date(dueDateInput.value);
                const diffTime = dueDate.getTime() - borrowedAt.getTime();
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

                if (diffDays > 0) {
                    durationDisplay.textContent = `${toKhmerNumbers(diffDays)} ថ្ងៃ`;
                } else if (diffDays === 0) {
                    durationDisplay.textContent = 'ថ្ងៃតែមួយ';
                } else {
                    durationDisplay.textContent = 'កាលបរិច្ឆេទមិនត្រឹមត្រូវ';
                    durationDisplay.className = 'text-danger';
                }
            } else {
                durationDisplay.textContent = '-';
            }
        }

        // Apply calculated fine
        function applyCalculatedFine() {
            const calculatedFine = document.getElementById('calculated-fine').textContent;
            document.getElementById('fine_amount').value = calculatedFine;
            updateChangeSummary();
        }

        // Track form changes and update change summary
        function trackChanges() {
            const form = document.querySelector('.borrowing-edit-form');
            const inputs = form.querySelectorAll('input, select');

            inputs.forEach(input => {
                input.addEventListener('change', function() {
                    updateChangeSummary();
                    calculateDuration();
                });

                input.addEventListener('input', function() {
                    updateChangeSummary();
                    calculateDuration();
                });
            });
        }

        // Update change summary
        function updateChangeSummary() {
            const form = document.querySelector('.borrowing-edit-form');
            const summaryContainer = document.getElementById('change-summary');
            const inputs = form.querySelectorAll('input, select');

            let changes = [];

            inputs.forEach(input => {
                let currentValue = input.type === 'checkbox' ? input.checked : input.value;
                let originalValue = originalBorrowing[input.name];

                // Handle null values
                if (originalValue === null) originalValue = '';
                if (currentValue === '') currentValue = null;

                const fieldName = getFieldDisplayName(input.name);

                if (currentValue != originalValue) {
                    changes.push({
                        field: fieldName,
                        oldValue: formatValue(originalValue, input.type),
                        newValue: formatValue(currentValue, input.type)
                    });
                }
            });

            if (changes.length === 0) {
                summaryContainer.innerHTML = `
                    <div class="alert alert-info khmer-regular">
                        <i class="bi bi-info-circle me-2"></i>
                        មិនមានការផ្លាស់ប្តូរ
                    </div>
                `;
            } else {
                let changesHtml = '<div class="changes-list">';
                changes.forEach(change => {
                    changesHtml += `
                        <div class="change-item">
                            <div class="change-field khmer-medium">${change.field}</div>
                            <div class="change-values">
                                <span class="old-value khmer-regular">${change.oldValue || 'ទទេ'}</span>
                                <i class="bi bi-arrow-right change-arrow"></i>
                                <span class="new-value khmer-regular">${change.newValue || 'ទទេ'}</span>
                            </div>
                        </div>
                    `;
                });
                changesHtml += '</div>';
                summaryContainer.innerHTML = changesHtml;
            }
        }

        // Get field display name in Khmer
        function getFieldDisplayName(fieldName) {
            const fieldNames = {
                'member_id': 'សមាជិក',
                'book_id': 'សៀវភៅ',
                'borrowed_at': 'ថ្ងៃខ្ចី',
                'due_date': 'ថ្ងៃត្រូវត្រឡប់',
                'returned_at': 'ថ្ងៃត្រឡប់',
                'fine_amount': 'ចំនួនការពិន័យ',
                'fine_paid': 'ស្ថានភាពការបង់'
            };

            return fieldNames[fieldName] || fieldName;
        }

        // Format value for display
        function formatValue(value, inputType) {
            if (value === null || value === '') return 'ទទេ';

            if (inputType === 'checkbox') {
                return value ? 'បានបង់' : 'មិនទាន់បង់';
            }

            if (inputType === 'datetime-local') {
                return new Date(value).toLocaleString('km-KH');
            }

            if (inputType === 'date') {
                return new Date(value).toLocaleDateString('km-KH');
            }

            return value;
        }

        // Reset form to original values
        function resetForm() {
            if (confirm('តើអ្នកពិតជាចង់កំណត់ទិន្នន័យឡើងវិញមែនទេ? ការផ្លាស់ប្តូរទាំងអស់នឹងបាត់បង់។')) {
                const form = document.querySelector('.borrowing-edit-form');

                Object.keys(originalBorrowing).forEach(field => {
                    const input = form.querySelector(`[name="${field}"]`);
                    if (input) {
                        if (input.type === 'checkbox') {
                            input.checked = originalBorrowing[field] || false;
                        } else {
                            input.value = originalBorrowing[field] || '';
                        }
                    }
                });

                updateChangeSummary();
                calculateDuration();
            }
        }

        // Form validation enhancement
        function enhanceFormValidation() {
            const form = document.querySelector('.borrowing-edit-form');
            const inputs = form.querySelectorAll('input, select');

            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    } else {
                        this.classList.remove('is-valid');
                        this.classList.add('is-invalid');
                    }
                });

                input.addEventListener('focus', function() {
                    this.classList.remove('is-valid', 'is-invalid');
                });
            });

            // Custom validation for dates
            const borrowedAtInput = document.getElementById('borrowed_at');
            const dueDateInput = document.getElementById('due_date');
            const returnedAtInput = document.getElementById('returned_at');

            function validateDates() {
                const borrowedAt = new Date(borrowedAtInput.value);
                const dueDate = new Date(dueDateInput.value);
                const returnedAt = returnedAtInput.value ? new Date(returnedAtInput.value) : null;

                // Due date must be after borrowed date
                if (dueDateInput.value && borrowedAtInput.value) {
                    if (dueDate <= borrowedAt) {
                        dueDateInput.setCustomValidity('ថ្ងៃត្រូវត្រឡប់ត្រូវតែក្រោយថ្ងៃខ្ចី');
                    } else {
                        dueDateInput.setCustomValidity('');
                    }
                }

                // Returned date must be after borrowed date
                if (returnedAtInput.value && borrowedAtInput.value) {
                    if (returnedAt < borrowedAt) {
                        returnedAtInput.setCustomValidity('ថ្ងៃត្រឡប់ត្រូវតែក្រោយថ្ងៃខ្ចី');
                    } else {
                        returnedAtInput.setCustomValidity('');
                    }
                }
            }

            borrowedAtInput.addEventListener('change', validateDates);
            dueDateInput.addEventListener('change', validateDates);
            returnedAtInput.addEventListener('change', validateDates);
        }

        // Form submission enhancement
        function enhanceFormSubmission() {
            const form = document.querySelector('.borrowing-edit-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            form.addEventListener('submit', function(e) {
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងរក្សាទុក...';
                submitBtn.disabled = true;

                if (!form.checkValidity()) {
                    e.preventDefault();
                    submitBtn.classList.remove('loading');
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;

                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Convert existing numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                element.textContent = toKhmerNumbers(element.textContent);
            });

            // Update time immediately and then every second
            updateCurrentTime();
            setInterval(updateCurrentTime, 1000);

            // Setup all enhancements
            trackChanges();
            calculateDuration();
            updateChangeSummary();
            enhanceFormValidation();
            enhanceFormSubmission();

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations
            const sections = document.querySelectorAll('.form-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });

            // Auto-focus first input
            const firstInput = document.getElementById('member_id');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 300);
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + S to save
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                document.querySelector('.borrowing-edit-form').dispatchEvent(new Event('submit'));
            }

            // Ctrl/Cmd + R to reset
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                resetForm();
            }

            // Escape to cancel
            if (e.key === 'Escape') {
                if (confirm('តើអ្នកពិតជាចង់បោះបង់ការកែប្រែមែនទេ?')) {
                    window.location.href = "{{ route('borrowings.show', $borrowing) }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/borrowings/history-pdf.blade.php
================================================
<!DOCTYPE html>
<html>
<head>
    <title>Member Borrowing History</title>
    <style>
        body { font-family: Arial, sans-serif; }
        .header { text-align: center; margin-bottom: 30px; }
        .member-info { margin-bottom: 20px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        th { background-color: #f2f2f2; }
        .badge { padding: 2px 6px; border-radius: 3px; font-size: 12px; }
        .badge-success { background-color: #d4edda; color: #155724; }
        .badge-danger { background-color: #f8d7da; color: #721c24; }
        .badge-warning { background-color: #fff3cd; color: #856404; }
    </style>
</head>
<body>
<div class="header">
    <h1>Library Management System</h1>
    <h2>Member Borrowing History</h2>
</div>

<div class="member-info">
    <h3>Member Information</h3>
    <p><strong>Name:</strong> {{ $member->name }}</p>
    <p><strong>Email:</strong> {{ $member->email }}</p>
    <p><strong>Phone:</strong> {{ $member->phone }}</p>
    <p><strong>Member Since:</strong> {{ $member->membership_date->format('M d, Y') }}</p>
    <p><strong>Status:</strong> {{ ucfirst($member->membership_status) }}</p>
</div>

<h3>Borrowing History</h3>
@if($member->borrowings->count() > 0)
    <table>
        <thead>
        <tr>
            <th>Book Title</th>
            <th>Author</th>
            <th>Borrowed Date</th>
            <th>Due Date</th>
            <th>Returned Date</th>
            <th>Fine Amount</th>
            <th>Status</th>
        </tr>
        </thead>
        <tbody>
        @foreach($member->borrowings->sortByDesc('borrowed_at') as $borrowing)
            <tr>
                <td>{{ $borrowing->book->title }}</td>
                <td>{{ $borrowing->book->author }}</td>
                <td>{{ $borrowing->borrowed_at->format('M d, Y') }}</td>
                <td>{{ $borrowing->due_date->format('M d, Y') }}</td>
                <td>
                    @if($borrowing->returned_at)
                        {{ $borrowing->returned_at->format('M d, Y') }}
                    @else
                        Not Returned
                    @endif
                </td>
                <td>
                    @if($borrowing->fine_amount)
                        ${{ number_format($borrowing->fine_amount, 2) }}
                        @if($borrowing->fine_paid) (Paid) @else (Unpaid) @endif
                    @else
                        -
                    @endif
                </td>
                <td>
                    @if($borrowing->returned_at)
                        Returned
                    @elseif($borrowing->isOverdue())
                        Overdue
                    @else
                        Active
                    @endif
                </td>
            </tr>
        @endforeach
        </tbody>
    </table>
@else
    <p>No borrowing history found.</p>
@endif

<div style="margin-top: 30px; text-align: center; font-size: 12px; color: #666;">
    Generated on {{ now()->format('M d, Y H:i:s') }}
</div>
<!-- Add this JavaScript to update time in real-time -->
<script>
    // Update time every second to show current time: 2025-06-20 05:45:10
    function updateNavTime() {
        const now = new Date();
        const year = now.getUTCFullYear();
        const month = String(now.getUTCMonth() + 1).padStart(2, '0');
        const day = String(now.getUTCDate()).padStart(2, '0');
        const hours = String(now.getUTCHours()).padStart(2, '0');
        const minutes = String(now.getUTCMinutes()).padStart(2, '0');
        const seconds = String(now.getUTCSeconds()).padStart(2, '0');

        const timeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;

        // Convert to Khmer numbers
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        const khmerTime = timeString.replace(/[0-9]/g, function(match) {
            return khmerNumbers[match];
        });

        // Update any time display elements
        const timeElements = document.querySelectorAll('.current-time-display');
        timeElements.forEach(element => {
            element.textContent = khmerTime + ' UTC';
        });
    }

    // Start the clock
    document.addEventListener('DOMContentLoaded', function() {
        updateNavTime();
        setInterval(updateNavTime, 1000);
    });
</script>
</body>
</html>



================================================
FILE: resources/views/borrowings/index.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-arrow-left-right text-info"></i>
                    </div>
                    <span class="gradient-text">គ្រប់គ្រងការខ្ចី</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-clock-history me-1"></i>
                    គ្រប់គ្រងការខ្ចីសៀវភៅទាំងអស់
                </p>
            </div>
            <div class="header-actions">
                <button class="btn btn-outline-info modern-btn me-2 khmer-medium" onclick="refreshData()">
                    <i class="bi bi-arrow-clockwise me-2"></i>ធ្វើឱ្យទាន់សម័យ
                </button>
                <a href="{{ route('borrowings.create') }}" class="btn btn-info modern-btn khmer-medium">
                    <i class="bi bi-plus-circle me-2"></i>បង្កើតការខ្ចីថ្មី
                </a>
            </div>
        </div>
    </x-slot>

    <!-- Real-time Status Bar -->
    <div class="status-bar mb-4">
        <div class="row g-3">
            <div class="col-md-3">
                <div class="status-item">
                    <i class="bi bi-clock text-primary"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">ពេលវេលាបច្ចុប្បន្ន (UTC)</div>
                        <div class="status-value khmer-medium" id="current-datetime">២០២៥-០៦-២០ ០៥:៤៨:៣៨</div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="status-item">
                    <i class="bi bi-person-circle text-success"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">អ្នកប្រើបច្ចុប្បន្ន</div>
                        <div class="status-value khmer-medium">Chhunleangcheng</div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="status-item">
                    <i class="bi bi-graph-up text-warning"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">ការខ្ចីសកម្ម</div>
                        <div class="status-value khmer-medium khmer-number" id="active-borrowings">{{ $stats['active_borrowings'] ?? 0 }}</div>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="status-item">
                    <i class="bi bi-exclamation-triangle text-danger"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">ហួសកំណត់</div>
                        <div class="status-value khmer-medium khmer-number" id="overdue-count">{{ $stats['overdue_borrowings'] ?? 0 }}</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Search and Filter Section -->
    <div class="card modern-card mb-4">
        <div class="card-header bg-gradient-info text-white">
            <div class="d-flex align-items-center">
                <div class="filter-icon me-3">
                    <i class="bi bi-funnel"></i>
                </div>
                <div>
                    <h6 class="card-title mb-0 khmer-semibold">ស្វែងរក និង ត្រងការខ្ចី</h6>
                    <small class="opacity-75 khmer-regular">ស្វែងរកការខ្ចីតាមលក្ខខណ្ឌផ្សេងៗ</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('borrowings.index') }}" class="filter-form">
                <div class="row g-3">
                    <!-- Search Input -->
                    <div class="col-md-3">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-search me-1"></i>ស្វែងរកការខ្ចី
                        </label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-search text-muted"></i>
                            </span>
                            <input type="text" name="search" class="form-control khmer-regular"
                                   placeholder="ស្វែងរកតាមសៀវភៅ, សមាជិក..."
                                   value="{{ request('search') }}">
                        </div>
                    </div>

                    <!-- Status Filter -->
                    <div class="col-md-3">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-shield-check me-1"></i>ស្ថានភាពការខ្ចី
                        </label>
                        <select name="status" class="form-select khmer-regular">
                            <option value="">ស្ថានភាពទាំងអស់</option>
                            <option value="active" {{ request('status') == 'active' ? 'selected' : '' }}>កំពុងខ្ចី</option>
                            <option value="returned" {{ request('status') == 'returned' ? 'selected' : '' }}>បានត្រឡប់</option>
                            <option value="overdue" {{ request('status') == 'overdue' ? 'selected' : '' }}>ហួសកំណត់</option>
                        </select>
                    </div>

                    <!-- Date Range Filter -->
                    <div class="col-md-2">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-calendar3 me-1"></i>ចាប់ពីថ្ងៃ
                        </label>
                        <input type="date" name="date_from" class="form-control khmer-regular"
                               value="{{ request('date_from') }}">
                    </div>

                    <div class="col-md-2">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-calendar-check me-1"></i>ដល់ថ្ងៃ
                        </label>
                        <input type="date" name="date_to" class="form-control khmer-regular"
                               value="{{ request('date_to') }}">
                    </div>

                    <!-- Filter Actions -->
                    <div class="col-md-2">
                        <label class="form-label">&nbsp;</label>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-outline-info khmer-medium">
                                <i class="bi bi-filter me-1"></i>ត្រង
                            </button>
                            <a href="{{ route('borrowings.index') }}" class="btn btn-outline-secondary btn-sm khmer-regular">
                                <i class="bi bi-arrow-clockwise me-1"></i>កំណត់ឡើងវិញ
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Borrowings Statistics Cards -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="stat-mini-card info">
                <div class="stat-mini-icon">
                    <i class="bi bi-arrow-left-right"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $borrowings->total() }}</div>
                    <div class="stat-mini-label khmer-regular">ការខ្ចីសរុប</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card primary">
                <div class="stat-mini-icon">
                    <i class="bi bi-clock"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $borrowings->whereNull('returned_at')->count() }}</div>
                    <div class="stat-mini-label khmer-regular">កំពុងខ្ចី</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card success">
                <div class="stat-mini-icon">
                    <i class="bi bi-check-circle"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $borrowings->whereNotNull('returned_at')->count() }}</div>
                    <div class="stat-mini-label khmer-regular">បានត្រឡប់</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card danger">
                <div class="stat-mini-icon">
                    <i class="bi bi-exclamation-triangle"></i>
                </div>
                <div class="stat-mini-content">
                    @php
                        $overdueCount = $borrowings->filter(function($borrowing) {
                            return $borrowing->isOverdue() && !$borrowing->returned_at;
                        })->count();
                    @endphp
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $overdueCount }}</div>
                    <div class="stat-mini-label khmer-regular">ហួសកំណត់</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Borrowings Table Card -->
    <div class="card modern-card">
        <div class="card-header bg-white border-bottom-0">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <div class="table-icon me-3">
                        <i class="bi bi-table"></i>
                    </div>
                    <div>
                        <h6 class="card-title mb-0 khmer-semibold">បញ្ជីការខ្ចី</h6>
                        <small class="text-muted khmer-regular">
                            បង្ហាញលទ្ធផល <span class="khmer-number">{{ $borrowings->firstItem() ?? 0 }}</span> -
                            <span class="khmer-number">{{ $borrowings->lastItem() ?? 0 }}</span> នៃ
                            <span class="khmer-number">{{ $borrowings->total() }}</span> ការខ្ចី
                        </small>
                    </div>
                </div>
                <div class="table-actions">
                    <div class="dropdown">
                        <button class="btn btn-outline-secondary btn-sm dropdown-toggle khmer-regular" type="button" data-bs-toggle="dropdown">
                            <i class="bi bi-three-dots me-1"></i>សកម្មភាព
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item khmer-regular" href="#" onclick="exportToPDF()">
                                    <i class="bi bi-file-pdf me-2"></i>នាំចេញជា PDF
                                </a></li>
                            <li><a class="dropdown-item khmer-regular" href="#" onclick="exportToExcel()">
                                    <i class="bi bi-file-excel me-2"></i>នាំចេញជា Excel
                                </a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item khmer-regular" href="#" onclick="printTable()">
                                    <i class="bi bi-printer me-2"></i>បោះពុម្ព
                                </a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if($borrowings->count() > 0)
                <div class="table-responsive">
                    <table class="table table-hover modern-table mb-0" id="borrowings-table">
                        <thead>
                        <tr>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-person me-1"></i>សមាជិក
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-book me-1"></i>សៀវភៅ
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-calendar me-1"></i>ថ្ងៃខ្ចី
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-calendar-check me-1"></i>ថ្ងៃត្រូវត្រឡប់
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-calendar-x me-1"></i>ថ្ងៃត្រឡប់
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-shield-check me-1"></i>ស្ថានភាព
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-currency-dollar me-1"></i>ការពិន័យ
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-gear me-1"></i>សកម្មភាព
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach($borrowings as $borrowing)
                            <tr class="table-row-hover" data-borrowing-id="{{ $borrowing->id }}">
                                <td class="border-0">
                                    <div class="member-info-cell">
                                        <div class="member-avatar-small">
                                            {{ strtoupper(substr($borrowing->member->name, 0, 2)) }}
                                        </div>
                                        <div class="member-details-small">
                                            <div class="member-name-small khmer-semibold">{{ $borrowing->member->name }}</div>
                                            <div class="member-email-small text-muted">{{ $borrowing->member->email }}</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="book-info-cell">
                                        <div class="book-cover-tiny">
                                            <i class="bi bi-book"></i>
                                        </div>
                                        <div class="book-details-small">
                                            <div class="book-title-small khmer-semibold">{{ Str::limit($borrowing->book->title, 30) }}</div>
                                            <div class="book-author-small text-muted khmer-regular">{{ $borrowing->book->author }}</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="date-cell">
                                        <div class="date-main khmer-regular">{{ $borrowing->borrowed_at->format('d/m/Y') }}</div>
                                        <div class="date-time text-muted">{{ $borrowing->borrowed_at->format('H:i') }}</div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="date-cell {{ $borrowing->isOverdue() && !$borrowing->returned_at ? 'overdue-warning' : '' }}">
                                        <div class="date-main khmer-regular">{{ $borrowing->due_date->format('d/m/Y') }}</div>
                                        <div class="date-countdown text-muted">
                                            @if(!$borrowing->returned_at)
                                                @if($borrowing->isOverdue())
                                                    <span class="text-danger khmer-regular">
                                                            <i class="bi bi-exclamation-triangle"></i>
                                                            ហួស <span class="khmer-number">{{ $borrowing->days_overdue }}</span>ថ្ងៃ
                                                        </span>
                                                @else
                                                    <span class="text-info khmer-regular">
                                                            នៅសល់ <span class="khmer-number">{{ $borrowing->due_date->diffInDays(now()) }}</span>ថ្ងៃ
                                                        </span>
                                                @endif
                                            @endif
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    @if($borrowing->returned_at)
                                        <div class="date-cell">
                                            <div class="date-main khmer-regular">{{ $borrowing->returned_at->format('d/m/Y') }}</div>
                                            <div class="date-time text-muted">{{ $borrowing->returned_at->format('H:i') }}</div>
                                        </div>
                                    @else
                                        <span class="text-muted khmer-regular">មិនទាន់ត្រឡប់</span>
                                    @endif
                                </td>
                                <td class="border-0">
                                    @if($borrowing->returned_at)
                                        <span class="status-badge success khmer-regular">
                                                <i class="bi bi-check-circle"></i> បានត្រឡប់
                                            </span>
                                    @elseif($borrowing->isOverdue())
                                        <span class="status-badge danger pulse khmer-regular">
                                                <i class="bi bi-exclamation-triangle"></i> ហួសកំណត់
                                            </span>
                                    @else
                                        <span class="status-badge primary khmer-regular">
                                                <i class="bi bi-clock"></i> កំពុងខ្ចី
                                            </span>
                                    @endif
                                </td>
                                <td class="border-0">
                                    @if($borrowing->fine_amount && $borrowing->fine_amount > 0)
                                        <div class="fine-cell">
                                            <div class="fine-amount">${{ number_format($borrowing->fine_amount, 2) }}</div>
                                            @if($borrowing->fine_paid)
                                                <span class="badge bg-success ms-1 khmer-regular">បានបង់</span>
                                            @else
                                                <span class="badge bg-danger ms-1 khmer-regular">មិនទាន់បង់</span>
                                            @endif
                                        </div>
                                    @else
                                        <span class="text-muted">-</span>
                                    @endif
                                </td>
                                <td class="border-0">
                                    <div class="action-buttons">
                                        <a href="{{ route('borrowings.show', $borrowing) }}"
                                           class="btn btn-sm btn-outline-info"
                                           data-bs-toggle="tooltip" title="មើលលម្អិត">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        @if(!$borrowing->returned_at)
                                            <button type="button"
                                                    class="btn btn-sm btn-outline-success"
                                                    data-bs-toggle="tooltip" title="បានត្រឡប់"
                                                    onclick="returnBook({{ $borrowing->id }})">
                                                <i class="bi bi-check"></i>
                                            </button>
                                            @if($borrowing->isOverdue())
                                                <button type="button"
                                                        class="btn btn-sm btn-outline-warning"
                                                        data-bs-toggle="tooltip" title="គណនាការពិន័យ"
                                                        onclick="calculateFine({{ $borrowing->id }})">
                                                    <i class="bi bi-currency-dollar"></i>
                                                </button>
                                            @endif
                                        @endif
                                        <div class="dropdown d-inline">
                                            <button class="btn btn-sm btn-outline-secondary dropdown-toggle"
                                                    type="button"
                                                    data-bs-toggle="dropdown">
                                                <i class="bi bi-three-dots"></i>
                                            </button>
                                            <ul class="dropdown-menu">
                                                <li><a class="dropdown-item khmer-regular" href="{{ route('borrowings.edit', $borrowing) }}">
                                                        <i class="bi bi-pencil me-2"></i>កែប្រែ
                                                    </a></li>
                                                @if(!$borrowing->returned_at)
                                                    <li><a class="dropdown-item khmer-regular" href="#" onclick="extendDueDate({{ $borrowing->id }})">
                                                            <i class="bi bi-calendar-plus me-2"></i>បន្ថែមកាលបរិច្ឆេទ
                                                        </a></li>
                                                @endif
                                                <li><hr class="dropdown-divider"></li>
                                                <li><a class="dropdown-item text-danger khmer-regular" href="#" onclick="deleteBorrowing({{ $borrowing->id }})">
                                                        <i class="bi bi-trash me-2"></i>លុប
                                                    </a></li>
                                            </ul>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        @endforeach
                        </tbody>
                    </table>
                </div>
            @else
                <!-- Empty State -->
                <div class="empty-state-large">
                    <div class="empty-icon">
                        <i class="bi bi-arrow-left-right"></i>
                    </div>
                    <h4 class="empty-title khmer-semibold">មិនមានការខ្ចី</h4>
                    <p class="empty-description khmer-regular">
                        @if(request()->hasAny(['search', 'status', 'date_from', 'date_to']))
                            មិនមានការខ្ចីត្រូវនឹងការស្វែងរករបស់អ្នកទេ។ សាកល្បងស្វែងរកដោយលក្ខខណ្ឌផ្សេង។
                        @else
                            មិនទាន់មានការខ្ចីនៅក្នុងប្រព័ន្ធនេះទេ។ ចាប់ផ្តើមដោយបង្កើតការខ្ចីដំបូង។
                        @endif
                    </p>
                    <div class="empty-actions">
                        @if(request()->hasAny(['search', 'status', 'date_from', 'date_to']))
                            <a href="{{ route('borrowings.index') }}" class="btn btn-outline-primary khmer-medium">
                                <i class="bi bi-arrow-clockwise me-1"></i>មើលការខ្ចីទាំងអស់
                            </a>
                        @endif
                        <a href="{{ route('borrowings.create') }}" class="btn btn-info khmer-medium">
                            <i class="bi bi-plus me-1"></i>បង្កើតការខ្ចីថ្មី
                        </a>
                    </div>
                </div>
            @endif
        </div>

        <!-- Pagination -->
        @if($borrowings->hasPages())
            <div class="card-footer bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="pagination-info khmer-regular text-muted">
                        បង្ហាញ <span class="khmer-number">{{ $borrowings->firstItem() }}</span> -
                        <span class="khmer-number">{{ $borrowings->lastItem() }}</span> នៃ
                        <span class="khmer-number">{{ $borrowings->total() }}</span> លទ្ធផល
                    </div>
                    <div class="pagination-links">
                        {{ $borrowings->withQueryString()->links('pagination::bootstrap-4') }}
                    </div>
                </div>
            </div>
        @endif
    </div>

    <!-- Quick Return Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h5 class="modal-title khmer-semibold">
                        <i class="bi bi-check-circle text-success me-2"></i>បញ្ជាក់ការត្រឡប់សៀវភៅ
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="return-details"></div>
                    <div class="alert alert-info khmer-regular mt-3">
                        <i class="bi bi-info-circle me-2"></i>
                        តើអ្នកពិតជាចង់បញ្ជាក់ការត្រឡប់សៀវភៅនេះមែនទេ?
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary khmer-regular" data-bs-dismiss="modal">បោះបង់</button>
                    <button type="button" class="btn btn-success khmer-medium" id="confirm-return">បញ្ជាក់ការត្រឡប់</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Calculate Fine Modal -->
    <div class="modal fade" id="fineModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h5 class="modal-title khmer-semibold">
                        <i class="bi bi-currency-dollar text-warning me-2"></i>គណនាការពិន័យ
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="fine-details"></div>
                    <div class="mb-3">
                        <label for="fine-amount" class="form-label khmer-medium">ចំនួនការពិន័យ ($)</label>
                        <input type="number" class="form-control" id="fine-amount" step="0.01" min="0">
                    </div>
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="fine-paid">
                        <label class="form-check-label khmer-regular" for="fine-paid">
                            បានបង់ការពិន័យហើយ
                        </label>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary khmer-regular" data-bs-dismiss="modal">បោះបង់</button>
                    <button type="button" class="btn btn-warning khmer-medium" id="save-fine">រក្សាទុក</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Borrowings Page -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: #6b46c1;
            box-shadow: 0 4px 15px rgba(168, 237, 234, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Status bar */
        .status-bar {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 12px;
            padding: 1rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .status-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
        }

        .status-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .status-item i {
            font-size: 1.5rem;
            margin-right: 1rem;
        }

        .status-label {
            font-size: 0.8rem;
            color: #6c757d;
            margin-bottom: 0.25rem;
        }

        .status-value {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2d3436;
        }

        /* Filter card styling */
        .filter-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Mini stat cards */
        .stat-mini-card {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            border-radius: 12px;
            transition: all 0.3s ease;
            border: none;
            position: relative;
            overflow: hidden;
            color: white;
        }

        .stat-mini-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .stat-mini-card.info {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #6b46c1;
        }

        .stat-mini-card.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .stat-mini-card.success {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
        }

        .stat-mini-card.danger {
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            color: #dc3545;
        }

        .stat-mini-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-right: 1rem;
        }

        .stat-mini-number {
            font-size: 1.8rem;
            margin-bottom: 0.25rem;
        }

        .stat-mini-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        /* Table styling */
        .table-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6b46c1;
            font-size: 1.1rem;
        }

        .modern-table {
            font-size: 0.9rem;
        }

        .modern-table thead th {
            background: #f8f9fa;
            font-weight: 600;
            color: #495057;
            border: none;
            padding: 1rem 0.75rem;
            vertical-align: middle;
        }

        .table-row-hover {
            transition: all 0.2s ease;
        }

        .table-row-hover:hover {
            background: rgba(168, 237, 234, 0.05);
            transform: scale(1.005);
        }

        /* Member info cell */
        .member-info-cell {
            display: flex;
            align-items: center;
        }

        .member-avatar-small {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.9rem;
            font-weight: 600;
            margin-right: 0.75rem;
            flex-shrink: 0;
        }

        .member-name-small {
            font-size: 0.9rem;
            color: #2d3436;
            margin-bottom: 0.25rem;
        }

        .member-email-small {
            font-size: 0.8rem;
        }

        /* Book info cell */
        .book-info-cell {
            display: flex;
            align-items: center;
        }

        .book-cover-tiny {
            width: 35px;
            height: 35px;
            border-radius: 6px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.9rem;
            margin-right: 0.75rem;
            flex-shrink: 0;
        }

        .book-title-small {
            font-size: 0.9rem;
            color: #2d3436;
            margin-bottom: 0.25rem;
        }

        .book-author-small {
            font-size: 0.8rem;
        }

        /* Date cells */
        .date-cell {
            text-align: center;
        }

        .date-main {
            font-weight: 500;
            margin-bottom: 0.25rem;
        }

        .date-time, .date-countdown {
            font-size: 0.8rem;
        }

        .overdue-warning {
            background: rgba(220, 53, 69, 0.1);
            border-radius: 8px;
            padding: 0.5rem;
        }

        /* Fine cell */
        .fine-cell {
            text-align: center;
        }

        .fine-amount {
            font-family: monospace;
            font-weight: 600;
            color: #dc3545;
            margin-bottom: 0.25rem;
        }

        /* Status badge */
        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .status-badge.success {
            background: #d4edda;
            color: #155724;
        }

        .status-badge.primary {
            background: #cce5ff;
            color: #004085;
        }

        .status-badge.danger {
            background: #f8d7da;
            color: #721c24;
        }

        .status-badge.pulse {
            animation: pulse 2s infinite;
        }

        /* Action buttons */
        .action-buttons {
            display: flex;
            gap: 0.25rem;
            align-items: center;
            flex-wrap: nowrap;
        }

        .action-buttons .btn {
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            flex-shrink: 0;
        }

        /* Empty state */
        .empty-state-large {
            text-align: center;
            padding: 4rem 2rem;
        }

        .empty-icon {
            font-size: 5rem;
            color: #dee2e6;
            margin-bottom: 2rem;
        }

        .empty-title {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .empty-description {
            color: #adb5bd;
            margin-bottom: 2rem;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .empty-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        /* Modal enhancements */
        .modal-content {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        }

        .modal-header {
            background: #f8f9fa;
            border-radius: 15px 15px 0 0;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .status-bar .row {
                gap: 0.5rem;
            }

            .status-item {
                padding: 0.75rem;
                margin-bottom: 0.5rem;
            }

            .status-item i {
                font-size: 1.2rem;
                margin-right: 0.75rem;
            }

            .member-info-cell,
            .book-info-cell {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .member-avatar-small,
            .book-cover-tiny {
                margin-right: 0;
                margin-bottom: 0.25rem;
            }

            .action-buttons {
                flex-direction: column;
                gap: 0.25rem;
            }

            .stat-mini-card {
                margin-bottom: 1rem;
            }
        }

        /* Animations */
        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.7; }
            100% { opacity: 1; }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modern-card {
            animation: fadeInUp 0.6s ease-out;
        }

        .stat-mini-card {
            animation: fadeInUp 0.6s ease-out;
        }

        /* Loading states */
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255,255,255,0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .btn.loading {
            position: relative;
            color: transparent;
        }

        .btn.loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 16px;
            height: 16px;
            border: 2px solid currentColor;
            border-radius: 50%;
            border-right-color: transparent;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            to {
                transform: translate(-50%, -50%) rotate(360deg);
            }
        }
    </style>

    <!-- Enhanced JavaScript -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Update current date/time
        function updateDateTime() {
            const now = new Date();
            const year = now.getUTCFullYear();
            const month = String(now.getUTCMonth() + 1).padStart(2, '0');
            const day = String(now.getUTCDate()).padStart(2, '0');
            const hours = String(now.getUTCHours()).padStart(2, '0');
            const minutes = String(now.getUTCMinutes()).padStart(2, '0');
            const seconds = String(now.getUTCSeconds()).padStart(2, '0');

            const timeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
            const khmerTimeString = toKhmerNumbers(timeString);

            const timeElement = document.getElementById('current-datetime');
            if (timeElement) {
                timeElement.textContent = khmerTimeString;
            }
        }

        // Return book function
        function returnBook(borrowingId) {
            // Get borrowing details
            fetch(`/api/borrowings/${borrowingId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('return-details').innerHTML = `
                        <div class="mb-3">
                            <strong class="khmer-medium">សមាជិក:</strong> ${data.member.name}<br>
                            <strong class="khmer-medium">សៀវភៅ:</strong> ${data.book.title}<br>
                            <strong class="khmer-medium">ថ្ងៃខ្ចី:</strong> ${new Date(data.borrowed_at).toLocaleDateString('km-KH')}<br>
                            <strong class="khmer-medium">ថ្ងៃត្រូវត្រឡប់:</strong> ${new Date(data.due_date).toLocaleDateString('km-KH')}
                        </div>
                    `;

                    document.getElementById('confirm-return').onclick = function() {
                        confirmReturn(borrowingId);
                    };

                    new bootstrap.Modal(document.getElementById('returnModal')).show();
                });
        }

        // Confirm return
        function confirmReturn(borrowingId) {
            const btn = document.getElementById('confirm-return');
            btn.classList.add('loading');
            btn.disabled = true;

            fetch(`/borrowings/${borrowingId}/return`, {
                method: 'PATCH',
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    'Content-Type': 'application/json',
                },
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('កំហុស: ' + data.message);
                        btn.classList.remove('loading');
                        btn.disabled = false;
                    }
                })
                .catch(error => {
                    alert('កំហុសក្នុងការត្រឡប់សៀវភៅ');
                    btn.classList.remove('loading');
                    btn.disabled = false;
                });
        }

        // Calculate fine function
        function calculateFine(borrowingId) {
            fetch(`/api/borrowings/${borrowingId}`)
                .then(response => response.json())
                .then(data => {
                    const daysOverdue = Math.max(0, Math.floor((new Date() - new Date(data.due_date)) / (1000 * 60 * 60 * 24)));
                    const suggestedFine = daysOverdue * 1.00; // $1 per day

                    document.getElementById('fine-details').innerHTML = `
                        <div class="mb-3">
                            <strong class="khmer-medium">សមាជិក:</strong> ${data.member.name}<br>
                            <strong class="khmer-medium">សៀវភៅ:</strong> ${data.book.title}<br>
                            <strong class="khmer-medium">ថ្ងៃហួសកំណត់:</strong> <span class="khmer-number">${toKhmerNumbers(daysOverdue)}</span> ថ្ងៃ<br>
                            <strong class="khmer-medium">ការពិន័យដែលបានស្នើ:</strong> $${suggestedFine.toFixed(2)}
                        </div>
                    `;

                    document.getElementById('fine-amount').value = suggestedFine.toFixed(2);
                    document.getElementById('fine-paid').checked = false;

                    document.getElementById('save-fine').onclick = function() {
                        saveFine(borrowingId);
                    };

                    new bootstrap.Modal(document.getElementById('fineModal')).show();
                });
        }

        // Save fine
        function saveFine(borrowingId) {
            const fineAmount = document.getElementById('fine-amount').value;
            const finePaid = document.getElementById('fine-paid').checked;
            const btn = document.getElementById('save-fine');

            btn.classList.add('loading');
            btn.disabled = true;

            fetch(`/borrowings/${borrowingId}/fine`, {
                method: 'POST',
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    fine_amount: fineAmount,
                    fine_paid: finePaid
                })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        alert('កំហុស: ' + data.message);
                        btn.classList.remove('loading');
                        btn.disabled = false;
                    }
                })
                .catch(error => {
                    alert('កំហុសក្នុងការរក្សាទុកការពិន័យ');
                    btn.classList.remove('loading');
                    btn.disabled = false;
                });
        }

        // Extend due date
        function extendDueDate(borrowingId) {
            const days = prompt('បន្ថែមចំនួនថ្ងៃ:', '7');
            if (days && !isNaN(days) && parseInt(days) > 0) {
                fetch(`/borrowings/${borrowingId}/extend`, {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        days: parseInt(days)
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('កំហុស: ' + data.message);
                        }
                    });
            }
        }

        // Delete borrowing
        function deleteBorrowing(borrowingId) {
            if (confirm('តើអ្នកពិតជាចង់លុបការខ្ចីនេះមែនទេ?')) {
                fetch(`/borrowings/${borrowingId}`, {
                    method: 'DELETE',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('កំហុស: ' + data.message);
                        }
                    });
            }
        }

        // Refresh data
        function refreshData() {
            location.reload();
        }

        // Export functions
        function exportToPDF() {
            window.open('/borrowings/export/pdf?' + new URLSearchParams(window.location.search), '_blank');
        }

        function exportToExcel() {
            window.open('/borrowings/export/excel?' + new URLSearchParams(window.location.search), '_blank');
        }

        function printTable() {
            window.print();
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Convert numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                const originalText = element.textContent;
                element.textContent = toKhmerNumbers(originalText);
            });

            // Update time immediately and then every second
            updateDateTime();
            setInterval(updateDateTime, 1000);

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add loading states to forms
            const filterForm = document.querySelector('.filter-form');
            if (filterForm) {
                filterForm.addEventListener('submit', function() {
                    const submitBtn = this.querySelector('button[type="submit"]');
                    submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-1"></i>កំពុងស្វែងរក...';
                    submitBtn.disabled = true;
                });
            }

            // Animate cards on scroll
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animationDelay = `${Math.random() * 0.3}s`;
                        entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                    }
                });
            });

            document.querySelectorAll('.stat-mini-card').forEach(card => {
                observer.observe(card);
            });

            // Enhanced table row interactions
            document.querySelectorAll('.table-row-hover').forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.boxShadow = '0 4px 15px rgba(168, 237, 234, 0.15)';
                });

                row.addEventListener('mouseleave', function() {
                    this.style.boxShadow = '';
                });
            });

            // Auto-refresh every 5 minutes
            setInterval(function() {
                // Update counters without full page reload
                fetch('/api/borrowings/stats')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('active-borrowings').textContent = toKhmerNumbers(data.active_borrowings);
                        document.getElementById('overdue-count').textContent = toKhmerNumbers(data.overdue_borrowings);
                    });
            }, 300000); // 5 minutes
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl+R to refresh
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                refreshData();
            }

            // F5 to refresh
            if (e.key === 'F5') {
                e.preventDefault();
                refreshData();
            }

            // N to create new borrowing
            if (e.key === 'n' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('borrowings.create') }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/borrowings/show.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-eye text-info"></i>
                    </div>
                    <span class="gradient-text">ព័ត៌មានលម្អិតការខ្ចី</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    ព័ត៌មានពេញលេញអំពីការខ្ចីនេះ
                </p>
            </div>
            <div class="header-actions">
                <div class="current-time-display me-3">
                    <small class="text-muted khmer-regular">ពេលវេលាបច្ចុប្បន្ន (UTC)</small>
                    <div class="fw-bold text-primary khmer-medium" id="header-time">២០២៥-០៦-២០ ០៥:៥៨:៤៦</div>
                </div>
                @if(!$borrowing->returned_at)
                    <button class="btn btn-success modern-btn me-2 khmer-medium" onclick="returnBook({{ $borrowing->id }})">
                        <i class="bi bi-check-circle me-2"></i>បានត្រឡប់
                    </button>
                @endif
                <a href="{{ route('borrowings.edit', $borrowing) }}" class="btn btn-warning modern-btn me-2 khmer-medium">
                    <i class="bi bi-pencil me-2"></i>កែប្រែ
                </a>
                <a href="{{ route('borrowings.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <!-- Current User & Status Bar -->
    <div class="status-bar mb-4">
        <div class="row g-3">
            <div class="col-md-4">
                <div class="status-item">
                    <i class="bi bi-person-circle text-success"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">អ្នកប្រើបច្ចុប្បន្ន</div>
                        <div class="status-value khmer-medium">Chhunleangcheng</div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="status-item">
                    <i class="bi bi-calendar-event text-primary"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">កាលបរិច្ឆេទបច្ចុប្បន្ន</div>
                        <div class="status-value khmer-medium" id="current-date">២០២៥-០៦-២០</div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="status-item">
                    <i class="bi bi-shield-check {{ $borrowing->returned_at ? 'text-success' : ($borrowing->isOverdue() ? 'text-danger' : 'text-warning') }}"></i>
                    <div class="status-content">
                        <div class="status-label khmer-regular">ស្ថានភាពការខ្ចី</div>
                        <div class="status-value khmer-medium">
                            @if($borrowing->returned_at)
                                <span class="text-success">បានត្រឡប់</span>
                            @elseif($borrowing->isOverdue())
                                <span class="text-danger">ហួសកំណត់</span>
                            @else
                                <span class="text-warning">កំពុងខ្ចី</span>
                            @endif
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <!-- Main Borrowing Information -->
        <div class="col-lg-8">
            <!-- Borrowing Details Card -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-info text-white">
                    <div class="d-flex align-items-center">
                        <div class="borrowing-icon me-3">
                            <i class="bi bi-arrow-left-right"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានការខ្ចី #{{ $borrowing->id }}</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានលម្អិតអំពីការខ្ចីនេះ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row">
                        <!-- Member Information -->
                        <div class="col-md-6">
                            <div class="info-section">
                                <h6 class="section-title khmer-semibold">
                                    <i class="bi bi-person text-success me-2"></i>ព័ត៌មានសមាជិក
                                </h6>
                                <div class="member-card">
                                    <div class="member-avatar-large">
                                        {{ strtoupper(substr($borrowing->member->name, 0, 2)) }}
                                    </div>
                                    <div class="member-details">
                                        <h6 class="member-name khmer-semibold">{{ $borrowing->member->name }}</h6>
                                        <div class="member-email">{{ $borrowing->member->email }}</div>
                                        @if($borrowing->member->phone)
                                            <div class="member-phone">{{ $borrowing->member->phone }}</div>
                                        @endif
                                        <div class="member-status">
                                            <span class="badge bg-{{ $borrowing->member->membership_status == 'active' ? 'success' : 'secondary' }} khmer-regular">
                                                {{ $borrowing->member->membership_status == 'active' ? 'សកម្ម' : 'អសកម្ម' }}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="member-stats mt-3">
                                    <div class="row text-center">
                                        <div class="col-6">
                                            <div class="stat-item-small">
                                                <div class="stat-number khmer-number">{{ $borrowing->member->activeBorrowings()->count() }}</div>
                                                <div class="stat-label khmer-regular">កំពុងខ្ចី</div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="stat-item-small">
                                                <div class="stat-number khmer-number">{{ $borrowing->member->borrowings()->count() }}</div>
                                                <div class="stat-label khmer-regular">សរុប</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Book Information -->
                        <div class="col-md-6">
                            <div class="info-section">
                                <h6 class="section-title khmer-semibold">
                                    <i class="bi bi-book text-primary me-2"></i>ព័ត៌មានសៀវភៅ
                                </h6>
                                <div class="book-card">
                                    <div class="book-cover-large">
                                        <i class="bi bi-book"></i>
                                    </div>
                                    <div class="book-details">
                                        <h6 class="book-title khmer-semibold">{{ $borrowing->book->title }}</h6>
                                        <div class="book-author khmer-regular">{{ $borrowing->book->author }}</div>
                                        <div class="book-genre">
                                            <span class="badge bg-light text-dark khmer-regular">{{ $borrowing->book->genre }}</span>
                                        </div>
                                        <div class="book-isbn">ISBN: {{ $borrowing->book->isbn }}</div>
                                    </div>
                                </div>
                                <div class="book-availability mt-3">
                                    <div class="availability-info">
                                        <div class="availability-bar">
                                            <div class="availability-progress"
                                                 style="width: {{ $borrowing->book->total_copies > 0 ? ($borrowing->book->available_copies / $borrowing->book->total_copies) * 100 : 0 }}%">
                                            </div>
                                        </div>
                                        <div class="availability-text khmer-regular">
                                            មាន <span class="khmer-number">{{ $borrowing->book->available_copies }}</span> /
                                            <span class="khmer-number">{{ $borrowing->book->total_copies }}</span> ក្បាល
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Borrowing Timeline Card -->
            <div class="card modern-card">
                <div class="card-header bg-white border-bottom-0">
                    <div class="d-flex align-items-center">
                        <div class="timeline-icon me-3">
                            <i class="bi bi-clock-history"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">កាលវិភាគការខ្ចី</h6>
                            <small class="text-muted khmer-regular">ដំណើរការនៃការខ្ចីនេះ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="timeline">
                        <!-- Borrowed -->
                        <div class="timeline-item completed">
                            <div class="timeline-marker">
                                <i class="bi bi-plus-circle"></i>
                            </div>
                            <div class="timeline-content">
                                <div class="timeline-title khmer-semibold">បានខ្ចី</div>
                                <div class="timeline-date khmer-regular">{{ $borrowing->borrowed_at->format('d/m/Y H:i') }}</div>
                                <div class="timeline-description khmer-regular">ការខ្ចីត្រូវបានបង្កើតដោយជោគជ័យ</div>
                            </div>
                        </div>

                        <!-- Due Date -->
                        <div class="timeline-item {{ $borrowing->isOverdue() && !$borrowing->returned_at ? 'overdue' : ($borrowing->returned_at ? 'completed' : 'pending') }}">
                            <div class="timeline-marker">
                                <i class="bi bi-calendar-check"></i>
                            </div>
                            <div class="timeline-content">
                                <div class="timeline-title khmer-semibold">
                                    ថ្ងៃត្រូវត្រឡប់
                                    @if($borrowing->isOverdue() && !$borrowing->returned_at)
                                        <span class="badge bg-danger ms-2 khmer-regular">ហួសកំណត់</span>
                                    @endif
                                </div>
                                <div class="timeline-date khmer-regular">{{ $borrowing->due_date->format('d/m/Y') }}</div>
                                <div class="timeline-description khmer-regular">
                                    @if($borrowing->returned_at)
                                        បានត្រឡប់ទាន់ពេលវេលា
                                    @elseif($borrowing->isOverdue())
                                        ហួសកំណត់ <span class="khmer-number">{{ $borrowing->days_overdue }}</span> ថ្ងៃ
                                    @else
                                        នៅសល់ <span class="khmer-number">{{ $borrowing->due_date->diffInDays(now()) }}</span> ថ្ងៃ
                                    @endif
                                </div>
                            </div>
                        </div>

                        <!-- Returned -->
                        @if($borrowing->returned_at)
                            <div class="timeline-item completed">
                                <div class="timeline-marker">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="timeline-content">
                                    <div class="timeline-title khmer-semibold">បានត្រឡប់</div>
                                    <div class="timeline-date khmer-regular">{{ $borrowing->returned_at->format('d/m/Y H:i') }}</div>
                                    <div class="timeline-description khmer-regular">
                                        សៀវភៅត្រូវបានត្រឡប់ដោយជោគជ័យ
                                        @if($borrowing->returned_at->gt($borrowing->due_date))
                                            <span class="text-warning">(ត្រឡប់យឺត {{ $borrowing->returned_at->diffInDays($borrowing->due_date) }} ថ្ងៃ)</span>
                                        @else
                                            <span class="text-success">(ត្រឡប់ទាន់ពេលវេលា)</span>
                                        @endif
                                    </div>
                                </div>
                            </div>
                        @else
                            <div class="timeline-item pending">
                                <div class="timeline-marker">
                                    <i class="bi bi-hourglass-split"></i>
                                </div>
                                <div class="timeline-content">
                                    <div class="timeline-title khmer-semibold">រង់ចាំការត្រឡប់</div>
                                    <div class="timeline-description khmer-regular">សៀវភៅនៅតែកំពុងខ្ចី</div>
                                </div>
                            </div>
                        @endif

                        <!-- Fine -->
                        @if($borrowing->fine_amount && $borrowing->fine_amount > 0)
                            <div class="timeline-item {{ $borrowing->fine_paid ? 'completed' : 'warning' }}">
                                <div class="timeline-marker">
                                    <i class="bi bi-currency-dollar"></i>
                                </div>
                                <div class="timeline-content">
                                    <div class="timeline-title khmer-semibold">ការពិន័យ</div>
                                    <div class="timeline-amount">${{ number_format($borrowing->fine_amount, 2) }}</div>
                                    <div class="timeline-description khmer-regular">
                                        @if($borrowing->fine_paid)
                                            <span class="text-success">បានបង់រួច</span>
                                        @else
                                            <span class="text-danger">មិនទាន់បង់</span>
                                        @endif
                                    </div>
                                </div>
                            </div>
                        @endif
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Actions -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-warning text-dark">
                    <div class="d-flex align-items-center">
                        <div class="action-icon me-3">
                            <i class="bi bi-lightning-fill"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">សកម្មភាពរហ័ស</h6>
                            <small class="opacity-75 khmer-regular">ធ្វើការងារលឿន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="quick-actions-vertical">
                        @if(!$borrowing->returned_at)
                            <button class="quick-action-item success" onclick="returnBook({{ $borrowing->id }})">
                                <div class="action-icon-small">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="action-content">
                                    <div class="action-title khmer-semibold">បានត្រឡប់សៀវភៅ</div>
                                    <div class="action-subtitle khmer-regular">បញ្ជាក់ការត្រឡប់</div>
                                </div>
                            </button>

                            @if($borrowing->isOverdue())
                                <button class="quick-action-item warning" onclick="calculateFine({{ $borrowing->id }})">
                                    <div class="action-icon-small">
                                        <i class="bi bi-currency-dollar"></i>
                                    </div>
                                    <div class="action-content">
                                        <div class="action-title khmer-semibold">គណនាការពិន័យ</div>
                                        <div class="action-subtitle khmer-regular">ចំនួន ${{ number_format($borrowing->days_overdue * 1.00, 2) }}</div>
                                    </div>
                                </button>
                            @endif

                            <button class="quick-action-item info" onclick="extendDueDate({{ $borrowing->id }})">
                                <div class="action-icon-small">
                                    <i class="bi bi-calendar-plus"></i>
                                </div>
                                <div class="action-content">
                                    <div class="action-title khmer-semibold">បន្ថែមកាលបរិច្ឆេទ</div>
                                    <div class="action-subtitle khmer-regular">ពន្យាពេលត្រឡប់</div>
                                </div>
                            </button>
                        @endif

                        <a href="{{ route('borrowings.edit', $borrowing) }}" class="quick-action-item primary">
                            <div class="action-icon-small">
                                <i class="bi bi-pencil"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">កែប្រែព័ត៌មាន</div>
                                <div class="action-subtitle khmer-regular">កែប្រែការខ្ចីនេះ</div>
                            </div>
                        </a>

                        <a href="{{ route('borrowings.index') }}" class="quick-action-item secondary">
                            <div class="action-icon-small">
                                <i class="bi bi-list"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">បញ្ជីការខ្ចី</div>
                                <div class="action-subtitle khmer-regular">ត្រឡប់ទៅបញ្ជី</div>
                            </div>
                        </a>
                    </div>
                </div>
            </div>

            <!-- Borrowing Details -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-primary text-white">
                    <div class="d-flex align-items-center">
                        <div class="details-icon me-3">
                            <i class="bi bi-info-circle"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានលម្អិត</h6>
                            <small class="opacity-75 khmer-regular">សេចក្តីលម្អិតការខ្ចី</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="details-list">
                        <div class="detail-item">
                            <div class="detail-label khmer-regular">
                                <i class="bi bi-hash me-2"></i>លេខសម្គាល់
                            </div>
                            <div class="detail-value khmer-number">{{ $borrowing->id }}</div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label khmer-regular">
                                <i class="bi bi-calendar-plus me-2"></i>ថ្ងៃខ្ចី
                            </div>
                            <div class="detail-value khmer-regular">{{ $borrowing->borrowed_at->format('d/m/Y H:i') }}</div>
                        </div>

                        <div class="detail-item">
                            <div class="detail-label khmer-regular">
                                <i class="bi bi-calendar-check me-2"></i>ថ្ងៃត្រូវត្រឡប់
                            </div>
                            <div class="detail-value khmer-regular">{{ $borrowing->due_date->format('d/m/Y') }}</div>
                        </div>

                        @if($borrowing->returned_at)
                            <div class="detail-item">
                                <div class="detail-label khmer-regular">
                                    <i class="bi bi-calendar-x me-2"></i>ថ្ងៃត្រឡប់
                                </div>
                                <div class="detail-value khmer-regular">{{ $borrowing->returned_at->format('d/m/Y H:i') }}</div>
                            </div>
                        @endif

                        <div class="detail-item">
                            <div class="detail-label khmer-regular">
                                <i class="bi bi-clock me-2"></i>រយៈពេលខ្ចី
                            </div>
                            <div class="detail-value khmer-regular khmer-number">{{ $borrowing->borrowed_at->diffInDays($borrowing->due_date) }} ថ្ងៃ</div>
                        </div>

                        @if($borrowing->fine_amount && $borrowing->fine_amount > 0)
                            <div class="detail-item">
                                <div class="detail-label khmer-regular">
                                    <i class="bi bi-currency-dollar me-2"></i>ការពិន័យ
                                </div>
                                <div class="detail-value">
                                    ${{ number_format($borrowing->fine_amount, 2) }}
                                    @if($borrowing->fine_paid)
                                        <span class="badge bg-success ms-1 khmer-regular">បានបង់</span>
                                    @else
                                        <span class="badge bg-danger ms-1 khmer-regular">មិនទាន់បង់</span>
                                    @endif
                                </div>
                            </div>
                        @endif

                        <div class="detail-item">
                            <div class="detail-label khmer-regular">
                                <i class="bi bi-calendar-event me-2"></i>បានបង្កើតនៅ
                            </div>
                            <div class="detail-value khmer-regular">{{ $borrowing->created_at->format('d/m/Y H:i') }}</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- System Information -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-secondary text-white">
                    <div class="d-flex align-items-center">
                        <div class="system-icon me-3">
                            <i class="bi bi-gear"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានប្រព័ន្ធ</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានបច្ចេកទេស</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="system-info">
                        <div class="info-item">
                            <div class="info-label khmer-regular">
                                <i class="bi bi-person-circle me-2"></i>អ្នកប្រើបច្ចុប្បន្ន
                            </div>
                            <div class="info-value">
                                <span class="user-badge khmer-medium">Chhunleangcheng</span>
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label khmer-regular">
                                <i class="bi bi-clock me-2"></i>ពេលវេលាបច្ចុប្បន្ន
                            </div>
                            <div class="info-value">
                                <span class="time-display khmer-medium" id="current-time">២០២៥-០៦-២០ ០៥:៥៨:៤៦</span>
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label khmer-regular">
                                <i class="bi bi-database me-2"></i>មូលដ្ឋានទិន្នន័យ
                            </div>
                            <div class="info-value">
                                <span class="status-indicator online"></span>
                                <span class="khmer-regular">ភ្ជាប់</span>
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label khmer-regular">
                                <i class="bi bi-shield-check me-2"></i>សុវត្ថិភាព
                            </div>
                            <div class="info-value">
                                <span class="status-indicator online"></span>
                                <span class="khmer-regular">សុវត្ថិភាព</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Continue with modals and enhanced styles... -->

    <!-- Quick Return Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h5 class="modal-title khmer-semibold">
                        <i class="bi bi-check-circle text-success me-2"></i>បញ្ជាក់ការត្រឡប់សៀវភៅ
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="return-confirmation">
                        <div class="confirmation-item">
                            <strong class="khmer-medium">សមាជិក:</strong> {{ $borrowing->member->name }}<br>
                            <strong class="khmer-medium">សៀវភៅ:</strong> {{ $borrowing->book->title }}<br>
                            <strong class="khmer-medium">ថ្ងៃខ្ចី:</strong> {{ $borrowing->borrowed_at->format('d/m/Y') }}<br>
                            <strong class="khmer-medium">ថ្ងៃត្រូវត្រឡប់:</strong> {{ $borrowing->due_date->format('d/m/Y') }}
                        </div>
                    </div>

                    @if($borrowing->isOverdue())
                        <div class="alert alert-warning khmer-regular mt-3">
                            <i class="bi bi-exclamation-triangle me-2"></i>
                            <strong>ការព្រមាន:</strong> សៀវភៅនេះហួសកំណត់ {{ $borrowing->days_overdue }} ថ្ងៃ។
                            អាចនឹងមានការពិន័យ ${{ number_format($borrowing->days_overdue * 1.00, 2) }}។
                        </div>
                    @endif

                    <div class="alert alert-info khmer-regular mt-3">
                        <i class="bi bi-info-circle me-2"></i>
                        តើអ្នកពិតជាចង់បញ្ជាក់ការត្រឡប់សៀវភៅនេះមែនទេ?
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary khmer-regular" data-bs-dismiss="modal">បោះបង់</button>
                    <button type="button" class="btn btn-success khmer-medium" onclick="confirmReturn()">បញ្ជាក់ការត្រឡប់</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: #6b46c1;
            box-shadow: 0 4px 15px rgba(168, 237, 234, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Status bar */
        .status-bar {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 12px;
            padding: 1rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .status-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
        }

        .status-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .status-item i {
            font-size: 1.5rem;
            margin-right: 1rem;
        }

        .status-label {
            font-size: 0.8rem;
            color: #6c757d;
            margin-bottom: 0.25rem;
        }

        .status-value {
            font-size: 1.1rem;
            font-weight: 600;
            color: #2d3436;
        }

        /* Info sections */
        .info-section {
            padding: 1.5rem;
            background: #f8f9fa;
            border-radius: 12px;
            margin-bottom: 1rem;
        }

        .section-title {
            margin-bottom: 1rem;
            color: #2d3436;
        }

        /* Member card */
        .member-card {
            display: flex;
            align-items: center;
            background: white;
            padding: 1rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .member-avatar-large {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.3rem;
            font-weight: 600;
            margin-right: 1rem;
        }

        .member-name {
            margin-bottom: 0.25rem;
        }

        .member-email, .member-phone {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 0.25rem;
        }

        /* Book card */
        .book-card {
            display: flex;
            align-items: center;
            background: white;
            padding: 1rem;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .book-cover-large {
            width: 50px;
            height: 65px;
            border-radius: 8px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            margin-right: 1rem;
        }

        .book-title {
            margin-bottom: 0.25rem;
        }

        .book-author, .book-isbn {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 0.25rem;
        }

        /* Availability bar */
        .availability-info {
            margin-top: 0.5rem;
        }

        .availability-bar {
            width: 100%;
            height: 8px;
            background: #e9ecef;
            border-radius: 4px;
            overflow: hidden;
            margin-bottom: 0.5rem;
        }

        .availability-progress {
            height: 100%;
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            transition: width 0.3s ease;
        }

        .availability-text {
            font-size: 0.85rem;
            text-align: center;
        }

        /* Timeline */
        .timeline {
            position: relative;
            padding-left: 2rem;
        }

        .timeline::before {
            content: '';
            position: absolute;
            left: 1rem;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e9ecef;
        }

        .timeline-item {
            position: relative;
            margin-bottom: 2rem;
        }

        .timeline-marker {
            position: absolute;
            left: -2.5rem;
            top: 0;
            width: 2rem;
            height: 2rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
            color: white;
            z-index: 1;
        }

        .timeline-item.completed .timeline-marker {
            background: #28a745;
        }

        .timeline-item.pending .timeline-marker {
            background: #ffc107;
        }

        .timeline-item.overdue .timeline-marker {
            background: #dc3545;
        }

        .timeline-item.warning .timeline-marker {
            background: #fd7e14;
        }

        .timeline-content {
            background: white;
            padding: 1rem;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .timeline-title {
            margin-bottom: 0.5rem;
            color: #2d3436;
        }

        .timeline-date {
            font-size: 0.9rem;
            color: #6c757d;
            margin-bottom: 0.5rem;
        }

        .timeline-description {
            font-size: 0.9rem;
            color: #495057;
        }

        .timeline-amount {
            font-size: 1.1rem;
            font-weight: 600;
            color: #dc3545;
            font-family: monospace;
        }

        /* Quick actions */
        .quick-actions-vertical {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .quick-action-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            border: none;
            border-radius: 10px;
            text-decoration: none;
            transition: all 0.3s ease;
            background: #f8f9fa;
            color: inherit;
            width: 100%;
            text-align: left;
        }

        .quick-action-item:hover:not(.disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            text-decoration: none;
            color: inherit;
        }

        .quick-action-item.success {
            background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
            color: #155724;
        }

        .quick-action-item.warning {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #8b4513;
        }

        .quick-action-item.info {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #6b46c1;
        }

        .quick-action-item.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }

        .quick-action-item.secondary {
            background: linear-gradient(135deg, #e2e3e5 0%, #d6d8db 100%);
            color: #383d41;
        }

        .action-icon-small {
            width: 35px;
            height: 35px;
            border-radius: 8px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1rem;
        }

        .action-title {
            font-size: 0.95rem;
            margin-bottom: 0.2rem;
        }

        .action-subtitle {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        /* Details list */
        .details-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .detail-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .detail-label {
            font-size: 0.9rem;
            color: #6c757d;
            display: flex;
            align-items: center;
        }

        .detail-value {
            font-weight: 500;
            color: #2d3436;
            text-align: right;
        }

        /* System info */
        .system-info {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .info-label {
            font-size: 0.85rem;
            color: #6c757d;
            display: flex;
            align-items: center;
        }

        .info-value {
            font-size: 0.85rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .user-badge {
            background: #007bff;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
        }

        .time-display {
            font-family: monospace;
            color: #007bff;
            font-weight: 600;
        }

        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
        }

        .status-indicator.online {
            background: #28a745;
        }

        /* Small stats */
        .stat-item-small {
            text-align: center;
            padding: 0.5rem;
            background: rgba(255,255,255,0.5);
            border-radius: 6px;
        }

        .stat-number {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2d3436;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
        }

        /* Icons */
        .borrowing-icon, .timeline-icon, .action-icon, .details-icon, .system-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .status-bar .row {
                gap: 0.5rem;
            }

            .status-item {
                padding: 0.75rem;
                margin-bottom: 0.5rem;
            }

            .member-card, .book-card {
                flex-direction: column;
                text-align: center;
                gap: 1rem;
            }

            .member-avatar-large, .book-cover-large {
                margin-right: 0;
                margin-bottom: 0.5rem;
            }

            .timeline {
                padding-left: 1.5rem;
            }

            .timeline-marker {
                left: -2rem;
                width: 1.5rem;
                height: 1.5rem;
                font-size: 0.8rem;
            }

            .detail-item, .info-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .detail-value, .info-value {
                text-align: left;
            }

            .action-title, .action-subtitle {
                font-size: 0.85rem;
            }

            .current-time-display {
                text-align: center;
                margin-bottom: 1rem;
            }
        }

        /* Animations */
        .modern-card {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Modal enhancements */
        .modal-content {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        }

        .modal-header {
            background: #f8f9fa;
            border-radius: 15px 15px 0 0;
        }

        .return-confirmation {
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
        }

        .confirmation-item {
            line-height: 1.6;
        }
    </style>

    <!-- Enhanced JavaScript for Borrowings Show -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Update current time with exact UTC format
        function updateCurrentTime() {
            const now = new Date();
            const year = now.getUTCFullYear();
            const month = String(now.getUTCMonth() + 1).padStart(2, '0');
            const day = String(now.getUTCDate()).padStart(2, '0');
            const hours = String(now.getUTCHours()).padStart(2, '0');
            const minutes = String(now.getUTCMinutes()).padStart(2, '0');
            const seconds = String(now.getUTCSeconds()).padStart(2, '0');

            const timeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
            const khmerTimeString = toKhmerNumbers(timeString);

            // Update all time displays
            const timeElements = [
                document.getElementById('header-time'),
                document.getElementById('current-time')
            ];

            timeElements.forEach(element => {
                if (element) {
                    element.textContent = khmerTimeString;
                }
            });

            // Update current date
            const dateElement = document.getElementById('current-date');
            if (dateElement) {
                const dateString = `${year}-${month}-${day}`;
                dateElement.textContent = toKhmerNumbers(dateString);
            }
        }

        // Return book function
        function returnBook(borrowingId) {
            const modal = new bootstrap.Modal(document.getElementById('returnModal'));
            modal.show();
        }

        // Confirm return
        function confirmReturn() {
            const btn = document.querySelector('#returnModal .btn-success');
            const originalText = btn.innerHTML;

            btn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងដំណើរការ...';
            btn.disabled = true;

            fetch(`/borrowings/{{ $borrowing->id }}/return`, {
                method: 'PATCH',
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                    'Content-Type': 'application/json',
                },
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Show success message and reload
                        const alert = document.createElement('div');
                        alert.className = 'alert alert-success alert-dismissible fade show position-fixed';
                        alert.style.top = '20px';
                        alert.style.right = '20px';
                        alert.style.zIndex = '9999';
                        alert.innerHTML = `
                        <i class="bi bi-check-circle me-2"></i>
                        <span class="khmer-regular">${data.message}</span>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    `;
                        document.body.appendChild(alert);

                        setTimeout(() => {
                            location.reload();
                        }, 1500);
                    } else {
                        alert('កំហុស: ' + data.message);
                        btn.innerHTML = originalText;
                        btn.disabled = false;
                    }
                })
                .catch(error => {
                    alert('កំហុសក្នុងការត្រឡប់សៀវភៅ');
                    btn.innerHTML = originalText;
                    btn.disabled = false;
                });
        }

        // Calculate fine function
        function calculateFine(borrowingId) {
            @if($borrowing->isOverdue())
            const suggestedFine = {{ $borrowing->days_overdue * 1.00 }};
            const confirmed = confirm(`គណនាការពិន័យសម្រាប់ការហួសកំណត់ {{ $borrowing->days_overdue }} ថ្ងៃ។\n\nចំនួនការពិន័យ: $${suggestedFine.toFixed(2)}\n\nតើអ្នកចង់បន្ថែមការពិន័យនេះមែនទេ?`);

            if (confirmed) {
                fetch(`/borrowings/${borrowingId}/fine`, {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        fine_amount: suggestedFine,
                        fine_paid: false
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('កំហុស: ' + data.message);
                        }
                    });
            }
            @endif
        }

        // Extend due date
        function extendDueDate(borrowingId) {
            const days = prompt('បន្ថែមចំនួនថ្ងៃ (១-៣០):', '7');
            if (days && !isNaN(days) && parseInt(days) > 0 && parseInt(days) <= 30) {
                fetch(`/borrowings/${borrowingId}/extend`, {
                    method: 'POST',
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        days: parseInt(days)
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            alert('កំហុស: ' + data.message);
                        }
                    });
            } else if (days !== null) {
                alert('សូមបញ្ចូលចំនួនថ្ងៃពី ១ ដល់ ៣០');
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Convert numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                const originalText = element.textContent;
                element.textContent = toKhmerNumbers(originalText);
            });

            // Update time immediately and then every second
            updateCurrentTime();
            setInterval(updateCurrentTime, 1000);

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations with delays
            const cards = document.querySelectorAll('.modern-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });

            // Enhanced interactions
            document.querySelectorAll('.detail-item, .info-item').forEach(item => {
                item.addEventListener('mouseenter', function() {
                    this.style.background = '#e3f2fd';
                    this.style.transform = 'translateX(5px)';
                });
                item.addEventListener('mouseleave', function() {
                    this.style.background = '#f8f9fa';
                    this.style.transform = 'translateX(0)';
                });
            });

            // Timeline item interactions
            document.querySelectorAll('.timeline-item').forEach(item => {
                item.addEventListener('mouseenter', function() {
                    this.querySelector('.timeline-content').style.boxShadow = '0 4px 20px rgba(0,0,0,0.15)';
                });
                item.addEventListener('mouseleave', function() {
                    this.querySelector('.timeline-content').style.boxShadow = '0 2px 10px rgba(0,0,0,0.05)';
                });
            });
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // R for return book
            if (e.key === 'r' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    @if(!$borrowing->returned_at)
                    returnBook({{ $borrowing->id }});
                    @endif
                }
            }

            // E for edit
            if (e.key === 'e' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('borrowings.edit', $borrowing) }}";
                }
            }

            // B for back to list
            if (e.key === 'b' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('borrowings.index') }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/components/application-logo.blade.php
================================================
<svg viewBox="0 0 316 316" xmlns="http://www.w3.org/2000/svg" {{ $attributes }}>
    <path d="M305.8 81.125C305.77 80.995 305.69 80.885 305.65 80.755C305.56 80.525 305.49 80.285 305.37 80.075C305.29 79.935 305.17 79.815 305.07 79.685C304.94 79.515 304.83 79.325 304.68 79.175C304.55 79.045 304.39 78.955 304.25 78.845C304.09 78.715 303.95 78.575 303.77 78.475L251.32 48.275C249.97 47.495 248.31 47.495 246.96 48.275L194.51 78.475C194.33 78.575 194.19 78.725 194.03 78.845C193.89 78.955 193.73 79.045 193.6 79.175C193.45 79.325 193.34 79.515 193.21 79.685C193.11 79.815 192.99 79.935 192.91 80.075C192.79 80.285 192.71 80.525 192.63 80.755C192.58 80.875 192.51 80.995 192.48 81.125C192.38 81.495 192.33 81.875 192.33 82.265V139.625L148.62 164.795V52.575C148.62 52.185 148.57 51.805 148.47 51.435C148.44 51.305 148.36 51.195 148.32 51.065C148.23 50.835 148.16 50.595 148.04 50.385C147.96 50.245 147.84 50.125 147.74 49.995C147.61 49.825 147.5 49.635 147.35 49.485C147.22 49.355 147.06 49.265 146.92 49.155C146.76 49.025 146.62 48.885 146.44 48.785L93.99 18.585C92.64 17.805 90.98 17.805 89.63 18.585L37.18 48.785C37 48.885 36.86 49.035 36.7 49.155C36.56 49.265 36.4 49.355 36.27 49.485C36.12 49.635 36.01 49.825 35.88 49.995C35.78 50.125 35.66 50.245 35.58 50.385C35.46 50.595 35.38 50.835 35.3 51.065C35.25 51.185 35.18 51.305 35.15 51.435C35.05 51.805 35 52.185 35 52.575V232.235C35 233.795 35.84 235.245 37.19 236.025L142.1 296.425C142.33 296.555 142.58 296.635 142.82 296.725C142.93 296.765 143.04 296.835 143.16 296.865C143.53 296.965 143.9 297.015 144.28 297.015C144.66 297.015 145.03 296.965 145.4 296.865C145.5 296.835 145.59 296.775 145.69 296.745C145.95 296.655 146.21 296.565 146.45 296.435L251.36 236.035C252.72 235.255 253.55 233.815 253.55 232.245V174.885L303.81 145.945C305.17 145.165 306 143.725 306 142.155V82.265C305.95 81.875 305.89 81.495 305.8 81.125ZM144.2 227.205L100.57 202.515L146.39 176.135L196.66 147.195L240.33 172.335L208.29 190.625L144.2 227.205ZM244.75 114.995V164.795L226.39 154.225L201.03 139.625V89.825L219.39 100.395L244.75 114.995ZM249.12 57.105L292.81 82.265L249.12 107.425L205.43 82.265L249.12 57.105ZM114.49 184.425L96.13 194.995V85.305L121.49 70.705L139.85 60.135V169.815L114.49 184.425ZM91.76 27.425L135.45 52.585L91.76 77.745L48.07 52.585L91.76 27.425ZM43.67 60.135L62.03 70.705L87.39 85.305V202.545V202.555V202.565C87.39 202.735 87.44 202.895 87.46 203.055C87.49 203.265 87.49 203.485 87.55 203.695V203.705C87.6 203.875 87.69 204.035 87.76 204.195C87.84 204.375 87.89 204.575 87.99 204.745C87.99 204.745 87.99 204.755 88 204.755C88.09 204.905 88.22 205.035 88.33 205.175C88.45 205.335 88.55 205.495 88.69 205.635L88.7 205.645C88.82 205.765 88.98 205.855 89.12 205.965C89.28 206.085 89.42 206.225 89.59 206.325C89.6 206.325 89.6 206.325 89.61 206.335C89.62 206.335 89.62 206.345 89.63 206.345L139.87 234.775V285.065L43.67 229.705V60.135ZM244.75 229.705L148.58 285.075V234.775L219.8 194.115L244.75 179.875V229.705ZM297.2 139.625L253.49 164.795V114.995L278.85 100.395L297.21 89.825V139.625H297.2Z"/>
</svg>



================================================
FILE: resources/views/components/auth-session-status.blade.php
================================================
@props(['status'])

@if ($status)
    <div {{ $attributes->merge(['class' => 'font-medium text-sm text-green-600']) }}>
        {{ $status }}
    </div>
@endif



================================================
FILE: resources/views/components/danger-button.blade.php
================================================
<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>



================================================
FILE: resources/views/components/dropdown-link.blade.php
================================================
<a {{ $attributes->merge(['class' => 'block w-full px-4 py-2 text-start text-sm leading-5 text-gray-700 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 transition duration-150 ease-in-out']) }}>{{ $slot }}</a>



================================================
FILE: resources/views/components/dropdown.blade.php
================================================
@props(['align' => 'right', 'width' => '48', 'contentClasses' => 'py-1 bg-white'])

@php
$alignmentClasses = match ($align) {
    'left' => 'ltr:origin-top-left rtl:origin-top-right start-0',
    'top' => 'origin-top',
    default => 'ltr:origin-top-right rtl:origin-top-left end-0',
};

$width = match ($width) {
    '48' => 'w-48',
    default => $width,
};
@endphp

<div class="relative" x-data="{ open: false }" @click.outside="open = false" @close.stop="open = false">
    <div @click="open = ! open">
        {{ $trigger }}
    </div>

    <div x-show="open"
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="opacity-0 scale-95"
            x-transition:enter-end="opacity-100 scale-100"
            x-transition:leave="transition ease-in duration-75"
            x-transition:leave-start="opacity-100 scale-100"
            x-transition:leave-end="opacity-0 scale-95"
            class="absolute z-50 mt-2 {{ $width }} rounded-md shadow-lg {{ $alignmentClasses }}"
            style="display: none;"
            @click="open = false">
        <div class="rounded-md ring-1 ring-black ring-opacity-5 {{ $contentClasses }}">
            {{ $content }}
        </div>
    </div>
</div>



================================================
FILE: resources/views/components/input-error.blade.php
================================================
@props(['messages'])

@if ($messages)
    <ul {{ $attributes->merge(['class' => 'text-sm text-red-600 space-y-1']) }}>
        @foreach ((array) $messages as $message)
            <li>{{ $message }}</li>
        @endforeach
    </ul>
@endif



================================================
FILE: resources/views/components/input-label.blade.php
================================================
@props(['value'])

<label {{ $attributes->merge(['class' => 'block font-medium text-sm text-gray-700']) }}>
    {{ $value ?? $slot }}
</label>



================================================
FILE: resources/views/components/modal.blade.php
================================================
@props([
    'name',
    'show' => false,
    'maxWidth' => '2xl'
])

@php
$maxWidth = [
    'sm' => 'sm:max-w-sm',
    'md' => 'sm:max-w-md',
    'lg' => 'sm:max-w-lg',
    'xl' => 'sm:max-w-xl',
    '2xl' => 'sm:max-w-2xl',
][$maxWidth];
@endphp

<div
    x-data="{
        show: @js($show),
        focusables() {
            // All focusable element types...
            let selector = 'a, button, input:not([type=\'hidden\']), textarea, select, details, [tabindex]:not([tabindex=\'-1\'])'
            return [...$el.querySelectorAll(selector)]
                // All non-disabled elements...
                .filter(el => ! el.hasAttribute('disabled'))
        },
        firstFocusable() { return this.focusables()[0] },
        lastFocusable() { return this.focusables().slice(-1)[0] },
        nextFocusable() { return this.focusables()[this.nextFocusableIndex()] || this.firstFocusable() },
        prevFocusable() { return this.focusables()[this.prevFocusableIndex()] || this.lastFocusable() },
        nextFocusableIndex() { return (this.focusables().indexOf(document.activeElement) + 1) % (this.focusables().length + 1) },
        prevFocusableIndex() { return Math.max(0, this.focusables().indexOf(document.activeElement)) -1 },
    }"
    x-init="$watch('show', value => {
        if (value) {
            document.body.classList.add('overflow-y-hidden');
            {{ $attributes->has('focusable') ? 'setTimeout(() => firstFocusable().focus(), 100)' : '' }}
        } else {
            document.body.classList.remove('overflow-y-hidden');
        }
    })"
    x-on:open-modal.window="$event.detail == '{{ $name }}' ? show = true : null"
    x-on:close-modal.window="$event.detail == '{{ $name }}' ? show = false : null"
    x-on:close.stop="show = false"
    x-on:keydown.escape.window="show = false"
    x-on:keydown.tab.prevent="$event.shiftKey || nextFocusable().focus()"
    x-on:keydown.shift.tab.prevent="prevFocusable().focus()"
    x-show="show"
    class="fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50"
    style="display: {{ $show ? 'block' : 'none' }};"
>
    <div
        x-show="show"
        class="fixed inset-0 transform transition-all"
        x-on:click="show = false"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0"
        x-transition:enter-end="opacity-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100"
        x-transition:leave-end="opacity-0"
    >
        <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
    </div>

    <div
        x-show="show"
        class="mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto"
        x-transition:enter="ease-out duration-300"
        x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
        x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave="ease-in duration-200"
        x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
        x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
    >
        {{ $slot }}
    </div>
</div>



================================================
FILE: resources/views/components/nav-link.blade.php
================================================
@props(['active'])

@php
$classes = ($active ?? false)
            ? 'inline-flex items-center px-1 pt-1 border-b-2 border-indigo-400 text-sm font-medium leading-5 text-gray-900 focus:outline-none focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'inline-flex items-center px-1 pt-1 border-b-2 border-transparent text-sm font-medium leading-5 text-gray-500 hover:text-gray-700 hover:border-gray-300 focus:outline-none focus:text-gray-700 focus:border-gray-300 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>



================================================
FILE: resources/views/components/primary-button.blade.php
================================================
<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center px-4 py-2 bg-gray-800 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-gray-700 focus:bg-gray-700 active:bg-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>



================================================
FILE: resources/views/components/responsive-nav-link.blade.php
================================================
@props(['active'])

@php
$classes = ($active ?? false)
            ? 'block w-full ps-3 pe-4 py-2 border-l-4 border-indigo-400 text-start text-base font-medium text-indigo-700 bg-indigo-50 focus:outline-none focus:text-indigo-800 focus:bg-indigo-100 focus:border-indigo-700 transition duration-150 ease-in-out'
            : 'block w-full ps-3 pe-4 py-2 border-l-4 border-transparent text-start text-base font-medium text-gray-600 hover:text-gray-800 hover:bg-gray-50 hover:border-gray-300 focus:outline-none focus:text-gray-800 focus:bg-gray-50 focus:border-gray-300 transition duration-150 ease-in-out';
@endphp

<a {{ $attributes->merge(['class' => $classes]) }}>
    {{ $slot }}
</a>



================================================
FILE: resources/views/components/secondary-button.blade.php
================================================
<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center px-4 py-2 bg-white border border-gray-300 rounded-md font-semibold text-xs text-gray-700 uppercase tracking-widest shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-25 transition ease-in-out duration-150']) }}>
    {{ $slot }}
</button>



================================================
FILE: resources/views/components/text-input.blade.php
================================================
@props(['disabled' => false])

<input @disabled($disabled) {{ $attributes->merge(['class' => 'border-gray-300 focus:border-indigo-500 focus:ring-indigo-500 rounded-md shadow-sm']) }}>



================================================
FILE: resources/views/layouts/app.blade.php
================================================
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="{{ csrf_token() }}">

    <title>{{ config('app.name', 'Library Management System') }}</title>

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Khmer:wght@300;400;500;600;700&display=swap" rel="stylesheet">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

    <!-- Scripts -->
    @vite(['resources/css/app.css', 'resources/js/app.js'])

    <!-- Simple Global Styles -->
    <style>
        /* Khmer Font */
        body, .khmer-regular {
            font-family: 'Noto Sans Khmer', sans-serif;
            font-weight: 400;
        }

        .khmer-medium {
            font-family: 'Noto Sans Khmer', sans-serif;
            font-weight: 500;
        }

        .khmer-semibold {
            font-family: 'Noto Sans Khmer', sans-serif;
            font-weight: 600;
        }

        .khmer-bold {
            font-family: 'Noto Sans Khmer', sans-serif;
            font-weight: 700;
        }

        /* Simple Card */
        .modern-card {
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border: none;
        }

        /* Simple Button */
        .modern-btn {
            border-radius: 6px;
            padding: 0.5rem 1rem;
            font-weight: 500;
        }

        /* Simple Layout */
        body {
            background-color: #f8f9fa;
        }
    </style>
</head>
<body>

<!-- Navigation -->
@include('layouts.navigation')

<!-- Page Heading -->
@isset($header)
    <header class="bg-white shadow-sm">
        <div class="container-fluid py-4">
            {{ $header }}
        </div>
    </header>
@endisset

<!-- Main Content -->
<main>
    <div class="container-fluid py-4">
        <!-- Flash Messages -->
        @if (session('success'))
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bi bi-check-circle me-2"></i>
                <span class="khmer-regular">{{ session('success') }}</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        @endif

        @if (session('error'))
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle me-2"></i>
                <span class="khmer-regular">{{ session('error') }}</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        @endif

        @if (session('warning'))
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-circle me-2"></i>
                <span class="khmer-regular">{{ session('warning') }}</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        @endif

        @if (session('info'))
            <div class="alert alert-info alert-dismissible fade show" role="alert">
                <i class="bi bi-info-circle me-2"></i>
                <span class="khmer-regular">{{ session('info') }}</span>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        @endif

        <!-- Page Content -->
        {{ $slot }}
    </div>
</main>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- Simple Time Update Script -->
<script>
    // Simple Global System
    window.LibrarySystem = {
        // Khmer Numbers
        khmerNumbers: {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        },

        // Convert to Khmer
        convertToKhmer: function(str) {
            return str.toString().replace(/[0-9]/g, (match) => {
                return this.khmerNumbers[match];
            });
        },

        // Get Current Time
        getCurrentDateTime: function() {
            const now = new Date();
            const year = now.getUTCFullYear();
            const month = String(now.getUTCMonth() + 1).padStart(2, '0');
            const day = String(now.getUTCDate()).padStart(2, '0');
            const hours = String(now.getUTCHours()).padStart(2, '0');
            const minutes = String(now.getUTCMinutes()).padStart(2, '0');
            const seconds = String(now.getUTCSeconds()).padStart(2, '0');
            return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
        },

        // Update Time Display
        updateDateTime: function() {
            const currentTime = this.getCurrentDateTime();
            const khmerTime = this.convertToKhmer(currentTime);

            // Update all time elements
            const timeElements = [
                document.getElementById('status-time'),
                document.getElementById('nav-time'),
                document.getElementById('login-time'),
                document.getElementById('current-time'),
                document.getElementById('header-time')
            ];

            timeElements.forEach(element => {
                if (element) {
                    element.textContent = khmerTime;
                }
            });

            return currentTime;
        },

        // Get Current User
        getCurrentUser: function() {
            return 'Chhunleangcheng';
        }
    };

    // Initialize
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Simple Library System Initialized');
        console.log('Current Date and Time (UTC - YYYY-MM-DD HH:MM:SS formatted): 2025-06-20 06:49:21');
        console.log('Current User\'s Login: Chhunleangcheng');

        // Convert existing Khmer numbers
        document.querySelectorAll('.khmer-number').forEach(element => {
            if (element.textContent.match(/\d/)) {
                element.textContent = window.LibrarySystem.convertToKhmer(element.textContent);
            }
        });

        // Initial time update
        window.LibrarySystem.updateDateTime();

        // Update every second
        setInterval(function() {
            window.LibrarySystem.updateDateTime();
        }, 1000);

        // Auto-dismiss alerts
        setTimeout(function() {
            document.querySelectorAll('.alert').forEach(alert => {
                if (bootstrap.Alert.getInstance(alert)) {
                    bootstrap.Alert.getInstance(alert).close();
                }
            });
        }, 5000);

        console.log('Simple system ready!');
    });

    // Handle page visibility
    document.addEventListener('visibilitychange', function() {
        if (!document.hidden) {
            window.LibrarySystem.updateDateTime();
        }
    });

    // Handle window focus
    window.addEventListener('focus', function() {
        window.LibrarySystem.updateDateTime();
    });
</script>
</body>
</html>



================================================
FILE: resources/views/layouts/guest.blade.php
================================================
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <meta name="csrf-token" content="{{ csrf_token() }}">

        <title>{{ config('app.name', 'Laravel') }}</title>

        <!-- Fonts -->
        <link rel="preconnect" href="https://fonts.bunny.net">
        <link href="https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap" rel="stylesheet" />

        <!-- Scripts -->
        @vite(['resources/css/app.css', 'resources/js/app.js'])
    </head>
    <body class="font-sans text-gray-900 antialiased">
        <div class="min-h-screen flex flex-col sm:justify-center items-center pt-6 sm:pt-0 bg-gray-100">
            <div>
                <a href="/">
                    <x-application-logo class="w-20 h-20 fill-current text-gray-500" />
                </a>
            </div>

            <div class="w-full sm:max-w-md mt-6 px-6 py-4 bg-white shadow-md overflow-hidden sm:rounded-lg">
                {{ $slot }}
            </div>
        </div>
    </body>
</html>



================================================
FILE: resources/views/layouts/navigation.blade.php
================================================
<nav class="navbar navbar-expand-lg navbar-dark bg-primary shadow-sm">
    <div class="container-fluid">
        <!-- Logo -->
        <a class="navbar-brand fw-bold" href="{{ route('dashboard') }}">
            <i class="bi bi-book me-2"></i>
            <span class="khmer-bold">បណ្ណាល័យ</span>
        </a>

        <!-- Mobile Toggle -->
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navigation Content -->
        <div class="collapse navbar-collapse" id="navbarNav">
            <!-- Main Navigation -->
            <ul class="navbar-nav me-auto">
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('dashboard') ? 'active' : '' }}" href="{{ route('dashboard') }}">
                        <i class="bi bi-speedometer2 me-1"></i>
                        <span class="khmer-medium">ផ្ទាំងគ្រប់គ្រង</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('books.*') ? 'active' : '' }}" href="{{ route('books.index') }}">
                        <i class="bi bi-book me-1"></i>
                        <span class="khmer-medium">សៀវភៅ</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('members.*') ? 'active' : '' }}" href="{{ route('members.index') }}">
                        <i class="bi bi-people me-1"></i>
                        <span class="khmer-medium">សមាជិក</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link {{ request()->routeIs('borrowings.*') ? 'active' : '' }}" href="{{ route('borrowings.index') }}">
                        <i class="bi bi-arrow-left-right me-1"></i>
                        <span class="khmer-medium">ការខ្ចី</span>
                    </a>
                </li>
            </ul>

            <!-- Right Side: Time and User -->
            <div class="navbar-nav">

                <!-- Current User's Login: Chhunleangcheng -->
                <div>
                    <form method="POST" action="{{ route('logout') }}">
                        @csrf
                        <button type="submit" class="dropdown-item text-danger khmer-medium">
                            <i class="bi bi-box-arrow-right me-2"></i>ចាកចេញ
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</nav>

<style>
    /* Simple Navigation Styles */
    .navbar-brand {
        font-size: 1.5rem;
    }

    .nav-link {
        transition: all 0.3s ease;
    }

    .nav-link:hover {
        background-color: rgba(255,255,255,0.1);
        border-radius: 5px;
    }

    .nav-link.active {
        background-color: rgba(255,255,255,0.2);
        border-radius: 5px;
    }

    .dropdown-menu {
        border: none;
        box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        border-radius: 8px;
    }

    @media (max-width: 991px) {
        .navbar-nav .nav-item {
            margin: 0.25rem 0;
        }
    }
</style>



================================================
FILE: resources/views/members/create.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-person-plus text-success"></i>
                    </div>
                    <span class="gradient-text">បន្ថែមសមាជិកថ្មី</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    បំពេញព័ត៌មានលម្អិតរបស់សមាជិកថ្មី
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('members.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card modern-card">
                <div class="card-header bg-gradient-success text-white">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-person-plus"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានសមាជិក</h6>
                            <small class="opacity-75 khmer-regular">សូមបំពេញព័ត៌មានទាំងអស់ដែលចាំបាច់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form action="{{ route('members.store') }}" method="POST" class="member-form">
                        @csrf

                        <!-- Personal Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-person text-success me-2"></i>
                                    ព័ត៌មានផ្ទាល់ខ្លួន
                                </h5>
                                <p class="section-description khmer-regular">ព័ត៌មានមូលដ្ឋានរបស់សមាជិក</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-8">
                                    <label for="name" class="form-label khmer-medium required">
                                        <i class="bi bi-person me-1"></i>ឈ្មោះពេញ
                                    </label>
                                    <input type="text"
                                           class="form-control modern-input @error('name') is-invalid @enderror"
                                           id="name"
                                           name="name"
                                           value="{{ old('name') }}"
                                           placeholder="បញ្ចូលឈ្មោះពេញ..."
                                           required>
                                    @error('name')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="date_of_birth" class="form-label khmer-medium">
                                        <i class="bi bi-calendar3 me-1"></i>ថ្ងៃខែឆ្នាំកំណើត
                                    </label>
                                    <input type="date"
                                           class="form-control modern-input @error('date_of_birth') is-invalid @enderror"
                                           id="date_of_birth"
                                           name="date_of_birth"
                                           value="{{ old('date_of_birth') }}"
                                           max="{{ date('Y-m-d') }}">
                                    @error('date_of_birth')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-6">
                                    <label for="email" class="form-label khmer-medium required">
                                        <i class="bi bi-envelope me-1"></i>អីមែល
                                    </label>
                                    <input type="email"
                                           class="form-control modern-input @error('email') is-invalid @enderror"
                                           id="email"
                                           name="email"
                                           value="{{ old('email') }}"
                                           placeholder="example@email.com"
                                           required>
                                    @error('email')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="phone" class="form-label khmer-medium">
                                        <i class="bi bi-telephone me-1"></i>លេខទូរសព្ទ
                                    </label>
                                    <input type="tel"
                                           class="form-control modern-input @error('phone') is-invalid @enderror"
                                           id="phone"
                                           name="phone"
                                           value="{{ old('phone') }}"
                                           placeholder="012 345 678">
                                    @error('phone')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-12">
                                    <label for="address" class="form-label khmer-medium">
                                        <i class="bi bi-geo-alt me-1"></i>អាសយដ្ឋាន
                                    </label>
                                    <textarea class="form-control modern-input @error('address') is-invalid @enderror"
                                              id="address"
                                              name="address"
                                              rows="3"
                                              placeholder="អាសយដ្ឋានលម្អិត...">{{ old('address') }}</textarea>
                                    @error('address')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Membership Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-card-checklist text-success me-2"></i>
                                    ព័ត៌មានសមាជិកភាព
                                </h5>
                                <p class="section-description khmer-regular">កំណត់ព័ត៌មានសមាជិកភាព</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="membership_date" class="form-label khmer-medium required">
                                        <i class="bi bi-calendar-plus me-1"></i>ថ្ងៃចុះឈ្មោះ
                                    </label>
                                    <input type="date"
                                           class="form-control modern-input @error('membership_date') is-invalid @enderror"
                                           id="membership_date"
                                           name="membership_date"
                                           value="{{ old('membership_date', date('Y-m-d')) }}"
                                           required>
                                    @error('membership_date')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="membership_status" class="form-label khmer-medium required">
                                        <i class="bi bi-shield-check me-1"></i>ស្ថានភាពសមាជិក
                                    </label>
                                    <select class="form-select modern-input @error('membership_status') is-invalid @enderror"
                                            id="membership_status"
                                            name="membership_status"
                                            required>
                                        <option value="active" {{ old('membership_status', 'active') == 'active' ? 'selected' : '' }}>សកម្ម</option>
                                        <option value="inactive" {{ old('membership_status') == 'inactive' ? 'selected' : '' }}>អសកម្ម</option>
                                        <option value="suspended" {{ old('membership_status') == 'suspended' ? 'selected' : '' }}>ផ្អាក</option>
                                    </select>
                                    @error('membership_status')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Member Preview Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-eye text-success me-2"></i>
                                    មើលជាមុនសមាជិក
                                </h5>
                                <p class="section-description khmer-regular">ព័ត៌មានសមាជិកដែលនឹងត្រូវបន្ថែម</p>
                            </div>

                            <div class="member-preview">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="preview-card">
                                            <div class="preview-avatar" id="preview-avatar">
                                                <i class="bi bi-person"></i>
                                            </div>
                                            <div class="preview-info">
                                                <div class="preview-name khmer-semibold" id="preview-name">ឈ្មោះសមាជិក</div>
                                                <div class="preview-email khmer-regular" id="preview-email">អីមែល</div>
                                                <div class="preview-status">
                                                    <span class="badge bg-success khmer-regular" id="preview-status">សកម្ម</span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="preview-details">
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">ទូរសព្ទ:</span>
                                                <span class="detail-value khmer-regular" id="preview-phone">-</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">ថ្ងៃកំណើត:</span>
                                                <span class="detail-value khmer-regular" id="preview-dob">-</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">ថ្ងៃចុះឈ្មោះ:</span>
                                                <span class="detail-value khmer-regular" id="preview-membership-date">{{ date('d/m/Y') }}</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">អាសយដ្ឋាន:</span>
                                                <span class="detail-value khmer-regular" id="preview-address">-</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="form-help">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-info-circle me-1"></i>
                                                កន្លែងដែលមាន <span class="text-danger">*</span> គឺចាំបាច់ត្រូវបំពេញ
                                            </small>
                                        </div>
                                        <div class="action-buttons">
                                            <a href="{{ route('members.index') }}" class="btn btn-outline-secondary me-3 khmer-medium">
                                                <i class="bi bi-x-circle me-1"></i>បោះបង់
                                            </a>
                                            <button type="submit" class="btn btn-success modern-btn khmer-medium">
                                                <i class="bi bi-check-circle me-2"></i>រក្សាទុកសមាជិក
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Members Create -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            box-shadow: 0 4px 15px rgba(94, 231, 223, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Form styling */
        .member-form {
            font-family: 'Noto Sans Khmer', sans-serif;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 1rem;
        }

        .section-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .section-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .section-description {
            color: #6c757d;
            font-size: 0.95rem;
        }

        /* Modern input styling */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fff;
        }

        .modern-input:focus {
            border-color: #28a745;
            box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.15);
            background: #fff;
        }

        .modern-input.is-invalid {
            border-color: #dc3545;
        }

        .modern-input.is-invalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.15);
        }

        /* Form labels */
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label.required::after {
            content: ' *';
            color: #dc3545;
            font-weight: bold;
        }

        /* Member preview */
        .member-preview {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            border: 2px dashed #dee2e6;
        }

        .preview-card {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            margin-bottom: 1rem;
        }

        .preview-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
            margin: 0 auto 1rem;
            transition: all 0.3s ease;
        }

        .preview-name {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            color: #2d3436;
        }

        .preview-email {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .preview-details {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid #f1f3f4;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            color: #6c757d;
            min-width: 120px;
        }

        .detail-value {
            color: #2d3436;
            text-align: right;
        }

        /* Form actions */
        .form-actions {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .action-buttons .btn-success {
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

        .action-buttons .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(40, 167, 69, 0.4);
        }

        /* Form icon */
        .form-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .form-section {
                margin-bottom: 2rem;
                padding-bottom: 1rem;
            }

            .section-header {
                margin-bottom: 1.5rem;
            }

            .preview-card {
                margin-bottom: 1rem;
            }

            .action-buttons {
                text-align: center;
            }

            .action-buttons .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .form-help {
                text-align: center;
                margin-bottom: 1rem;
            }

            .detail-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.25rem;
            }

            .detail-value {
                text-align: left;
            }
        }

        /* Animations */
        .form-section {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript for Members Create -->
    <script>
        // Real-time preview update
        function updateMemberPreview() {
            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const phoneInput = document.getElementById('phone');
            const dobInput = document.getElementById('date_of_birth');
            const membershipDateInput = document.getElementById('membership_date');
            const statusInput = document.getElementById('membership_status');
            const addressInput = document.getElementById('address');

            // Update preview elements
            const previewName = document.getElementById('preview-name');
            const previewEmail = document.getElementById('preview-email');
            const previewPhone = document.getElementById('preview-phone');
            const previewDob = document.getElementById('preview-dob');
            const previewMembershipDate = document.getElementById('preview-membership-date');
            const previewStatus = document.getElementById('preview-status');
            const previewAddress = document.getElementById('preview-address');
            const previewAvatar = document.getElementById('preview-avatar');

            // Update name and avatar
            const name = nameInput.value || 'ឈ្មោះសមាជិក';
            previewName.textContent = name;
            if (nameInput.value) {
                const initials = name.split(' ').map(word => word.charAt(0).toUpperCase()).join('').substring(0, 2);
                previewAvatar.textContent = initials;
            } else {
                previewAvatar.innerHTML = '<i class="bi bi-person"></i>';
            }

            // Update other fields
            previewEmail.textContent = emailInput.value || 'អីមែល';
            previewPhone.textContent = phoneInput.value || '-';
            previewAddress.textContent = addressInput.value || '-';

            // Update date of birth
            if (dobInput.value) {
                const dob = new Date(dobInput.value);
                previewDob.textContent = dob.toLocaleDateString('km-KH', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
            } else {
                previewDob.textContent = '-';
            }

            // Update membership date
            if (membershipDateInput.value) {
                const membershipDate = new Date(membershipDateInput.value);
                previewMembershipDate.textContent = membershipDate.toLocaleDateString('km-KH', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
            }

            // Update status
            const statusText = {
                'active': 'សកម្ម',
                'inactive': 'អសកម្ម',
                'suspended': 'ផ្អាក'
            };
            const statusClass = {
                'active': 'bg-success',
                'inactive': 'bg-secondary',
                'suspended': 'bg-danger'
            };

            previewStatus.textContent = statusText[statusInput.value] || 'សកម្ម';
            previewStatus.className = `badge ${statusClass[statusInput.value] || 'bg-success'} khmer-regular`;
        }

        // Form validation enhancement
        function enhanceFormValidation() {
            const form = document.querySelector('.member-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                // Add real-time validation
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    } else {
                        this.classList.remove('is-valid');
                        this.classList.add('is-invalid');
                    }
                });

                // Remove validation classes on focus
                input.addEventListener('focus', function() {
                    this.classList.remove('is-valid', 'is-invalid');
                });
            });

            // Custom validation for email
            const emailInput = document.getElementById('email');
            emailInput.addEventListener('input', function() {
                const email = this.value;
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                if (email && !emailRegex.test(email)) {
                    this.setCustomValidity('សូមបញ្ចូលអីមែលត្រឹមត្រូវ');
                } else {
                    this.setCustomValidity('');
                }
            });

            // Phone number formatting
            const phoneInput = document.getElementById('phone');
            phoneInput.addEventListener('input', function() {
                let phone = this.value.replace(/\D/g, '');
                if (phone.length > 0) {
                    if (phone.length <= 3) {
                        phone = phone;
                    } else if (phone.length <= 6) {
                        phone = phone.slice(0, 3) + ' ' + phone.slice(3);
                    } else {
                        phone = phone.slice(0, 3) + ' ' + phone.slice(3, 6) + ' ' + phone.slice(6, 9);
                    }
                }
                this.value = phone;
            });
        }

        // Auto-save to localStorage
        function setupAutoSave() {
            const form = document.querySelector('.member-form');
            const inputs = form.querySelectorAll('input, select, textarea');
            const formData = 'memberFormData';

            // Load saved data
            const saved = localStorage.getItem(formData);
            if (saved) {
                const data = JSON.parse(saved);
                Object.keys(data).forEach(key => {
                    const input = form.querySelector(`[name="${key}"]`);
                    if (input && !input.value) {
                        input.value = data[key];
                    }
                });
                updateMemberPreview();
            }

            // Save data on input
            inputs.forEach(input => {
                input.addEventListener('input', debounce(() => {
                    const data = {};
                    inputs.forEach(inp => {
                        if (inp.value) data[inp.name] = inp.value;
                    });
                    localStorage.setItem(formData, JSON.stringify(data));
                }, 500));
            });

            // Clear saved data on successful submit
            form.addEventListener('submit', function() {
                localStorage.removeItem(formData);
            });
        }

        // Debounce function
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Form submission enhancement
        function enhanceFormSubmission() {
            const form = document.querySelector('.member-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            form.addEventListener('submit', function(e) {
                // Show loading state
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងរក្សាទុក...';
                submitBtn.disabled = true;

                // Validate form one more time
                if (!form.checkValidity()) {
                    e.preventDefault();
                    submitBtn.classList.remove('loading');
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;

                    // Show validation message
                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Setup all enhancements
            updateMemberPreview();
            enhanceFormValidation();
            setupAutoSave();
            enhanceFormSubmission();

            // Add event listeners for preview update
            const inputs = document.querySelectorAll('input, select, textarea');
            inputs.forEach(input => {
                input.addEventListener('input', updateMemberPreview);
            });

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations
            const sections = document.querySelectorAll('.form-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });

            // Auto-focus first input
            const firstInput = document.getElementById('name');
            if (firstInput) {
                setTimeout(() => firstInput.focus(), 300);
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + S to save
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                document.querySelector('.member-form').dispatchEvent(new Event('submit'));
            }

            // Escape to cancel
            if (e.key === 'Escape') {
                if (confirm('តើអ្នកពិតជាចង់បោះបង់ការបញ្ចូលទិន្នន័យមែនទេ?')) {
                    window.location.href = "{{ route('members.index') }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/members/edit.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-pencil-square text-warning"></i>
                    </div>
                    <span class="gradient-text">កែប្រែសមាជិក</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    កែប្រែព័ត៌មានសមាជិក: <span class="text-primary">{{ $member->name }}</span>
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('members.show', $member) }}" class="btn btn-outline-info modern-btn me-2 khmer-medium">
                    <i class="bi bi-eye me-2"></i>មើលលម្អិត
                </a>
                <a href="{{ route('members.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Current Member Info Card -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-info text-white">
                    <div class="d-flex align-items-center">
                        <div class="current-member-icon me-3">
                            <i class="bi bi-person"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ព័ត៌មានបច្ចុប្បន្ន</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានដែលមានស្រាប់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-3">
                    <div class="row g-3">
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ឈ្មោះ</small>
                                <div class="fw-semibold khmer-medium">{{ $member->name }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">អីមែល</small>
                                <div class="fw-semibold khmer-regular">{{ $member->email }}</div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ស្ថានភាព</small>
                                <div class="fw-semibold khmer-regular">
                                    @if($member->membership_status == 'active')
                                        <span class="text-success">សកម្ម</span>
                                    @elseif($member->membership_status == 'inactive')
                                        <span class="text-secondary">អសកម្ម</span>
                                    @else
                                        <span class="text-danger">ផ្អាក</span>
                                    @endif
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="current-info-item">
                                <small class="text-muted khmer-regular">ការខ្ចីសកម្ម</small>
                                <div class="fw-semibold khmer-number">{{ $member->activeBorrowings()->count() }}</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Edit Form Card -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-warning text-dark">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-pencil-square"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">កែប្រែព័ត៌មាន</h6>
                            <small class="opacity-75 khmer-regular">កែប្រែព័ត៌មានដែលចាំបាច់</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <form action="{{ route('members.update', $member) }}" method="POST" class="member-edit-form">
                        @csrf
                        @method('PUT')

                        <!-- Personal Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-person text-warning me-2"></i>
                                    ព័ត៌មានផ្ទាល់ខ្លួន
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែព័ត៌មានមូលដ្ឋានរបស់សមាជិក</p>
                            </div>

                            <div class="row g-4">
                                <div class="col-md-8">
                                    <label for="name" class="form-label khmer-medium required">
                                        <i class="bi bi-person me-1"></i>ឈ្មោះពេញ
                                    </label>
                                    <div class="input-comparison">
                                        <div class="input-with-comparison">
                                            <input type="text"
                                                   class="form-control modern-input @error('name') is-invalid @enderror"
                                                   id="name"
                                                   name="name"
                                                   value="{{ old('name', $member->name) }}"
                                                   placeholder="បញ្ចូលឈ្មោះពេញ..."
                                                   required>
                                            @if(old('name', $member->name) !== $member->name)
                                                <small class="text-info khmer-regular">
                                                    <i class="bi bi-arrow-right me-1"></i>
                                                    ពីមុន: {{ $member->name }}
                                                </small>
                                            @endif
                                        </div>
                                    </div>
                                    @error('name')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-4">
                                    <label for="date_of_birth" class="form-label khmer-medium">
                                        <i class="bi bi-calendar3 me-1"></i>ថ្ងៃខែឆ្នាំកំណើត
                                    </label>
                                    <input type="date"
                                           class="form-control modern-input @error('date_of_birth') is-invalid @enderror"
                                           id="date_of_birth"
                                           name="date_of_birth"
                                           value="{{ old('date_of_birth', $member->date_of_birth ? $member->date_of_birth->format('Y-m-d') : '') }}"
                                           max="{{ date('Y-m-d') }}">
                                    @error('date_of_birth')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-6">
                                    <label for="email" class="form-label khmer-medium required">
                                        <i class="bi bi-envelope me-1"></i>អីមែល
                                    </label>
                                    <input type="email"
                                           class="form-control modern-input @error('email') is-invalid @enderror"
                                           id="email"
                                           name="email"
                                           value="{{ old('email', $member->email) }}"
                                           placeholder="example@email.com"
                                           required>
                                    @error('email')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="phone" class="form-label khmer-medium">
                                        <i class="bi bi-telephone me-1"></i>លេខទូរសព្ទ
                                    </label>
                                    <input type="tel"
                                           class="form-control modern-input @error('phone') is-invalid @enderror"
                                           id="phone"
                                           name="phone"
                                           value="{{ old('phone', $member->phone) }}"
                                           placeholder="012 345 678">
                                    @error('phone')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>

                            <div class="row g-4 mt-2">
                                <div class="col-md-12">
                                    <label for="address" class="form-label khmer-medium">
                                        <i class="bi bi-geo-alt me-1"></i>អាសយដ្ឋាន
                                    </label>
                                    <textarea class="form-control modern-input @error('address') is-invalid @enderror"
                                              id="address"
                                              name="address"
                                              rows="3"
                                              placeholder="អាសយដ្ឋានលម្អិត...">{{ old('address', $member->address) }}</textarea>
                                    @error('address')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Membership Information Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-card-checklist text-warning me-2"></i>
                                    ព័ត៌មានសមាជិកភាព
                                </h5>
                                <p class="section-description khmer-regular">កែប្រែព័ត៌មានសមាជិកភាព</p>
                                @if($member->activeBorrowings()->count() > 0)
                                    <div class="alert alert-warning khmer-regular" role="alert">
                                        <i class="bi bi-exclamation-triangle me-2"></i>
                                        <strong>ការព្រមាន:</strong> សមាជិកនេះមានការខ្ចីសកម្ម {{ $member->activeBorrowings()->count() }} ក្បាល។
                                        ត្រូវប្រុងប្រយ័ត្នពេលកែប្រែស្ថានភាព។
                                    </div>
                                @endif
                            </div>

                            <div class="row g-4">
                                <div class="col-md-6">
                                    <label for="membership_date" class="form-label khmer-medium required">
                                        <i class="bi bi-calendar-plus me-1"></i>ថ្ងៃចុះឈ្មោះ
                                    </label>
                                    <input type="date"
                                           class="form-control modern-input @error('membership_date') is-invalid @enderror"
                                           id="membership_date"
                                           name="membership_date"
                                           value="{{ old('membership_date', $member->membership_date->format('Y-m-d')) }}"
                                           required>
                                    <small class="text-muted khmer-regular">
                                        បច្ចុប្បន្ន: {{ $member->membership_date->format('d/m/Y') }}
                                    </small>
                                    @error('membership_date')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>

                                <div class="col-md-6">
                                    <label for="membership_status" class="form-label khmer-medium required">
                                        <i class="bi bi-shield-check me-1"></i>ស្ថានភាពសមាជិក
                                    </label>
                                    <select class="form-select modern-input @error('membership_status') is-invalid @enderror"
                                            id="membership_status"
                                            name="membership_status"
                                            required>
                                        <option value="active" {{ old('membership_status', $member->membership_status) == 'active' ? 'selected' : '' }}>សកម្ម</option>
                                        <option value="inactive" {{ old('membership_status', $member->membership_status) == 'inactive' ? 'selected' : '' }}>អសកម្ម</option>
                                        <option value="suspended" {{ old('membership_status', $member->membership_status) == 'suspended' ? 'selected' : '' }}>ផ្អាក</option>
                                    </select>
                                    <small class="text-muted khmer-regular">
                                        បច្ចុប្បន្ន:
                                        @if($member->membership_status == 'active')
                                            <span class="text-success">សកម្ម</span>
                                        @elseif($member->membership_status == 'inactive')
                                            <span class="text-secondary">អសកម្ម</span>
                                        @else
                                            <span class="text-danger">ផ្អាក</span>
                                        @endif
                                    </small>
                                    @error('membership_status')
                                    <div class="invalid-feedback khmer-regular">{{ $message }}</div>
                                    @enderror
                                </div>
                            </div>
                        </div>

                        <!-- Updated Member Preview Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-eye text-warning me-2"></i>
                                    មើលជាមុនសមាជិកបន្ទាប់ពីកែប្រែ
                                </h5>
                                <p class="section-description khmer-regular">ព័ត៌មានសមាជិកដែលនឹងត្រូវរក្សាទុក</p>
                            </div>

                            <div class="member-preview">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="preview-card">
                                            <div class="preview-avatar" id="preview-avatar">
                                                {{ strtoupper(substr($member->name, 0, 2)) }}
                                            </div>
                                            <div class="preview-info">
                                                <div class="preview-name khmer-semibold" id="preview-name">{{ $member->name }}</div>
                                                <div class="preview-email khmer-regular" id="preview-email">{{ $member->email }}</div>
                                                <div class="preview-status">
                                                    <span class="badge bg-success khmer-regular" id="preview-status">
                                                        @if($member->membership_status == 'active')
                                                            សកម្ម
                                                        @elseif($member->membership_status == 'inactive')
                                                            អសកម្ម
                                                        @else
                                                            ផ្អាក
                                                        @endif
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-8">
                                        <div class="preview-details">
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">ទូរសព្ទ:</span>
                                                <span class="detail-value khmer-regular" id="preview-phone">{{ $member->phone ?? '-' }}</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">ថ្ងៃកំណើត:</span>
                                                <span class="detail-value khmer-regular" id="preview-dob">
                                                    {{ $member->date_of_birth ? $member->date_of_birth->format('d/m/Y') : '-' }}
                                                </span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">ថ្ងៃចុះឈ្មោះ:</span>
                                                <span class="detail-value khmer-regular" id="preview-membership-date">{{ $member->membership_date->format('d/m/Y') }}</span>
                                            </div>
                                            <div class="detail-row">
                                                <span class="detail-label khmer-medium">អាសយដ្ឋាន:</span>
                                                <span class="detail-value khmer-regular" id="preview-address">{{ $member->address ?? '-' }}</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Change Summary Section -->
                        <div class="form-section">
                            <div class="section-header">
                                <h5 class="section-title khmer-semibold">
                                    <i class="bi bi-list-check text-warning me-2"></i>
                                    សេចក្តីសង្ខេបការផ្លាស់ប្តូរ
                                </h5>
                                <p class="section-description khmer-regular">ការផ្លាស់ប្តូរដែលនឹងត្រូវរក្សាទុក</p>
                            </div>

                            <div class="change-summary" id="change-summary">
                                <div class="alert alert-info khmer-regular">
                                    <i class="bi bi-info-circle me-2"></i>
                                    កែប្រែការបញ្ចូលទិន្នន័យ ដើម្បីមើលការផ្លាស់ប្តូរ
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="form-help">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-info-circle me-1"></i>
                                                កន្លែងដែលមាន <span class="text-danger">*</span> គឺចាំបាច់ត្រូវបំពេញ
                                            </small>
                                        </div>
                                        <div class="action-buttons">
                                            <a href="{{ route('members.show', $member) }}" class="btn btn-outline-secondary me-3 khmer-medium">
                                                <i class="bi bi-x-circle me-1"></i>បោះបង់
                                            </a>
                                            <button type="button" class="btn btn-info me-2 khmer-medium" onclick="resetForm()">
                                                <i class="bi bi-arrow-clockwise me-1"></i>កំណត់ឡើងវិញ
                                            </button>
                                            <button type="submit" class="btn btn-warning modern-btn khmer-medium">
                                                <i class="bi bi-check-circle me-2"></i>រក្សាទុកការកែប្រែ
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Members Edit Page -->
    <style>
        /* Current member info styling */
        .current-member-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .current-info-item {
            padding: 0.75rem;
            background: rgba(255,255,255,0.1);
            border-radius: 8px;
            text-align: center;
        }

        .current-info-item small {
            display: block;
            margin-bottom: 0.25rem;
        }

        /* All other styles remain the same as the books edit page with appropriate color adjustments */
        /* Change detection styling */
        .form-control.changed {
            border-color: #ffc107;
            background-color: #fff8e1;
        }

        .form-control.changed:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.25);
        }

        /* Modern input styling */
        .modern-input {
            border: 2px solid #e9ecef;
            border-radius: 10px;
            padding: 0.75rem 1rem;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fff;
        }

        .modern-input:focus {
            border-color: #ffc107;
            box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.15);
            background: #fff;
        }

        /* Form sections and other styles identical to books edit */
        .member-edit-form {
            font-family: 'Noto Sans Khmer', sans-serif;
        }

        .form-section {
            margin-bottom: 3rem;
            padding-bottom: 2rem;
            border-bottom: 1px solid #e9ecef;
        }

        .form-section:last-child {
            border-bottom: none;
            margin-bottom: 1rem;
        }

        .section-header {
            margin-bottom: 2rem;
            text-align: center;
        }

        .section-title {
            color: #2d3436;
            margin-bottom: 0.5rem;
            font-size: 1.25rem;
        }

        .section-description {
            color: #6c757d;
            font-size: 0.95rem;
        }

        /* Member preview styling (reuse from create page) */
        .member-preview {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            border: 2px dashed #dee2e6;
        }

        .preview-card {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            text-align: center;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            margin-bottom: 1rem;
        }

        .preview-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
            margin: 0 auto 1rem;
            transition: all 0.3s ease;
        }

        .preview-name {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            color: #2d3436;
        }

        .preview-email {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .preview-details {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        }

        .detail-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem 0;
            border-bottom: 1px solid #f1f3f4;
        }

        .detail-row:last-child {
            border-bottom: none;
        }

        .detail-label {
            color: #6c757d;
            min-width: 120px;
        }

        .detail-value {
            color: #2d3436;
            text-align: right;
        }

        /* Change summary styling */
        .change-summary {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 1.5rem;
            border: 2px dashed #dee2e6;
        }

        .change-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            background: white;
            border-radius: 8px;
            margin-bottom: 0.5rem;
            border-left: 4px solid #ffc107;
        }

        .change-item:last-child {
            margin-bottom: 0;
        }

        .change-field {
            font-weight: 600;
            color: #495057;
        }

        .change-values {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .old-value {
            color: #6c757d;
            text-decoration: line-through;
            font-size: 0.9rem;
        }

        .new-value {
            color: #ffc107;
            font-weight: 600;
        }

        .change-arrow {
            color: #ffc107;
        }

        /* Form actions */
        .form-actions {
            background: #f8f9fa;
            border-radius: 12px;
            padding: 2rem;
            margin-top: 2rem;
        }

        .action-buttons .btn {
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .action-buttons .btn-warning {
            box-shadow: 0 4px 15px rgba(255, 193, 7, 0.3);
        }

        .action-buttons .btn-warning:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(255, 193, 7, 0.4);
        }

        /* Form icon */
        .form-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: #8b4513;
            box-shadow: 0 4px 15px rgba(255, 193, 7, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Form labels */
        .form-label {
            font-weight: 500;
            color: #495057;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
        }

        .form-label.required::after {
            content: ' *';
            color: #dc3545;
            font-weight: bold;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .current-info-item {
                margin-bottom: 1rem;
            }

            .form-section {
                margin-bottom: 2rem;
                padding-bottom: 1rem;
            }

            .section-header {
                margin-bottom: 1.5rem;
            }

            .action-buttons {
                text-align: center;
            }

            .action-buttons .btn {
                width: 100%;
                margin-bottom: 0.5rem;
            }

            .form-help {
                text-align: center;
                margin-bottom: 1rem;
            }

            .detail-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.25rem;
            }

            .detail-value {
                text-align: left;
            }
        }

        /* Animation for form sections */
        .form-section {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript for Members Edit -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Original member data for comparison
        const originalMember = {
            name: {{ Js::from($member->name) }},
            email: {{ Js::from($member->email) }},
            phone: {{ Js::from($member->phone) }},
            address: {{ Js::from($member->address) }},
            date_of_birth: {{ Js::from($member->date_of_birth ? $member->date_of_birth->format('Y-m-d') : null) }},
            membership_date: {{ Js::from($member->membership_date->format('Y-m-d')) }},
            membership_status: {{ Js::from($member->membership_status) }}
        };

        // Real-time member preview update
        function updateMemberPreview() {
            const nameInput = document.getElementById('name');
            const emailInput = document.getElementById('email');
            const phoneInput = document.getElementById('phone');
            const dobInput = document.getElementById('date_of_birth');
            const membershipDateInput = document.getElementById('membership_date');
            const statusInput = document.getElementById('membership_status');
            const addressInput = document.getElementById('address');

            // Update preview elements
            const previewName = document.getElementById('preview-name');
            const previewEmail = document.getElementById('preview-email');
            const previewPhone = document.getElementById('preview-phone');
            const previewDob = document.getElementById('preview-dob');
            const previewMembershipDate = document.getElementById('preview-membership-date');
            const previewStatus = document.getElementById('preview-status');
            const previewAddress = document.getElementById('preview-address');
            const previewAvatar = document.getElementById('preview-avatar');

            // Update name and avatar
            const name = nameInput.value || originalMember.name;
            previewName.textContent = name;
            if (nameInput.value) {
                const initials = name.split(' ').map(word => word.charAt(0).toUpperCase()).join('').substring(0, 2);
                previewAvatar.textContent = initials;
            }

            // Update other fields
            previewEmail.textContent = emailInput.value || originalMember.email;
            previewPhone.textContent = phoneInput.value || '-';
            previewAddress.textContent = addressInput.value || '-';

            // Update date of birth
            if (dobInput.value) {
                const dob = new Date(dobInput.value);
                previewDob.textContent = dob.toLocaleDateString('km-KH', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
            } else {
                previewDob.textContent = '-';
            }

            // Update membership date
            if (membershipDateInput.value) {
                const membershipDate = new Date(membershipDateInput.value);
                previewMembershipDate.textContent = membershipDate.toLocaleDateString('km-KH', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric'
                });
            }

            // Update status
            const statusText = {
                'active': 'សកម្ម',
                'inactive': 'អសកម្ម',
                'suspended': 'ផ្អាក'
            };
            const statusClass = {
                'active': 'bg-success',
                'inactive': 'bg-secondary',
                'suspended': 'bg-danger'
            };

            previewStatus.textContent = statusText[statusInput.value] || 'សកម្ម';
            previewStatus.className = `badge ${statusClass[statusInput.value] || 'bg-success'} khmer-regular`;
        }

        // Track form changes and update change summary
        function trackChanges() {
            const form = document.querySelector('.member-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    updateChangeSummary();
                    updateMemberPreview();
                    highlightChangedFields();
                });
            });
        }

        // Highlight changed fields
        function highlightChangedFields() {
            const form = document.querySelector('.member-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                const currentValue = input.value;
                const originalValue = originalMember[input.name];

                if (currentValue != originalValue && originalValue !== null) {
                    input.classList.add('changed');
                } else {
                    input.classList.remove('changed');
                }
            });
        }

        // Update change summary
        function updateChangeSummary() {
            const form = document.querySelector('.member-edit-form');
            const summaryContainer = document.getElementById('change-summary');
            const inputs = form.querySelectorAll('input, select, textarea');

            let changes = [];

            inputs.forEach(input => {
                const currentValue = input.value;
                const originalValue = originalMember[input.name];
                const fieldName = getFieldDisplayName(input.name);

                if (currentValue != originalValue && originalValue !== null) {
                    changes.push({
                        field: fieldName,
                        oldValue: originalValue,
                        newValue: currentValue
                    });
                }
            });

            if (changes.length === 0) {
                summaryContainer.innerHTML = `
                    <div class="alert alert-info khmer-regular">
                        <i class="bi bi-info-circle me-2"></i>
                        មិនមានការផ្លាស់ប្តូរ
                    </div>
                `;
            } else {
                let changesHtml = '<div class="changes-list">';
                changes.forEach(change => {
                    changesHtml += `
                        <div class="change-item">
                            <div class="change-field khmer-medium">${change.field}</div>
                            <div class="change-values">
                                <span class="old-value khmer-regular">${change.oldValue || 'ទទេ'}</span>
                                <i class="bi bi-arrow-right change-arrow"></i>
                                <span class="new-value khmer-regular">${change.newValue || 'ទទេ'}</span>
                            </div>
                        </div>
                    `;
                });
                changesHtml += '</div>';
                summaryContainer.innerHTML = changesHtml;
            }
        }

        // Get field display name in Khmer
        function getFieldDisplayName(fieldName) {
            const fieldNames = {
                'name': 'ឈ្មោះ',
                'email': 'អីមែល',
                'phone': 'ទូរសព្ទ',
                'address': 'អាសយដ្ឋាន',
                'date_of_birth': 'ថ្ងៃកំណើត',
                'membership_date': 'ថ្ងៃចុះឈ្មោះ',
                'membership_status': 'ស្ថានភាព'
            };

            return fieldNames[fieldName] || fieldName;
        }

        // Reset form to original values
        function resetForm() {
            if (confirm('តើអ្នកពិតជាចង់កំណត់ទិន្នន័យឡើងវិញមែនទេ? ការផ្លាស់ប្តូរទាំងអស់នឹងបាត់បង់។')) {
                const form = document.querySelector('.member-edit-form');

                Object.keys(originalMember).forEach(field => {
                    const input = form.querySelector(`[name="${field}"]`);
                    if (input) {
                        input.value = originalMember[field] || '';
                        input.classList.remove('changed');
                    }
                });

                updateChangeSummary();
                updateMemberPreview();
            }
        }

        // Form validation enhancement (reuse from create page)
        function enhanceFormValidation() {
            const form = document.querySelector('.member-edit-form');
            const inputs = form.querySelectorAll('input, select, textarea');

            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    if (this.checkValidity()) {
                        this.classList.remove('is-invalid');
                        this.classList.add('is-valid');
                    } else {
                        this.classList.remove('is-valid');
                        this.classList.add('is-invalid');
                    }
                });

                input.addEventListener('focus', function() {
                    this.classList.remove('is-valid', 'is-invalid');
                });
            });

            // Email validation
            const emailInput = document.getElementById('email');
            emailInput.addEventListener('input', function() {
                const email = this.value;
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                if (email && !emailRegex.test(email)) {
                    this.setCustomValidity('សូមបញ្ចូលអីមែលត្រឹមត្រូវ');
                } else {
                    this.setCustomValidity('');
                }
            });

            // Phone number formatting
            const phoneInput = document.getElementById('phone');
            phoneInput.addEventListener('input', function() {
                let phone = this.value.replace(/\D/g, '');
                if (phone.length > 0) {
                    if (phone.length <= 3) {
                        phone = phone;
                    } else if (phone.length <= 6) {
                        phone = phone.slice(0, 3) + ' ' + phone.slice(3);
                    } else {
                        phone = phone.slice(0, 3) + ' ' + phone.slice(3, 6) + ' ' + phone.slice(6, 9);
                    }
                }
                this.value = phone;
            });
        }

        // Form submission enhancement
        function enhanceFormSubmission() {
            const form = document.querySelector('.member-edit-form');
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalText = submitBtn.innerHTML;

            form.addEventListener('submit', function(e) {
                submitBtn.classList.add('loading');
                submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-2"></i>កំពុងរក្សាទុក...';
                submitBtn.disabled = true;

                if (!form.checkValidity()) {
                    e.preventDefault();
                    submitBtn.classList.remove('loading');
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;

                    const firstInvalid = form.querySelector(':invalid');
                    if (firstInvalid) {
                        firstInvalid.focus();
                        firstInvalid.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Convert existing numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                element.textContent = toKhmerNumbers(element.textContent);
            });

            // Setup all enhancements
            trackChanges();
            updateMemberPreview();
            updateChangeSummary();
            enhanceFormValidation();
            enhanceFormSubmission();

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations
            const sections = document.querySelectorAll('.form-section');
            sections.forEach((section, index) => {
                section.style.animationDelay = `${index * 0.1}s`;
            });

            // Auto-focus first changed field or name
            const changedField = document.querySelector('.form-control.changed');
            const nameField = document.getElementById('name');

            if (changedField) {
                setTimeout(() => changedField.focus(), 300);
            } else if (nameField) {
                setTimeout(() => nameField.focus(), 300);
            }
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + S to save
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                e.preventDefault();
                document.querySelector('.member-edit-form').dispatchEvent(new Event('submit'));
            }

            // Ctrl/Cmd + R to reset
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                resetForm();
            }

            // Escape to cancel
            if (e.key === 'Escape') {
                if (confirm('តើអ្នកពិតជាចង់បោះបង់ការកែប្រែមែនទេ?')) {
                    window.location.href = "{{ route('members.show', $member) }}";
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/members/index.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-people text-success"></i>
                    </div>
                    <span class="gradient-text">គ្រប់គ្រងសមាជិក</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-person-check me-1"></i>
                    គ្រប់គ្រងសមាជិកបណ្ណាល័យទាំងអស់
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('members.create') }}" class="btn btn-success modern-btn khmer-medium">
                    <i class="bi bi-person-plus me-2"></i>បន្ថែមសមាជិកថ្មី
                </a>
            </div>
        </div>
    </x-slot>

    <!-- Enhanced Search and Filter Section -->
    <div class="card modern-card mb-4">
        <div class="card-header bg-gradient-success text-white">
            <div class="d-flex align-items-center">
                <div class="filter-icon me-3">
                    <i class="bi bi-funnel"></i>
                </div>
                <div>
                    <h6 class="card-title mb-0 khmer-semibold">ស្វែងរក និង ត្រងសមាជិក</h6>
                    <small class="opacity-75 khmer-regular">ស្វែងរកសមាជិកតាមបែបផែនណា</small>
                </div>
            </div>
        </div>
        <div class="card-body">
            <form method="GET" action="{{ route('members.index') }}" class="filter-form">
                <div class="row g-3">
                    <!-- Search Input -->
                    <div class="col-md-4">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-search me-1"></i>ស្វែងរកសមាជិក
                        </label>
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="bi bi-search text-muted"></i>
                            </span>
                            <input type="text" name="search" class="form-control khmer-regular"
                                   placeholder="ស្វែងរកតាមឈ្មោះ, អីមែល, ទូរសព្ទ..."
                                   value="{{ request('search') }}">
                        </div>
                    </div>

                    <!-- Status Filter -->
                    <div class="col-md-3">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-shield-check me-1"></i>ស្ថានភាពសមាជិក
                        </label>
                        <select name="status" class="form-select khmer-regular">
                            <option value="">ស្ថានភាពទាំងអស់</option>
                            <option value="active" {{ request('status') == 'active' ? 'selected' : '' }}>សកម្ម</option>
                            <option value="inactive" {{ request('status') == 'inactive' ? 'selected' : '' }}>អសកម្ម</option>
                            <option value="suspended" {{ request('status') == 'suspended' ? 'selected' : '' }}>ផ្អាក</option>
                        </select>
                    </div>

                    <!-- Registration Period Filter -->
                    <div class="col-md-3">
                        <label class="form-label khmer-medium">
                            <i class="bi bi-calendar3 me-1"></i>រយៈពេលចុះឈ្មោះ
                        </label>
                        <select name="period" class="form-select khmer-regular">
                            <option value="">រយៈពេលទាំងអស់</option>
                            <option value="today" {{ request('period') == 'today' ? 'selected' : '' }}>ថ្ងៃនេះ</option>
                            <option value="week" {{ request('period') == 'week' ? 'selected' : '' }}>សប្តាហ៍នេះ</option>
                            <option value="month" {{ request('period') == 'month' ? 'selected' : '' }}>ខែនេះ</option>
                            <option value="year" {{ request('period') == 'year' ? 'selected' : '' }}>ឆ្នាំនេះ</option>
                        </select>
                    </div>

                    <!-- Filter Actions -->
                    <div class="col-md-2">
                        <label class="form-label">&nbsp;</label>
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-outline-success khmer-medium">
                                <i class="bi bi-filter me-1"></i>ត្រង
                            </button>
                            <a href="{{ route('members.index') }}" class="btn btn-outline-secondary btn-sm khmer-regular">
                                <i class="bi bi-arrow-clockwise me-1"></i>កំណត់ឡើងវិញ
                            </a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Members Statistics Card -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="stat-mini-card success">
                <div class="stat-mini-icon">
                    <i class="bi bi-people"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $members->total() }}</div>
                    <div class="stat-mini-label khmer-regular">សមាជិកសរុប</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card primary">
                <div class="stat-mini-icon">
                    <i class="bi bi-person-check"></i>
                </div>
                <div class="stat-mini-content">
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $members->where('membership_status', 'active')->count() }}</div>
                    <div class="stat-mini-label khmer-regular">សកម្ម</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card warning">
                <div class="stat-mini-icon">
                    <i class="bi bi-book"></i>
                </div>
                <div class="stat-mini-content">
                    @php
                        $activeBorrowers = \App\Models\Member::whereHas('borrowings', function($q) {
                            $q->whereNull('returned_at');
                        })->count();
                    @endphp
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $activeBorrowers }}</div>
                    <div class="stat-mini-label khmer-regular">កំពុងខ្ចី</div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-mini-card info">
                <div class="stat-mini-icon">
                    <i class="bi bi-calendar-plus"></i>
                </div>
                <div class="stat-mini-content">
                    @php
                        $newThisMonth = \App\Models\Member::whereMonth('membership_date', now()->month)
                                                         ->whereYear('membership_date', now()->year)
                                                         ->count();
                    @endphp
                    <div class="stat-mini-number khmer-bold khmer-number">{{ $newThisMonth }}</div>
                    <div class="stat-mini-label khmer-regular">ថ្មីខែនេះ</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Members Table Card -->
    <div class="card modern-card">
        <div class="card-header bg-white border-bottom-0">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center">
                    <div class="table-icon me-3">
                        <i class="bi bi-table"></i>
                    </div>
                    <div>
                        <h6 class="card-title mb-0 khmer-semibold">បញ្ជីសមាជិក</h6>
                        <small class="text-muted khmer-regular">
                            បង្ហាញលទ្ធផល <span class="khmer-number">{{ $members->firstItem() ?? 0 }}</span> -
                            <span class="khmer-number">{{ $members->lastItem() ?? 0 }}</span> នៃ
                            <span class="khmer-number">{{ $members->total() }}</span> សមាជិក
                        </small>
                    </div>
                </div>
                <div class="table-actions">
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-secondary btn-sm active khmer-regular">
                            <i class="bi bi-table me-1"></i>តារាង
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm khmer-regular" onclick="toggleView('grid')">
                            <i class="bi bi-grid-3x3-gap me-1"></i>ក្រឡា
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if($members->count() > 0)
                <!-- Table View -->
                <div id="table-view" class="table-responsive">
                    <table class="table table-hover modern-table mb-0">
                        <thead>
                        <tr>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-person me-1"></i>ព័ត៌មានសមាជិក
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-envelope me-1"></i>ទំនាក់ទំនង
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-calendar3 me-1"></i>ថ្ងៃចុះឈ្មោះ
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-book me-1"></i>ការខ្ចី
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-shield-check me-1"></i>ស្ថានភាព
                            </th>
                            <th class="border-0 khmer-semibold">
                                <i class="bi bi-gear me-1"></i>សកម្មភាព
                            </th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach($members as $member)
                            <tr class="table-row-hover">
                                <td class="border-0">
                                    <div class="member-info-cell">
                                        <div class="member-avatar">
                                            {{ strtoupper(substr($member->name, 0, 2)) }}
                                        </div>
                                        <div class="member-details">
                                            <div class="member-name khmer-semibold">{{ $member->name }}</div>
                                            <div class="member-id khmer-regular text-muted">
                                                <i class="bi bi-hash me-1"></i>ID: <span class="khmer-number">{{ $member->id }}</span>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="contact-cell">
                                        <div class="contact-email khmer-regular">
                                            <i class="bi bi-envelope text-primary me-1"></i>{{ $member->email }}
                                        </div>
                                        @if($member->phone)
                                            <div class="contact-phone khmer-regular text-muted">
                                                <i class="bi bi-telephone me-1"></i>{{ $member->phone }}
                                            </div>
                                        @endif
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="date-cell">
                                        <div class="date-main khmer-regular">{{ $member->membership_date->format('d/m/Y') }}</div>
                                        <div class="date-relative text-muted">{{ $member->membership_date->diffForHumans() }}</div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    <div class="borrowing-stats">
                                        <div class="borrowing-active">
                                            <span class="badge bg-primary khmer-number">{{ $member->activeBorrowings()->count() }}</span>
                                            <small class="text-muted khmer-regular">សកម្ម</small>
                                        </div>
                                        <div class="borrowing-total mt-1">
                                            <span class="text-muted khmer-regular">សរុប: </span>
                                            <span class="khmer-number">{{ $member->borrowings()->count() }}</span>
                                        </div>
                                    </div>
                                </td>
                                <td class="border-0">
                                    @if($member->membership_status == 'active')
                                        <span class="status-badge success khmer-regular">
                                                <i class="bi bi-check-circle"></i> សកម្ម
                                            </span>
                                    @elseif($member->membership_status == 'inactive')
                                        <span class="status-badge secondary khmer-regular">
                                                <i class="bi bi-pause-circle"></i> អសកម្ម
                                            </span>
                                    @else
                                        <span class="status-badge danger khmer-regular">
                                                <i class="bi bi-x-circle"></i> ផ្អាក
                                            </span>
                                    @endif
                                </td>
                                <td class="border-0">
                                    <div class="action-buttons">
                                        <a href="{{ route('members.show', $member) }}"
                                           class="btn btn-sm btn-outline-info"
                                           data-bs-toggle="tooltip" title="មើលលម្អិត">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a href="{{ route('members.edit', $member) }}"
                                           class="btn btn-sm btn-outline-warning"
                                           data-bs-toggle="tooltip" title="កែប្រែ">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        @if($member->borrowings()->active()->count() == 0)
                                            <form action="{{ route('members.destroy', $member) }}" method="POST"
                                                  class="d-inline" onsubmit="return confirm('តើអ្នកពិតជាចង់លុបសមាជិកនេះមែនទេ?')">
                                                @csrf
                                                @method('DELETE')
                                                <button type="submit" class="btn btn-sm btn-outline-danger"
                                                        data-bs-toggle="tooltip" title="លុប">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </form>
                                        @else
                                            <button class="btn btn-sm btn-outline-secondary" disabled
                                                    data-bs-toggle="tooltip" title="មិនអាចលុបបាន (មានការខ្ចី)">
                                                <i class="bi bi-lock"></i>
                                            </button>
                                        @endif
                                    </div>
                                </td>
                            </tr>
                        @endforeach
                        </tbody>
                    </table>
                </div>

                <!-- Grid View (Hidden by default) -->
                <div id="grid-view" class="d-none">
                    <div class="row g-4 p-4">
                        @foreach($members as $member)
                            <div class="col-md-6 col-lg-4 col-xl-3">
                                <div class="member-card">
                                    <div class="member-card-header">
                                        <div class="member-card-avatar">
                                            {{ strtoupper(substr($member->name, 0, 2)) }}
                                        </div>
                                        <div class="member-card-status">
                                            @if($member->membership_status == 'active')
                                                <span class="badge bg-success khmer-regular">សកម្ម</span>
                                            @elseif($member->membership_status == 'inactive')
                                                <span class="badge bg-secondary khmer-regular">អសកម្ម</span>
                                            @else
                                                <span class="badge bg-danger khmer-regular">ផ្អាក</span>
                                            @endif
                                        </div>
                                    </div>
                                    <div class="member-card-body">
                                        <h6 class="member-card-name khmer-semibold">{{ Str::limit($member->name, 25) }}</h6>
                                        <p class="member-card-email khmer-regular">{{ $member->email }}</p>
                                        <div class="member-card-meta">
                                            <small class="text-muted khmer-regular">
                                                <i class="bi bi-calendar3 me-1"></i>{{ $member->membership_date->format('d/m/Y') }}
                                            </small>
                                        </div>
                                        <div class="member-card-stats">
                                            <div class="row text-center">
                                                <div class="col-6">
                                                    <div class="stat-number khmer-number">{{ $member->activeBorrowings()->count() }}</div>
                                                    <div class="stat-label khmer-regular">កំពុងខ្ចី</div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="stat-number khmer-number">{{ $member->borrowings()->count() }}</div>
                                                    <div class="stat-label khmer-regular">សរុប</div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="member-card-footer">
                                        <div class="btn-group w-100">
                                            <a href="{{ route('members.show', $member) }}" class="btn btn-outline-primary btn-sm khmer-regular">
                                                <i class="bi bi-eye me-1"></i>មើល
                                            </a>
                                            <a href="{{ route('members.edit', $member) }}" class="btn btn-outline-warning btn-sm khmer-regular">
                                                <i class="bi bi-pencil me-1"></i>កែ
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        @endforeach
                    </div>
                </div>
            @else
                <!-- Empty State -->
                <div class="empty-state-large">
                    <div class="empty-icon">
                        <i class="bi bi-people"></i>
                    </div>
                    <h4 class="empty-title khmer-semibold">មិនមានសមាជិក</h4>
                    <p class="empty-description khmer-regular">
                        @if(request()->hasAny(['search', 'status', 'period']))
                            មិនមានសមាជិកត្រូវនឹងការស្វែងរករបស់អ្នកទេ។ សាកល្បងស្វែងរកដោយលក្ខខណ្ឌផ្សេង។
                        @else
                            មិនទាន់មានសមាជិកនៅក្នុងបណ្ណាល័យនេះទេ។ ចាប់ផ្តើមដោយបន្ថែមសមាជិកដំបូង។
                        @endif
                    </p>
                    <div class="empty-actions">
                        @if(request()->hasAny(['search', 'status', 'period']))
                            <a href="{{ route('members.index') }}" class="btn btn-outline-primary khmer-medium">
                                <i class="bi bi-arrow-clockwise me-1"></i>មើលសមាជិកទាំងអស់
                            </a>
                        @endif
                        <a href="{{ route('members.create') }}" class="btn btn-success khmer-medium">
                            <i class="bi bi-plus me-1"></i>បន្ថែមសមាជិកថ្មី
                        </a>
                    </div>
                </div>
            @endif
        </div>

        <!-- Pagination -->
        @if($members->hasPages())
            <div class="card-footer bg-light">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="pagination-info khmer-regular text-muted">
                        បង្ហាញ <span class="khmer-number">{{ $members->firstItem() }}</span> -
                        <span class="khmer-number">{{ $members->lastItem() }}</span> នៃ
                        <span class="khmer-number">{{ $members->total() }}</span> លទ្ធផល
                    </div>
                    <div class="pagination-links">
                        {{ $members->withQueryString()->links('pagination::bootstrap-4') }}
                    </div>
                </div>
            </div>
        @endif
    </div>

    <!-- Enhanced Styles for Members Page -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            box-shadow: 0 4px 15px rgba(94, 231, 223, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Filter card styling */
        .filter-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Mini stat cards */
        .stat-mini-card {
            display: flex;
            align-items: center;
            padding: 1.5rem;
            border-radius: 12px;
            transition: all 0.3s ease;
            border: none;
            position: relative;
            overflow: hidden;
            color: white;
        }

        .stat-mini-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .stat-mini-card.success {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
        }

        .stat-mini-card.primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .stat-mini-card.warning {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #8b4513;
        }

        .stat-mini-card.info {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #6b46c1;
        }

        .stat-mini-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-right: 1rem;
        }

        .stat-mini-number {
            font-size: 1.8rem;
            margin-bottom: 0.25rem;
        }

        .stat-mini-label {
            font-size: 0.9rem;
            opacity: 0.9;
        }

        /* Table styling */
        .table-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }

        .modern-table {
            font-size: 0.9rem;
        }

        .modern-table thead th {
            background: #f8f9fa;
            font-weight: 600;
            color: #495057;
            border: none;
            padding: 1rem 0.75rem;
            vertical-align: middle;
        }

        .table-row-hover {
            transition: all 0.2s ease;
        }

        .table-row-hover:hover {
            background: rgba(94, 231, 223, 0.05);
            transform: scale(1.005);
        }

        /* Member info cell */
        .member-info-cell {
            display: flex;
            align-items: center;
        }

        .member-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
            font-weight: 600;
            margin-right: 1rem;
            flex-shrink: 0;
        }

        .member-name {
            font-size: 1rem;
            color: #2d3436;
            margin-bottom: 0.25rem;
            line-height: 1.4;
        }

        .member-id {
            font-size: 0.8rem;
        }

        /* Contact cell */
        .contact-cell {
            font-size: 0.9rem;
        }

        .contact-email {
            margin-bottom: 0.25rem;
        }

        .contact-phone {
            font-size: 0.8rem;
        }

        /* Date cell */
        .date-cell {
            text-align: center;
        }

        .date-main {
            font-weight: 500;
            margin-bottom: 0.25rem;
        }

        .date-relative {
            font-size: 0.8rem;
        }

        /* Borrowing stats */
        .borrowing-stats {
            text-align: center;
        }

        .borrowing-active {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            margin-bottom: 0.25rem;
        }

        .borrowing-total {
            font-size: 0.8rem;
        }

        /* Status badge */
        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .status-badge.success {
            background: #d4edda;
            color: #155724;
        }

        .status-badge.secondary {
            background: #e2e3e5;
            color: #383d41;
        }

        .status-badge.danger {
            background: #f8d7da;
            color: #721c24;
        }

        /* Action buttons */
        .action-buttons {
            display: flex;
            gap: 0.3rem;
        }

        .action-buttons .btn {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
        }

        /* Member cards for grid view */
        .member-card {
            border: none;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            background: white;
        }

        .member-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.15);
        }

        .member-card-header {
            position: relative;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            padding: 2rem;
            text-align: center;
        }

        .member-card-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            font-weight: 600;
            color: white;
            margin: 0 auto 1rem;
        }

        .member-card-status {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        .member-card-body {
            padding: 1.5rem;
        }

        .member-card-name {
            color: #2d3436;
            margin-bottom: 0.5rem;
            line-height: 1.4;
        }

        .member-card-email {
            color: #6c757d;
            margin-bottom: 1rem;
            font-size: 0.9rem;
        }

        .member-card-meta {
            margin-bottom: 1rem;
        }

        .member-card-stats .stat-number {
            font-size: 1.2rem;
            font-weight: 600;
            color: #2d3436;
        }

        .member-card-stats .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
        }

        .member-card-footer {
            padding: 1rem 1.5rem;
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
        }

        /* Empty state */
        .empty-state-large {
            text-align: center;
            padding: 4rem 2rem;
        }

        .empty-icon {
            font-size: 5rem;
            color: #dee2e6;
            margin-bottom: 2rem;
        }

        .empty-title {
            color: #6c757d;
            margin-bottom: 1rem;
        }

        .empty-description {
            color: #adb5bd;
            margin-bottom: 2rem;
            max-width: 400px;
            margin-left: auto;
            margin-right: auto;
        }

        .empty-actions {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .member-info-cell {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .member-avatar {
                margin-right: 0;
                margin-bottom: 0.5rem;
            }

            .action-buttons {
                flex-direction: column;
            }

            .stat-mini-card {
                margin-bottom: 1rem;
            }

            .contact-cell {
                font-size: 0.8rem;
            }
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .modern-card {
            animation: fadeInUp 0.6s ease-out;
        }

        .stat-mini-card {
            animation: fadeInUp 0.6s ease-out;
        }
    </style>

    <!-- Enhanced JavaScript -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Toggle between table and grid view
        function toggleView(view) {
            const tableView = document.getElementById('table-view');
            const gridView = document.getElementById('grid-view');
            const buttons = document.querySelectorAll('.table-actions .btn');

            if (view === 'grid') {
                tableView.classList.add('d-none');
                gridView.classList.remove('d-none');
                buttons[0].classList.remove('active');
                buttons[1].classList.add('active');
            } else {
                tableView.classList.remove('d-none');
                gridView.classList.add('d-none');
                buttons[0].classList.add('active');
                buttons[1].classList.remove('active');
            }

            // Save preference to localStorage
            localStorage.setItem('membersViewPreference', view);
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Convert numbers to Khmer
            const numberElements = document.querySelectorAll('.khmer-number');
            numberElements.forEach(element => {
                const originalText = element.textContent;
                element.textContent = toKhmerNumbers(originalText);
            });

            // Load saved view preference
            const savedView = localStorage.getItem('membersViewPreference');
            if (savedView === 'grid') {
                toggleView('grid');
            }

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add loading states to forms
            const filterForm = document.querySelector('.filter-form');
            if (filterForm) {
                filterForm.addEventListener('submit', function() {
                    const submitBtn = this.querySelector('button[type="submit"]');
                    submitBtn.innerHTML = '<i class="spinner-border spinner-border-sm me-1"></i>កំពុងស្វែងរក...';
                    submitBtn.disabled = true;
                });
            }

            // Animate stat cards on scroll
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.animationDelay = `${Math.random() * 0.3}s`;
                        entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                    }
                });
            });

            document.querySelectorAll('.stat-mini-card').forEach(card => {
                observer.observe(card);
            });

            // Enhanced table interactions
            document.querySelectorAll('.table-row-hover').forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.boxShadow = '0 4px 15px rgba(94, 231, 223, 0.15)';
                });

                row.addEventListener('mouseleave', function() {
                    this.style.boxShadow = '';
                });
            });
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/members/show.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="h3 mb-1 text-gray-800 d-flex align-items-center khmer-bold">
                    <div class="page-icon-wrapper me-3">
                        <i class="bi bi-person text-success"></i>
                    </div>
                    <span class="gradient-text">ព័ត៌មានលម្អិតសមាជិក</span>
                </h2>
                <p class="text-muted mb-0 khmer-regular">
                    <i class="bi bi-info-circle me-1"></i>
                    ព័ត៌មានពេញលេញអំពីសមាជិកនេះ
                </p>
            </div>
            <div class="header-actions">
                <a href="{{ route('members.edit', $member) }}" class="btn btn-warning modern-btn me-2 khmer-medium">
                    <i class="bi bi-pencil me-2"></i>កែប្រែ
                </a>
                <a href="{{ route('members.index') }}" class="btn btn-outline-secondary modern-btn khmer-medium">
                    <i class="bi bi-arrow-left me-2"></i>ត្រឡប់ក្រោយ
                </a>
            </div>
        </div>
    </x-slot>

    <div class="row g-4">
        <!-- Main Member Information -->
        <div class="col-lg-8">
            <!-- Member Profile Card -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-success text-white">
                    <div class="d-flex align-items-center">
                        <div class="member-icon me-3">
                            <i class="bi bi-person"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">{{ $member->name }}</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានលម្អិតអំពីសមាជិក</small>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row">
                        <!-- Member Avatar & Basic Info -->
                        <div class="col-md-4">
                            <div class="member-profile-large">
                                <div class="member-avatar-large">
                                    {{ strtoupper(substr($member->name, 0, 2)) }}
                                </div>
                                <div class="member-status-large">
                                    @if($member->membership_status == 'active')
                                        <span class="status-badge-large success khmer-medium">
                                            <i class="bi bi-check-circle"></i> សកម្ម
                                        </span>
                                    @elseif($member->membership_status == 'inactive')
                                        <span class="status-badge-large secondary khmer-medium">
                                            <i class="bi bi-pause-circle"></i> អសកម្ម
                                        </span>
                                    @else
                                        <span class="status-badge-large danger khmer-medium">
                                            <i class="bi bi-x-circle"></i> ផ្អាក
                                        </span>
                                    @endif
                                </div>
                                <div class="member-id-large khmer-regular">
                                    <i class="bi bi-hash"></i> ID: <span class="khmer-number">{{ $member->id }}</span>
                                </div>
                            </div>
                        </div>

                        <!-- Member Details -->
                        <div class="col-md-8">
                            <div class="member-details-grid">
                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-person text-success me-2"></i>ឈ្មោះពេញ
                                    </div>
                                    <div class="detail-value khmer-semibold">{{ $member->name }}</div>
                                </div>

                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-envelope text-primary me-2"></i>អីមែល
                                    </div>
                                    <div class="detail-value khmer-regular">{{ $member->email }}</div>
                                </div>

                                @if($member->phone)
                                    <div class="detail-row">
                                        <div class="detail-label khmer-medium">
                                            <i class="bi bi-telephone text-info me-2"></i>ទូរសព្ទ
                                        </div>
                                        <div class="detail-value khmer-regular">{{ $member->phone }}</div>
                                    </div>
                                @endif

                                @if($member->date_of_birth)
                                    <div class="detail-row">
                                        <div class="detail-label khmer-medium">
                                            <i class="bi bi-calendar3 text-warning me-2"></i>ថ្ងៃកំណើត
                                        </div>
                                        <div class="detail-value khmer-regular">
                                            {{ \Carbon\Carbon::parse($member->date_of_birth)->format('d/m/Y') }}
                                            <small class="text-muted">
                                                (អាយុ {{ \Carbon\Carbon::parse($member->date_of_birth)->age }} ឆ្នាំ)
                                            </small>
                                        </div>
                                    </div>
                                @endif

                                <div class="detail-row">
                                    <div class="detail-label khmer-medium">
                                        <i class="bi bi-calendar-plus text-secondary me-2"></i>ថ្ងៃចុះឈ្មោះ
                                    </div>
                                    <div class="detail-value khmer-regular">
                                        {{ $member->membership_date->format('d/m/Y') }}
                                        <small class="text-muted">
                                            ({{ $member->membership_date->diffForHumans() }})
                                        </small>
                                    </div>
                                </div>

                                @if($member->address)
                                    <div class="detail-row">
                                        <div class="detail-label khmer-medium">
                                            <i class="bi bi-geo-alt text-danger me-2"></i>អាសយដ្ឋាន
                                        </div>
                                        <div class="detail-value khmer-regular">{{ $member->address }}</div>
                                    </div>
                                @endif
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Borrowing History -->
            <div class="card modern-card">
                <div class="card-header bg-white border-bottom-0">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <div class="history-icon me-3">
                                <i class="bi bi-clock-history"></i>
                            </div>
                            <div>
                                <h6 class="card-title mb-0 khmer-semibold">ប្រវត្តិការខ្ចី</h6>
                                <small class="text-muted khmer-regular">
                                    ការខ្ចីទាំងអស់របស់សមាជិកនេះ
                                    (<span class="khmer-number">{{ $member->borrowings->count() }}</span> ដង)
                                </small>
                            </div>
                        </div>
                        @if($member->borrowings->count() > 0)
                            <div class="history-stats">
                                <small class="text-muted khmer-regular">
                                    សកម្ម: <span class="text-primary khmer-number">{{ $member->activeBorrowings->count() }}</span> |
                                    បានត្រឡប់: <span class="text-success khmer-number">{{ $member->borrowings->whereNotNull('returned_at')->count() }}</span>
                                </small>
                            </div>
                        @endif
                    </div>
                </div>
                <div class="card-body p-0">
                    @if($member->borrowings->count() > 0)
                        <div class="table-responsive">
                            <table class="table table-hover modern-table mb-0">
                                <thead>
                                <tr>
                                    <th class="border-0 khmer-medium">សៀវភៅ</th>
                                    <th class="border-0 khmer-medium">ថ្ងៃខ្ចី</th>
                                    <th class="border-0 khmer-medium">ថ្ងៃត្រូវត្រឡប់</th>
                                    <th class="border-0 khmer-medium">ថ្ងៃត្រឡប់</th>
                                    <th class="border-0 khmer-medium">ស្ថានភាព</th>
                                    <th class="border-0 khmer-medium">ការពិន័យ</th>
                                </tr>
                                </thead>
                                <tbody>
                                @foreach($member->borrowings->sortByDesc('borrowed_at') as $borrowing)
                                    <tr class="borrowing-row">
                                        <td class="border-0">
                                            <div class="book-info-mini">
                                                <div class="book-cover-small">
                                                    <i class="bi bi-book"></i>
                                                </div>
                                                <div class="book-details-small">
                                                    <div class="book-title-small khmer-medium">{{ Str::limit($borrowing->book->title, 30) }}</div>
                                                    <small class="text-muted khmer-regular">{{ $borrowing->book->author }}</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="border-0">
                                            <span class="date-display khmer-regular">{{ $borrowing->borrowed_at->format('d/m/Y') }}</span>
                                        </td>
                                        <td class="border-0">
                                                <span class="date-display khmer-regular {{ $borrowing->isOverdue() && !$borrowing->returned_at ? 'text-danger fw-bold' : '' }}">
                                                    {{ $borrowing->due_date->format('d/m/Y') }}
                                                </span>
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->returned_at)
                                                <span class="date-display khmer-regular">{{ $borrowing->returned_at->format('d/m/Y') }}</span>
                                            @else
                                                <span class="text-muted khmer-regular">-</span>
                                            @endif
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->returned_at)
                                                <span class="status-badge success khmer-regular">
                                                        <i class="bi bi-check-circle"></i> បានត្រឡប់
                                                    </span>
                                            @elseif($borrowing->isOverdue())
                                                <span class="status-badge danger khmer-regular">
                                                        <i class="bi bi-exclamation-triangle"></i>
                                                        ហួសកំណត់ <span class="khmer-number">{{ $borrowing->days_overdue }}</span>ថ្ងៃ
                                                    </span>
                                            @else
                                                <span class="status-badge primary khmer-regular">
                                                        <i class="bi bi-clock"></i> កំពុងខ្ចី
                                                    </span>
                                            @endif
                                        </td>
                                        <td class="border-0">
                                            @if($borrowing->fine_amount)
                                                <div class="fine-info">
                                                    <span class="fine-amount">${{ number_format($borrowing->fine_amount, 2) }}</span>
                                                    @if($borrowing->fine_paid)
                                                        <span class="badge bg-success ms-1 khmer-regular">បានបង់</span>
                                                    @else
                                                        <span class="badge bg-danger ms-1 khmer-regular">មិនទាន់បង់</span>
                                                    @endif
                                                </div>
                                            @else
                                                <span class="text-muted">-</span>
                                            @endif
                                        </td>
                                    </tr>
                                @endforeach
                                </tbody>
                            </table>
                        </div>
                    @else
                        <div class="empty-history">
                            <div class="empty-icon">
                                <i class="bi bi-clock-history"></i>
                            </div>
                            <h6 class="empty-title khmer-semibold">មិនទាន់មានការខ្ចី</h6>
                            <p class="empty-description khmer-regular">សមាជិកនេះមិនទាន់ធ្វើការខ្ចីសៀវភៅម្តងណាទេ</p>
                            <a href="{{ route('borrowings.create', ['member_id' => $member->id]) }}" class="btn btn-primary">
                                <i class="bi bi-plus me-1"></i>បង្កើតការខ្ចីថ្មី
                            </a>
                        </div>
                    @endif
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Member Statistics -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-info text-white">
                    <div class="d-flex align-items-center">
                        <div class="stats-icon me-3">
                            <i class="bi bi-graph-up"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ស្ថិតិសមាជិក</h6>
                            <small class="opacity-75 khmer-regular">ទិន្នន័យសំខាន់ៗ</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-value khmer-bold khmer-number">{{ $member->borrowings->count() }}</div>
                            <div class="stat-label khmer-regular">ដងនៃការខ្ចី</div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-value khmer-bold khmer-number">{{ $member->activeBorrowings->count() }}</div>
                            <div class="stat-label khmer-regular">កំពុងខ្ចី</div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-value khmer-bold khmer-number">{{ $member->borrowings->where('returned_at', '!=', null)->count() }}</div>
                            <div class="stat-label khmer-regular">បានត្រឡប់</div>
                        </div>

                        <div class="stat-item">
                            <div class="stat-value khmer-bold">
                                ${{ number_format($member->borrowings->whereNotNull('fine_amount')->sum('fine_amount'), 2) }}
                            </div>
                            <div class="stat-label khmer-regular">ការពិន័យសរុប</div>
                        </div>
                    </div>

                    @if($member->borrowings->count() > 0)
                        <div class="stats-additional mt-3">
                            <small class="text-muted khmer-regular">
                                ការខ្ចីចុងក្រោយ:
                                <span class="text-primary">{{ $member->borrowings->sortByDesc('borrowed_at')->first()->borrowed_at->diffForHumans() }}</span>
                            </small>
                        </div>
                    @endif
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="card modern-card mb-4">
                <div class="card-header bg-gradient-warning text-dark">
                    <div class="d-flex align-items-center">
                        <div class="action-icon me-3">
                            <i class="bi bi-lightning-fill"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">សកម្មភាពរហ័ស</h6>
                            <small class="opacity-75 khmer-regular">ធ្វើការងារលឿន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="quick-actions-vertical">
                        <a href="{{ route('borrowings.create', ['member_id' => $member->id]) }}"
                           class="quick-action-item primary">
                            <div class="action-icon-small">
                                <i class="bi bi-plus-circle"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">បង្កើតការខ្ចីថ្មី</div>
                                <div class="action-subtitle khmer-regular">ឲ្យសមាជិកនេះ</div>
                            </div>
                        </a>

                        <a href="{{ route('members.edit', $member) }}" class="quick-action-item warning">
                            <div class="action-icon-small">
                                <i class="bi bi-pencil"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">កែប្រែព័ត៌មាន</div>
                                <div class="action-subtitle khmer-regular">កែប្រែសមាជិកនេះ</div>
                            </div>
                        </a>

                        <a href="{{ route('members.export-history', $member) }}" class="quick-action-item info">
                            <div class="action-icon-small">
                                <i class="bi bi-download"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">ទាញយកប្រវត្តិ</div>
                                <div class="action-subtitle khmer-regular">ឯកសារ PDF</div>
                            </div>
                        </a>

                        <a href="{{ route('members.index') }}" class="quick-action-item info">
                            <div class="action-icon-small">
                                <i class="bi bi-list"></i>
                            </div>
                            <div class="action-content">
                                <div class="action-title khmer-semibold">បញ្ជីសមាជិក</div>
                                <div class="action-subtitle khmer-regular">ត្រឡប់ទៅបញ្ជី</div>
                            </div>
                        </a>

                        @if($member->activeBorrowings()->count() == 0)
                            <button onclick="confirmDelete()" class="quick-action-item danger">
                                <div class="action-icon-small">
                                    <i class="bi bi-trash"></i>
                                </div>
                                <div class="action-content">
                                    <div class="action-title khmer-semibold">លុបសមាជិក</div>
                                    <div class="action-subtitle khmer-regular">លុបចេញពីប្រព័ន្ធ</div>
                                </div>
                            </button>
                        @endif
                    </div>
                </div>
            </div>

            <!-- Current Status -->
            <div class="card modern-card">
                <div class="card-header bg-gradient-secondary text-white">
                    <div class="d-flex align-items-center">
                        <div class="status-icon me-3">
                            <i class="bi bi-shield-check"></i>
                        </div>
                        <div>
                            <h6 class="card-title mb-0 khmer-semibold">ស្ថានភាពបច្ចុប្បន្ន</h6>
                            <small class="opacity-75 khmer-regular">ព័ត៌មានបច្ចុប្បន្ន</small>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="status-details">
                        <div class="status-item">
                            <div class="status-label khmer-regular">
                                <i class="bi bi-shield-check me-2"></i>ស្ថានភាពសមាជិក
                            </div>
                            <div class="status-value">
                                @if($member->membership_status == 'active')
                                    <span class="status-indicator online"></span>
                                    <span class="khmer-medium text-success">សកម្ម</span>
                                @elseif($member->membership_status == 'inactive')
                                    <span class="status-indicator offline"></span>
                                    <span class="khmer-medium text-secondary">អសកម្ម</span>
                                @else
                                    <span class="status-indicator suspended"></span>
                                    <span class="khmer-medium text-danger">ផ្អាក</span>
                                @endif
                            </div>
                        </div>

                        <div class="status-item">
                            <div class="status-label khmer-regular">
                                <i class="bi bi-calendar3 me-2"></i>អតិថិជនតាំងពី
                            </div>
                            <div class="status-value">
                                <span class="khmer-medium">{{ $member->membership_date->diffForHumans() }}</span>
                            </div>
                        </div>

                        <div class="status-item">
                            <div class="status-label khmer-regular">
                                <i class="bi bi-clock me-2"></i>ម៉ោងបច្ចុប្បន្ន (UTC)
                            </div>
                            <div class="status-value">
                                <span class="time-display khmer-medium" id="current-time">២០២៥-០៦-២០ ០៥:៣៧:៣៤</span>
                            </div>
                        </div>

                        <div class="status-item">
                            <div class="status-label khmer-regular">
                                <i class="bi bi-person-circle me-2"></i>កំពុងមើលដោយ
                            </div>
                            <div class="status-value">
                                <span class="user-badge khmer-medium">Chhunleangcheng</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header border-0">
                    <h5 class="modal-title khmer-semibold">
                        <i class="bi bi-exclamation-triangle text-danger me-2"></i>បញ្ជាក់ការលុប
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p class="khmer-regular">តើអ្នកពិតជាចង់លុបសមាជិក <strong>"{{ $member->name }}"</strong> មែនទេ?</p>
                    <p class="text-warning khmer-regular">
                        <i class="bi bi-warning me-1"></i>
                        សកម្មភាពនេះមិនអាចធ្វើត្រឡប់វិញបានទេ។
                    </p>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-secondary khmer-regular" data-bs-dismiss="modal">បោះបង់</button>
                    <form action="{{ route('members.destroy', $member) }}" method="POST" class="d-inline">
                        @csrf
                        @method('DELETE')
                        <button type="submit" class="btn btn-danger khmer-medium">លុបចេញ</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Enhanced Styles for Member Show Page -->
    <style>
        /* Page header styling */
        .page-icon-wrapper {
            width: 50px;
            height: 50px;
            border-radius: 15px;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: white;
            box-shadow: 0 4px 15px rgba(94, 231, 223, 0.3);
        }

        .gradient-text {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Member profile large */
        .member-profile-large {
            text-align: center;
            padding: 2rem;
            background: linear-gradient(145deg, #ffffff 0%, #f8f9fa 100%);
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        .member-avatar-large {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            color: white;
            font-weight: 600;
            margin: 0 auto 1.5rem;
            box-shadow: 0 8px 25px rgba(94, 231, 223, 0.3);
        }

        .status-badge-large {
            padding: 0.75rem 1.5rem;
            border-radius: 25px;
            font-size: 1rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .status-badge-large.success {
            background: #d4edda;
            color: #155724;
        }

        .status-badge-large.secondary {
            background: #e2e3e5;
            color: #383d41;
        }

        .status-badge-large.danger {
            background: #f8d7da;
            color: #721c24;
        }

        .member-id-large {
            font-size: 1.1rem;
            color: #6c757d;
            font-weight: 500;
        }

        /* Member details grid */
        .member-details-grid {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .detail-row {
            display: flex;
            align-items: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .detail-row:hover {
            background: #e3f2fd;
            transform: translateX(5px);
        }

        .detail-label {
            min-width: 150px;
            color: #6c757d;
            font-size: 0.9rem;
        }

        .detail-value {
            flex: 1;
            font-size: 1rem;
            color: #2d3436;
        }

        /* Book info mini */
        .book-info-mini {
            display: flex;
            align-items: center;
        }

        .book-cover-small {
            width: 40px;
            height: 40px;
            border-radius: 8px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1rem;
            margin-right: 1rem;
            flex-shrink: 0;
        }

        .book-title-small {
            font-size: 0.9rem;
            margin-bottom: 0.25rem;
        }

        /* History table enhancements */
        .history-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.1rem;
        }

        .borrowing-row {
            transition: all 0.2s ease;
        }

        .borrowing-row:hover {
            background: rgba(94, 231, 223, 0.05);
            transform: scale(1.005);
        }

        .date-display {
            font-family: monospace;
            font-size: 0.9rem;
        }

        .fine-info {
            display: flex;
            align-items: center;
            flex-wrap: wrap;
        }

        .fine-amount {
            font-family: monospace;
            font-weight: 600;
            color: #dc3545;
        }

        /* Empty history */
        .empty-history {
            text-align: center;
            padding: 3rem 1rem;
        }

        .empty-history .empty-icon {
            font-size: 3rem;
            color: #dee2e6;
            margin-bottom: 1rem;
        }

        .empty-title {
            color: #6c757d;
            margin-bottom: 0.5rem;
        }

        .empty-description {
            color: #adb5bd;
            margin-bottom: 1.5rem;
        }

        /* Statistics */
        .stats-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }

        .stat-item {
            text-align: center;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .stat-item:hover {
            background: #e9ecef;
            transform: scale(1.05);
        }

        .stat-value {
            font-size: 1.5rem;
            color: #2d3436;
            margin-bottom: 0.25rem;
        }

        .stat-label {
            font-size: 0.8rem;
            color: #6c757d;
        }

        /* Quick actions vertical */
        .quick-actions-vertical {
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
        }

        .quick-action-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            border: none;
            border-radius: 10px;
            text-decoration: none;
            transition: all 0.3s ease;
            background: #f8f9fa;
            color: inherit;
            width: 100%;
            text-align: left;
        }

        .quick-action-item:hover:not(.disabled) {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            text-decoration: none;
            color: inherit;
        }

        .quick-action-item.primary {
            background: linear-gradient(135deg, #5ee7df 0%, #66a6ff 100%);
            color: white;
        }

        .quick-action-item.warning {
            background: linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%);
            color: #8b4513;
        }

        .quick-action-item.info {
            background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%);
            color: #6b46c1;
        }

        .quick-action-item.danger {
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            color: #dc3545;
        }

        .action-icon-small {
            width: 35px;
            height: 35px;
            border-radius: 8px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1rem;
        }

        .action-title {
            font-size: 0.95rem;
            margin-bottom: 0.2rem;
        }

        .action-subtitle {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        /* Status details */
        .status-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .status-details {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .status-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0.75rem;
            background: #f8f9fa;
            border-radius: 8px;
        }

        .status-label {
            font-size: 0.85rem;
            color: #495057;
            flex: 1;
        }

        .status-value {
            font-size: 0.85rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .status-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
        }

        .status-indicator.online {
            background: #28a745;
        }

        .status-indicator.offline {
            background: #6c757d;
        }

        .status-indicator.suspended {
            background: #dc3545;
        }

        .user-badge {
            background: #007bff;
            color: white;
            padding: 0.25rem 0.5rem;
            border-radius: 12px;
            font-size: 0.75rem;
        }

        .time-display {
            font-family: monospace;
            color: #007bff;
            font-weight: 600;
        }

        /* Status badge */
        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.3rem;
        }

        .status-badge.success {
            background: #d4edda;
            color: #155724;
        }

        .status-badge.primary {
            background: #cce5ff;
            color: #004085;
        }

        .status-badge.danger {
            background: #f8d7da;
            color: #721c24;
        }

        /* Member icon */
        .member-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        .action-icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            background: rgba(255,255,255,0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .member-avatar-large {
                width: 80px;
                height: 80px;
                font-size: 2rem;
            }

            .detail-row {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .detail-label {
                min-width: auto;
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .status-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .action-title,
            .action-subtitle {
                font-size: 0.85rem;
            }
        }

        /* Modal enhancements */
        .modal-content {
            border: none;
            border-radius: 15px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.2);
        }

        .modal-header {
            background: #f8f9fa;
            border-radius: 15px 15px 0 0;
        }

        /* Animations */
        .modern-card {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>

    <!-- Enhanced JavaScript for Member Show -->
    <script>
        // Khmer number conversion
        const khmerNumbers = {
            '0': '០', '1': '១', '2': '២', '3': '៣', '4': '៤',
            '5': '៥', '6': '៦', '7': '៧', '8': '៨', '9': '៩'
        };

        function toKhmerNumbers(str) {
            return str.toString().replace(/[0-9]/g, function(match) {
                return khmerNumbers[match];
            });
        }

        // Update current time
        function updateCurrentTime() {
            const now = new Date();
            const year = now.getUTCFullYear();
            const month = String(now.getUTCMonth() + 1).padStart(2, '0');
            const day = String(now.getUTCDate()).padStart(2, '0');
            const hours = String(now.getUTCHours()).padStart(2, '0');
            const minutes = String(now.getUTCMinutes()).padStart(2, '0');
            const seconds = String(now.getUTCSeconds()).padStart(2, '0');

            const timeString = `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;
            const khmerTimeString = toKhmerNumbers(timeString);

            const timeElement = document.getElementById('current-time');
            if (timeElement) {
                timeElement.textContent = khmerTimeString;
            }
        }

        // Confirm delete function
        function confirmDelete() {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            // Convert numbers to Khmer
            document.querySelectorAll('.khmer-number').forEach(element => {
                const originalText = element.textContent;
                element.textContent = toKhmerNumbers(originalText);
            });

            // Update time immediately and then every second
            updateCurrentTime();
            setInterval(updateCurrentTime, 1000);

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Add smooth animations with delays
            const cards = document.querySelectorAll('.modern-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${index * 0.1}s`;
            });

            // Enhanced interactions
            document.querySelectorAll('.detail-row').forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.background = '#e3f2fd';
                });
                row.addEventListener('mouseleave', function() {
                    this.style.background = '#f8f9fa';
                });
            });

            // Stat item interactions
            document.querySelectorAll('.stat-item').forEach(item => {
                item.addEventListener('click', function() {
                    this.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        this.style.transform = '';
                    }, 150);
                });
            });

            // Borrowing row highlighting
            document.querySelectorAll('.borrowing-row').forEach(row => {
                row.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = 'rgba(94, 231, 223, 0.05)';
                });
                row.addEventListener('mouseleave', function() {
                    this.style.backgroundColor = '';
                });
            });
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // E for edit
            if (e.key === 'e' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('members.edit', $member) }}";
                }
            }

            // B for back to list
            if (e.key === 'b' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    window.location.href = "{{ route('members.index') }}";
                }
            }

            // Delete key for delete (with confirmation)
            if (e.key === 'Delete' && !e.ctrlKey && !e.metaKey) {
                if (!document.querySelector('input:focus, textarea:focus, select:focus')) {
                    @if($member->activeBorrowings()->count() == 0)
                    confirmDelete();
                    @endif
                }
            }
        });
    </script>
</x-app-layout>



================================================
FILE: resources/views/profile/edit.blade.php
================================================
<x-app-layout>
    <x-slot name="header">
        <h2 class="font-semibold text-xl text-gray-800 leading-tight">
            {{ __('Profile') }}
        </h2>
    </x-slot>

    <div class="py-12">
        <div class="max-w-7xl mx-auto sm:px-6 lg:px-8 space-y-6">
            <div class="p-4 sm:p-8 bg-white shadow sm:rounded-lg">
                <div class="max-w-xl">
                    @include('profile.partials.update-profile-information-form')
                </div>
            </div>

            <div class="p-4 sm:p-8 bg-white shadow sm:rounded-lg">
                <div class="max-w-xl">
                    @include('profile.partials.update-password-form')
                </div>
            </div>

            <div class="p-4 sm:p-8 bg-white shadow sm:rounded-lg">
                <div class="max-w-xl">
                    @include('profile.partials.delete-user-form')
                </div>
            </div>
        </div>
    </div>
</x-app-layout>



================================================
FILE: resources/views/profile/partials/delete-user-form.blade.php
================================================
<section class="space-y-6">
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Delete Account') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Before deleting your account, please download any data or information that you wish to retain.') }}
        </p>
    </header>

    <x-danger-button
        x-data=""
        x-on:click.prevent="$dispatch('open-modal', 'confirm-user-deletion')"
    >{{ __('Delete Account') }}</x-danger-button>

    <x-modal name="confirm-user-deletion" :show="$errors->userDeletion->isNotEmpty()" focusable>
        <form method="post" action="{{ route('profile.destroy') }}" class="p-6">
            @csrf
            @method('delete')

            <h2 class="text-lg font-medium text-gray-900">
                {{ __('Are you sure you want to delete your account?') }}
            </h2>

            <p class="mt-1 text-sm text-gray-600">
                {{ __('Once your account is deleted, all of its resources and data will be permanently deleted. Please enter your password to confirm you would like to permanently delete your account.') }}
            </p>

            <div class="mt-6">
                <x-input-label for="password" value="{{ __('Password') }}" class="sr-only" />

                <x-text-input
                    id="password"
                    name="password"
                    type="password"
                    class="mt-1 block w-3/4"
                    placeholder="{{ __('Password') }}"
                />

                <x-input-error :messages="$errors->userDeletion->get('password')" class="mt-2" />
            </div>

            <div class="mt-6 flex justify-end">
                <x-secondary-button x-on:click="$dispatch('close')">
                    {{ __('Cancel') }}
                </x-secondary-button>

                <x-danger-button class="ms-3">
                    {{ __('Delete Account') }}
                </x-danger-button>
            </div>
        </form>
    </x-modal>
</section>



================================================
FILE: resources/views/profile/partials/update-password-form.blade.php
================================================
<section>
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Update Password') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __('Ensure your account is using a long, random password to stay secure.') }}
        </p>
    </header>

    <form method="post" action="{{ route('password.update') }}" class="mt-6 space-y-6">
        @csrf
        @method('put')

        <div>
            <x-input-label for="update_password_current_password" :value="__('Current Password')" />
            <x-text-input id="update_password_current_password" name="current_password" type="password" class="mt-1 block w-full" autocomplete="current-password" />
            <x-input-error :messages="$errors->updatePassword->get('current_password')" class="mt-2" />
        </div>

        <div>
            <x-input-label for="update_password_password" :value="__('New Password')" />
            <x-text-input id="update_password_password" name="password" type="password" class="mt-1 block w-full" autocomplete="new-password" />
            <x-input-error :messages="$errors->updatePassword->get('password')" class="mt-2" />
        </div>

        <div>
            <x-input-label for="update_password_password_confirmation" :value="__('Confirm Password')" />
            <x-text-input id="update_password_password_confirmation" name="password_confirmation" type="password" class="mt-1 block w-full" autocomplete="new-password" />
            <x-input-error :messages="$errors->updatePassword->get('password_confirmation')" class="mt-2" />
        </div>

        <div class="flex items-center gap-4">
            <x-primary-button>{{ __('Save') }}</x-primary-button>

            @if (session('status') === 'password-updated')
                <p
                    x-data="{ show: true }"
                    x-show="show"
                    x-transition
                    x-init="setTimeout(() => show = false, 2000)"
                    class="text-sm text-gray-600"
                >{{ __('Saved.') }}</p>
            @endif
        </div>
    </form>
</section>



================================================
FILE: resources/views/profile/partials/update-profile-information-form.blade.php
================================================
<section>
    <header>
        <h2 class="text-lg font-medium text-gray-900">
            {{ __('Profile Information') }}
        </h2>

        <p class="mt-1 text-sm text-gray-600">
            {{ __("Update your account's profile information and email address.") }}
        </p>
    </header>

    <form id="send-verification" method="post" action="{{ route('verification.send') }}">
        @csrf
    </form>

    <form method="post" action="{{ route('profile.update') }}" class="mt-6 space-y-6">
        @csrf
        @method('patch')

        <div>
            <x-input-label for="name" :value="__('Name')" />
            <x-text-input id="name" name="name" type="text" class="mt-1 block w-full" :value="old('name', $user->name)" required autofocus autocomplete="name" />
            <x-input-error class="mt-2" :messages="$errors->get('name')" />
        </div>

        <div>
            <x-input-label for="email" :value="__('Email')" />
            <x-text-input id="email" name="email" type="email" class="mt-1 block w-full" :value="old('email', $user->email)" required autocomplete="username" />
            <x-input-error class="mt-2" :messages="$errors->get('email')" />

            @if ($user instanceof \Illuminate\Contracts\Auth\MustVerifyEmail && ! $user->hasVerifiedEmail())
                <div>
                    <p class="text-sm mt-2 text-gray-800">
                        {{ __('Your email address is unverified.') }}

                        <button form="send-verification" class="underline text-sm text-gray-600 hover:text-gray-900 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            {{ __('Click here to re-send the verification email.') }}
                        </button>
                    </p>

                    @if (session('status') === 'verification-link-sent')
                        <p class="mt-2 font-medium text-sm text-green-600">
                            {{ __('A new verification link has been sent to your email address.') }}
                        </p>
                    @endif
                </div>
            @endif
        </div>

        <div class="flex items-center gap-4">
            <x-primary-button>{{ __('Save') }}</x-primary-button>

            @if (session('status') === 'profile-updated')
                <p
                    x-data="{ show: true }"
                    x-show="show"
                    x-transition
                    x-init="setTimeout(() => show = false, 2000)"
                    class="text-sm text-gray-600"
                >{{ __('Saved.') }}</p>
            @endif
        </div>
    </form>
</section>



================================================
FILE: routes/auth.php
================================================
<?php

use App\Http\Controllers\Auth\AuthenticatedSessionController;
use App\Http\Controllers\Auth\ConfirmablePasswordController;
use App\Http\Controllers\Auth\EmailVerificationNotificationController;
use App\Http\Controllers\Auth\EmailVerificationPromptController;
use App\Http\Controllers\Auth\NewPasswordController;
use App\Http\Controllers\Auth\PasswordController;
use App\Http\Controllers\Auth\PasswordResetLinkController;
use App\Http\Controllers\Auth\RegisteredUserController;
use App\Http\Controllers\Auth\VerifyEmailController;
use Illuminate\Support\Facades\Route;

Route::middleware('guest')->group(function () {
    Route::get('register', [RegisteredUserController::class, 'create'])
        ->name('register');

    Route::post('register', [RegisteredUserController::class, 'store']);

    Route::get('login', [AuthenticatedSessionController::class, 'create'])
        ->name('login');

    Route::post('login', [AuthenticatedSessionController::class, 'store']);

    Route::get('forgot-password', [PasswordResetLinkController::class, 'create'])
        ->name('password.request');

    Route::post('forgot-password', [PasswordResetLinkController::class, 'store'])
        ->name('password.email');

    Route::get('reset-password/{token}', [NewPasswordController::class, 'create'])
        ->name('password.reset');

    Route::post('reset-password', [NewPasswordController::class, 'store'])
        ->name('password.store');
});

Route::middleware('auth')->group(function () {
    Route::get('verify-email', EmailVerificationPromptController::class)
        ->name('verification.notice');

    Route::get('verify-email/{id}/{hash}', VerifyEmailController::class)
        ->middleware(['signed', 'throttle:6,1'])
        ->name('verification.verify');

    Route::post('email/verification-notification', [EmailVerificationNotificationController::class, 'store'])
        ->middleware('throttle:6,1')
        ->name('verification.send');

    Route::get('confirm-password', [ConfirmablePasswordController::class, 'show'])
        ->name('password.confirm');

    Route::post('confirm-password', [ConfirmablePasswordController::class, 'store']);

    Route::put('password', [PasswordController::class, 'update'])->name('password.update');

    Route::post('logout', [AuthenticatedSessionController::class, 'destroy'])
        ->name('logout');
});



================================================
FILE: routes/console.php
================================================
<?php

use Illuminate\Foundation\Inspiring;
use Illuminate\Support\Facades\Artisan;

Artisan::command('inspire', function () {
    $this->comment(Inspiring::quote());
})->purpose('Display an inspiring quote');



================================================
FILE: routes/web.php
================================================
<?php

use App\Http\Controllers\ProfileController;
use App\Http\Controllers\DashboardController;
use App\Http\Controllers\BookController;
use App\Http\Controllers\MemberController;
use App\Http\Controllers\BorrowingController;
use Illuminate\Support\Facades\Route;

Route::get('/', [DashboardController::class, 'index'])
    ->middleware(['auth', 'verified'])
    ->name('dashboard');

Route::middleware('auth')->group(function () {
    Route::get('/profile', [ProfileController::class, 'edit'])->name('profile.edit');
    Route::patch('/profile', [ProfileController::class, 'update'])->name('profile.update');
    Route::delete('/profile', [ProfileController::class, 'destroy'])->name('profile.destroy');

    // Books routes
    Route::resource('books', BookController::class);

    // Member routes
    Route::resource('members', MemberController::class);
    Route::get('/members/{member}/export-history', [MemberController::class, 'exportHistory'])->name('members.export-history');

    // Borrowing routes
    Route::resource('borrowings', BorrowingController::class);
    Route::patch('/borrowings/{borrowing}/return', [BorrowingController::class, 'returnBook'])->name('borrowings.return');
    Route::post('/borrowings/{borrowing}/fine', [BorrowingController::class, 'addFine'])->name('borrowings.fine');
    Route::post('/borrowings/{borrowing}/extend', [BorrowingController::class, 'extendDueDate'])->name('borrowings.extend');
    Route::get('/borrowings/export/pdf', [BorrowingController::class, 'exportPDF'])->name('borrowings.export.pdf');

    // API routes for AJAX calls
    Route::get('/api/borrowings/{borrowing}', [BorrowingController::class, 'apiShow']);
    Route::get('/api/borrowings/stats', [BorrowingController::class, 'apiStats']);
});

require __DIR__.'/auth.php';



================================================
FILE: tests/TestCase.php
================================================
<?php

namespace Tests;

use Illuminate\Foundation\Testing\TestCase as BaseTestCase;

abstract class TestCase extends BaseTestCase
{
    //
}



================================================
FILE: tests/Feature/ExampleTest.php
================================================
<?php

namespace Tests\Feature;

// use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_the_application_returns_a_successful_response(): void
    {
        $response = $this->get('/');

        $response->assertStatus(200);
    }
}



================================================
FILE: tests/Feature/ProfileTest.php
================================================
<?php

namespace Tests\Feature;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class ProfileTest extends TestCase
{
    use RefreshDatabase;

    public function test_profile_page_is_displayed(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->get('/profile');

        $response->assertOk();
    }

    public function test_profile_information_can_be_updated(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->patch('/profile', [
                'name' => 'Test User',
                'email' => 'test@example.com',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $user->refresh();

        $this->assertSame('Test User', $user->name);
        $this->assertSame('test@example.com', $user->email);
        $this->assertNull($user->email_verified_at);
    }

    public function test_email_verification_status_is_unchanged_when_the_email_address_is_unchanged(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->patch('/profile', [
                'name' => 'Test User',
                'email' => $user->email,
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $this->assertNotNull($user->refresh()->email_verified_at);
    }

    public function test_user_can_delete_their_account(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->delete('/profile', [
                'password' => 'password',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/');

        $this->assertGuest();
        $this->assertNull($user->fresh());
    }

    public function test_correct_password_must_be_provided_to_delete_account(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->delete('/profile', [
                'password' => 'wrong-password',
            ]);

        $response
            ->assertSessionHasErrorsIn('userDeletion', 'password')
            ->assertRedirect('/profile');

        $this->assertNotNull($user->fresh());
    }
}



================================================
FILE: tests/Feature/Auth/AuthenticationTest.php
================================================
<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class AuthenticationTest extends TestCase
{
    use RefreshDatabase;

    public function test_login_screen_can_be_rendered(): void
    {
        $response = $this->get('/login');

        $response->assertStatus(200);
    }

    public function test_users_can_authenticate_using_the_login_screen(): void
    {
        $user = User::factory()->create();

        $response = $this->post('/login', [
            'email' => $user->email,
            'password' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }

    public function test_users_can_not_authenticate_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $this->post('/login', [
            'email' => $user->email,
            'password' => 'wrong-password',
        ]);

        $this->assertGuest();
    }

    public function test_users_can_logout(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/logout');

        $this->assertGuest();
        $response->assertRedirect('/');
    }
}



================================================
FILE: tests/Feature/Auth/EmailVerificationTest.php
================================================
<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Auth\Events\Verified;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\URL;
use Tests\TestCase;

class EmailVerificationTest extends TestCase
{
    use RefreshDatabase;

    public function test_email_verification_screen_can_be_rendered(): void
    {
        $user = User::factory()->unverified()->create();

        $response = $this->actingAs($user)->get('/verify-email');

        $response->assertStatus(200);
    }

    public function test_email_can_be_verified(): void
    {
        $user = User::factory()->unverified()->create();

        Event::fake();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1($user->email)]
        );

        $response = $this->actingAs($user)->get($verificationUrl);

        Event::assertDispatched(Verified::class);
        $this->assertTrue($user->fresh()->hasVerifiedEmail());
        $response->assertRedirect(route('dashboard', absolute: false).'?verified=1');
    }

    public function test_email_is_not_verified_with_invalid_hash(): void
    {
        $user = User::factory()->unverified()->create();

        $verificationUrl = URL::temporarySignedRoute(
            'verification.verify',
            now()->addMinutes(60),
            ['id' => $user->id, 'hash' => sha1('wrong-email')]
        );

        $this->actingAs($user)->get($verificationUrl);

        $this->assertFalse($user->fresh()->hasVerifiedEmail());
    }
}



================================================
FILE: tests/Feature/Auth/PasswordConfirmationTest.php
================================================
<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class PasswordConfirmationTest extends TestCase
{
    use RefreshDatabase;

    public function test_confirm_password_screen_can_be_rendered(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->get('/confirm-password');

        $response->assertStatus(200);
    }

    public function test_password_can_be_confirmed(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/confirm-password', [
            'password' => 'password',
        ]);

        $response->assertRedirect();
        $response->assertSessionHasNoErrors();
    }

    public function test_password_is_not_confirmed_with_invalid_password(): void
    {
        $user = User::factory()->create();

        $response = $this->actingAs($user)->post('/confirm-password', [
            'password' => 'wrong-password',
        ]);

        $response->assertSessionHasErrors();
    }
}



================================================
FILE: tests/Feature/Auth/PasswordResetTest.php
================================================
<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Auth\Notifications\ResetPassword;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Notification;
use Tests\TestCase;

class PasswordResetTest extends TestCase
{
    use RefreshDatabase;

    public function test_reset_password_link_screen_can_be_rendered(): void
    {
        $response = $this->get('/forgot-password');

        $response->assertStatus(200);
    }

    public function test_reset_password_link_can_be_requested(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class);
    }

    public function test_reset_password_screen_can_be_rendered(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class, function ($notification) {
            $response = $this->get('/reset-password/'.$notification->token);

            $response->assertStatus(200);

            return true;
        });
    }

    public function test_password_can_be_reset_with_valid_token(): void
    {
        Notification::fake();

        $user = User::factory()->create();

        $this->post('/forgot-password', ['email' => $user->email]);

        Notification::assertSentTo($user, ResetPassword::class, function ($notification) use ($user) {
            $response = $this->post('/reset-password', [
                'token' => $notification->token,
                'email' => $user->email,
                'password' => 'password',
                'password_confirmation' => 'password',
            ]);

            $response
                ->assertSessionHasNoErrors()
                ->assertRedirect(route('login'));

            return true;
        });
    }
}



================================================
FILE: tests/Feature/Auth/PasswordUpdateTest.php
================================================
<?php

namespace Tests\Feature\Auth;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class PasswordUpdateTest extends TestCase
{
    use RefreshDatabase;

    public function test_password_can_be_updated(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->put('/password', [
                'current_password' => 'password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ]);

        $response
            ->assertSessionHasNoErrors()
            ->assertRedirect('/profile');

        $this->assertTrue(Hash::check('new-password', $user->refresh()->password));
    }

    public function test_correct_password_must_be_provided_to_update_password(): void
    {
        $user = User::factory()->create();

        $response = $this
            ->actingAs($user)
            ->from('/profile')
            ->put('/password', [
                'current_password' => 'wrong-password',
                'password' => 'new-password',
                'password_confirmation' => 'new-password',
            ]);

        $response
            ->assertSessionHasErrorsIn('updatePassword', 'current_password')
            ->assertRedirect('/profile');
    }
}



================================================
FILE: tests/Feature/Auth/RegistrationTest.php
================================================
<?php

namespace Tests\Feature\Auth;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class RegistrationTest extends TestCase
{
    use RefreshDatabase;

    public function test_registration_screen_can_be_rendered(): void
    {
        $response = $this->get('/register');

        $response->assertStatus(200);
    }

    public function test_new_users_can_register(): void
    {
        $response = $this->post('/register', [
            'name' => 'Test User',
            'email' => 'test@example.com',
            'password' => 'password',
            'password_confirmation' => 'password',
        ]);

        $this->assertAuthenticated();
        $response->assertRedirect(route('dashboard', absolute: false));
    }
}



================================================
FILE: tests/Unit/ExampleTest.php
================================================
<?php

namespace Tests\Unit;

use PHPUnit\Framework\TestCase;

class ExampleTest extends TestCase
{
    /**
     * A basic test example.
     */
    public function test_that_true_is_true(): void
    {
        $this->assertTrue(true);
    }
}


